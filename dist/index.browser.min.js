parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"../src/enums/ConnectionType.js":[function(require,module,exports) {
"use strict";var O;Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConnectionType=void 0,function(O){O[O.NO_CONNECTION=0]="NO_CONNECTION",O[O.ALL_TO_ALL=1]="ALL_TO_ALL",O[O.ONE_TO_ONE=2]="ONE_TO_ONE",O[O.POOLING=3]="POOLING"}(O=exports.ConnectionType||(exports.ConnectionType={}));
},{}],"../src/enums/NodeType.js":[function(require,module,exports) {
"use strict";var e,o,N;Object.defineProperty(exports,"__esModule",{value:!0}),exports.NoiseNodeType=exports.PoolNodeType=exports.NodeType=void 0,function(e){e[e.INPUT=0]="INPUT",e[e.HIDDEN=1]="HIDDEN",e[e.OUTPUT=2]="OUTPUT"}(e=exports.NodeType||(exports.NodeType={})),function(e){e[e.MAX_POOLING=0]="MAX_POOLING",e[e.AVG_POOLING=1]="AVG_POOLING",e[e.MIN_POOLING=2]="MIN_POOLING"}(o=exports.PoolNodeType||(exports.PoolNodeType={})),function(e){e[e.GAUSSIAN_NOISE=0]="GAUSSIAN_NOISE"}(N=exports.NoiseNodeType||(exports.NoiseNodeType={}));
},{}],"../src/utils/Utils.js":[function(require,module,exports) {
"use strict";function r(t){if(Array.isArray(t)){if(0===t.length)throw new RangeError("Cannot pick from an empty array");return t[e(0,t.length)]}return r(Array.from(t))}function e(r,e){return Math.floor(Math.random()*(e-r)+r)}function t(r,e){return Math.random()*(e-r)+r}function n(){return Math.random()>=.5}function o(r,e){const t=r.indexOf(e);return-1!==t&&(r.splice(t,1),!0)}function a(r){for(let t=r.length-1;t>0;t--){const n=e(0,t),o=r[t];r[t]=r[n],r[n]=o}}function s(r){if(0===r.length)throw new RangeError;let e=r[0];for(let t=1;t<r.length;t++)r[t]>e&&(e=r[t]);return e}function u(r){if(0===r.length)throw new RangeError;let e=r[0],t=0;for(let n=1;n<r.length;n++)r[n]>e&&(e=r[n],t=n);return t}function i(r){if(0===r.length)throw new RangeError;let e=r[0],t=0;for(let n=1;n<r.length;n++)r[n]<e&&(e=r[n],t=n);return t}function l(r){if(0===r.length)throw new RangeError;let e=r[0];for(let t=1;t<r.length;t++)r[t]<e&&(e=r[t]);return e}function f(r){return x(r)/r.length}function x(r){if(0===r.length)throw new RangeError;let e=0;for(const t of r)e+=t;return e}function p(r=0,e=2){let t=0;for(let n=0;n<10;n++)t+=Math.random();return e*t/10+r-.5*e}function h(r,e){return.5*(r+e)*(r+e+1)+e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.pairing=exports.generateGaussian=exports.avg=exports.sum=exports.min=exports.minValueIndex=exports.maxValueIndex=exports.max=exports.shuffle=exports.removeFromArray=exports.randBoolean=exports.randDouble=exports.randInt=exports.pickRandom=void 0,exports.pickRandom=r,exports.randInt=e,exports.randDouble=t,exports.randBoolean=n,exports.removeFromArray=o,exports.shuffle=a,exports.max=s,exports.maxValueIndex=u,exports.minValueIndex=i,exports.min=l,exports.avg=f,exports.sum=x,exports.generateGaussian=p,exports.pairing=h;
},{}],"../src/methods/Mutation.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SwapNodesMutation=exports.SubBackConnectionMutation=exports.AddBackConnectionMutation=exports.SubSelfConnectionMutation=exports.AddSelfConnectionMutation=exports.SubGateMutation=exports.AddGateMutation=exports.ModActivationMutation=exports.ModBiasMutation=exports.ModWeightMutation=exports.SubConnectionMutation=exports.AddConnectionMutation=exports.SubNodeMutation=exports.AddNodeMutation=exports.Mutation=exports.ONLY_STRUCTURE=exports.NO_STRUCTURE_MUTATIONS=exports.FEEDFORWARD_MUTATIONS=exports.ALL_MUTATIONS=void 0;const t=require("../architecture/Node"),e=require("../enums/NodeType"),n=require("../utils/Utils");class o{}exports.Mutation=o;class s extends o{constructor(t=!0){super(),this.randomActivation=t}mutate(o,s={}){if(void 0!==s.maxNodes&&o.nodes.length>=s.maxNodes)return;const i=new t.Node(e.NodeType.HIDDEN);this.randomActivation&&i.mutateActivation();const a=n.pickRandom(Array.from(o.connections)),c=a.from,d=a.to;o.disconnect(c,d);const r=Math.max(o.inputSize,1+o.nodes.indexOf(c));o.nodes.splice(r,0,i);const u=o.connect(c,i,1),p=o.connect(i,d,a.weight);null!==a.gateNode&&(n.randBoolean()?o.addGate(a.gateNode,u):o.addGate(a.gateNode,p))}}exports.AddNodeMutation=s;class i extends o{constructor(t=!0){super(),this.keepGates=t}mutate(t){const e=t.nodes.filter(t=>void 0!==t&&t.isHiddenNode());e.length>0&&t.removeNode(n.pickRandom(e),this.keepGates)}}exports.SubNodeMutation=i;class a extends o{mutate(t,e={}){if(void 0!==e.maxConnections&&t.connections.size>=e.maxConnections)return;const o=[];for(let n=0;n<t.nodes.length-t.outputSize;n++){const e=t.nodes[n];for(let s=Math.max(n+1,t.inputSize);s<t.nodes.length;s++){const n=t.nodes[s];e.isProjectingTo(n)||o.push([e,n])}}if(o.length>0){const e=n.pickRandom(o);t.connect(e[0],e[1])}}}exports.AddConnectionMutation=a;class c extends o{mutate(t){const e=Array.from(t.connections).filter(t=>t.from.outgoing.size>1).filter(t=>t.to.incoming.size>1).filter(e=>t.nodes.indexOf(e.to)>t.nodes.indexOf(e.from));if(e.length>0){const o=n.pickRandom(e);t.disconnect(o.from,o.to)}}}exports.SubConnectionMutation=c;class d extends o{constructor(t=-1,e=1){super(),this.min=t,this.max=e}mutate(t){n.pickRandom(Array.from(t.connections)).weight+=n.randDouble(this.min,this.max)}}exports.ModWeightMutation=d;class r extends o{constructor(t=-1,e=1){super(),this.min=t,this.max=e}mutate(t){n.pickRandom(t.nodes.filter(t=>!t.isInputNode())).mutateBias(this)}}exports.ModBiasMutation=r;class u extends o{constructor(t=!1){super(),this.mutateOutput=t}mutate(t,e={}){const o=this.mutateOutput?t.nodes.filter(t=>!t.isInputNode()):t.nodes.filter(t=>t.isHiddenNode());o.length>0&&n.pickRandom(o).mutateActivation(e.allowedActivations)}}exports.ModActivationMutation=u;class p extends o{mutate(t){const e=t.nodes.filter(t=>!t.isInputNode()).filter(t=>0===t.selfConnection.weight);if(e.length>0){const o=n.pickRandom(e);t.connect(o,o)}}}exports.AddSelfConnectionMutation=p;class m extends o{mutate(t){const e=Array.from(t.connections).filter(t=>t.from===t.to);if(e.length>0){const o=n.pickRandom(e);t.disconnect(o.from,o.to)}}}exports.SubSelfConnectionMutation=m;class l extends o{mutate(t,e={}){if(void 0!==e.maxGates&&t.gates.size>=e.maxGates)return;const o=Array.from(t.connections).filter(t=>null===t.gateNode);if(o.length>0){const e=n.pickRandom(t.nodes.filter(t=>!t.isInputNode())),s=n.pickRandom(o);t.addGate(e,s)}}}exports.AddGateMutation=l;class x extends o{mutate(t){t.gates.size>0&&t.removeGate(n.pickRandom(Array.from(t.gates)))}}exports.SubGateMutation=x;class f extends o{mutate(t){const e=[];for(let n=t.inputSize;n<t.nodes.length;n++){const o=t.nodes[n];for(let s=t.inputSize;s<n;s++){const n=t.nodes[s];o.isProjectingTo(n)||e.push([o,n])}}if(e.length>0){const o=n.pickRandom(e);t.connect(o[0],o[1])}}}exports.AddBackConnectionMutation=f;class M extends o{mutate(t){const e=Array.from(t.connections).filter(t=>t.from.outgoing.size>1).filter(t=>t.to.incoming.size>1).filter(e=>t.nodes.indexOf(e.from)>t.nodes.indexOf(e.to));if(e.length>0){const o=n.pickRandom(e);t.disconnect(o.from,o.to)}}}exports.SubBackConnectionMutation=M;class h extends o{constructor(t=!1){super(),this.mutateOutput=t}mutate(t){const e=this.mutateOutput?t.nodes.filter(t=>void 0!==t&&!t.isInputNode()):t.nodes.filter(t=>void 0!==t&&t.isHiddenNode());if(e.length>=2){const t=n.pickRandom(e),o=n.pickRandom(e.filter(e=>e!==t)),s=t.bias,i=t.squash;t.bias=o.bias,t.squash=o.squash,o.bias=s,o.squash=i}}}exports.SwapNodesMutation=h;const w=[new s,new i,new a,new c,new d,new r,new u,new l,new x,new p,new m,new f,new M,new h];exports.ALL_MUTATIONS=w;const N=[new s,new i,new a,new c,new d,new r,new u,new h];exports.FEEDFORWARD_MUTATIONS=N;const g=[new d,new r,new u];exports.NO_STRUCTURE_MUTATIONS=g;const A=[new s,new i,new a,new c,new l,new x,new p,new m,new f,new M,new h];exports.ONLY_STRUCTURE=A;
},{"../architecture/Node":"../src/architecture/Node.js","../enums/NodeType":"../src/enums/NodeType.js","../utils/Utils":"../src/utils/Utils.js"}],"../src/architecture/Connection.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Connection=void 0;const t=require("../utils/Utils");class e{constructor(t,e,i,s){this.from=t,this.to=e,this.weight=null!=i?i:0,this.gain=1,this.eligibility=0,this.deltaWeightsPrevious=0,this.deltaWeightsTotal=0,this.xTrace=new Map,s?(this.gateNode=s,s.addGate(this)):this.gateNode=null}toJSON(){return{fromIndex:this.from.index,toIndex:this.to.index,gateNodeIndex:null===this.gateNode?null:this.gateNode.index,weight:this.weight}}getInnovationID(){return t.pairing(this.from.index,this.to.index)}}exports.Connection=e;
},{"../utils/Utils":"../src/utils/Utils.js"}],"../src/architecture/Node.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Node=void 0;const t=require("activations/build/src"),i=require("../enums/NodeType"),e=require("../methods/Mutation"),s=require("../utils/Utils"),o=require("./Connection");class a{constructor(e=i.NodeType.HIDDEN){this.type=e,this.bias=s.randDouble(-1,1),this.squash=t.Logistic,this.activation=0,this.derivativeState=1,this.state=0,this.old=0,this.mask=1,this.deltaBiasPrevious=0,this.deltaBiasTotal=0,this.incoming=new Set,this.outgoing=new Set,this.gated=new Set,this.selfConnection=new o.Connection(this,this,0),this.errorResponsibility=0,this.errorProjected=0,this.errorGated=0,this.index=NaN}fromJSON(i){var e,o,a,n;return this.bias=null!==(e=i.bias)&&void 0!==e?e:s.randDouble(-1,1),this.type=i.type,this.squash=null!==(o=i.squash)&&void 0!==o?o:t.Logistic,this.mask=null!==(a=i.mask)&&void 0!==a?a:1,this.index=null!==(n=i.index)&&void 0!==n?n:NaN,this}clear(){this.incoming.forEach(t=>{t.eligibility=0,t.xTrace.clear()}),this.gated.forEach(t=>t.gain=0),this.errorResponsibility=this.errorProjected=this.errorGated=0,this.old=this.state=this.activation=0}mutateBias(t=new e.ModBiasMutation){this.bias+=s.randDouble(t.min,t.max)}mutateActivation(i=Object.values(t.ALL_ACTIVATIONS)){const e=i.filter(t=>t!==this.squash);e.length>0&&(this.squash=s.pickRandom(e))}isProjectedBy(t){return t===this?0!==this.selfConnection.weight:Array.from(this.incoming).map(t=>t.from).includes(t)}isProjectingTo(t){return t===this?0!==this.selfConnection.weight:Array.from(this.outgoing).map(t=>t.to).includes(t)}addGate(t){this.gated.add(t),t.gateNode=this}removeGate(t){this.gated.delete(t),t.gateNode=null,t.gain=1}connect(t,i=1,e=!1){if(t===this)return this.selfConnection.weight=i,this.selfConnection;if(this.isProjectingTo(t))throw new ReferenceError("There is already a connection!");{const s=new o.Connection(this,t,i);return this.outgoing.add(s),t.incoming.add(s),e&&t.connect(this),s}}disconnect(t,i=!1){if(t===this)return this.selfConnection.weight=0,this.selfConnection;const e=Array.from(this.outgoing).filter(i=>i.to===t);if(0===e.length)throw new Error("No Connection found");const s=e[0];return this.outgoing.delete(s),s.to.incoming.delete(s),void 0!==s.gateNode&&null!==s.gateNode&&s.gateNode.removeGate(s),i&&t.disconnect(this),s}propagate(t,i={}){var e,s,o;i.momentum=null!==(e=i.momentum)&&void 0!==e?e:0,i.rate=null!==(s=i.rate)&&void 0!==s?s:.3,i.update=null===(o=i.update)||void 0===o||o,void 0!==t&&Number.isFinite(t)?this.errorResponsibility=this.errorProjected=t-this.activation:(this.errorProjected=0,this.outgoing.forEach(t=>{this.errorProjected+=t.to.errorResponsibility*t.weight*t.gain}),this.errorProjected*=this.derivativeState,this.errorGated=0,this.gated.forEach(t=>{let i;i=t.to.selfConnection.gateNode===this?t.to.old+t.weight*t.from.activation:t.weight*t.from.activation,this.errorGated+=t.to.errorResponsibility*i}),this.errorGated*=this.derivativeState,this.errorResponsibility=this.errorProjected+this.errorGated),this.incoming.forEach(t=>{var e,s;let o=this.errorProjected*t.eligibility;t.xTrace.forEach((t,i)=>o+=i.errorResponsibility*t),t.deltaWeightsTotal+=(null!==(e=i.rate)&&void 0!==e?e:.3)*o*this.mask,i.update&&(t.deltaWeightsTotal+=(null!==(s=i.momentum)&&void 0!==s?s:0)*t.deltaWeightsPrevious,t.weight+=t.deltaWeightsTotal,t.deltaWeightsPrevious=t.deltaWeightsTotal,t.deltaWeightsTotal=0)}),this.deltaBiasTotal+=i.rate*this.errorResponsibility,i.update&&(this.deltaBiasTotal+=i.momentum*this.deltaBiasPrevious,this.bias+=this.deltaBiasTotal,this.deltaBiasPrevious=this.deltaBiasTotal,this.deltaBiasTotal=0)}activate(t,i=!0){if(void 0!==t)return this.activation=t;if(this.isInputNode())throw new ReferenceError("There is no input given to an input node!");if(i){this.old=this.state,this.state=this.selfConnection.gain*this.selfConnection.weight*this.state+this.bias,this.incoming.forEach(t=>{this.state+=t.from.activation*t.weight*t.gain}),this.activation=this.squash(this.state,!1)*this.mask,this.derivativeState=this.squash(this.state,!0);const t=[],i=[];return this.gated.forEach(e=>{e.gain=this.activation;const s=t.indexOf(e.to);s>-1?i[s]+=e.weight*e.from.activation:(t.push(e.to),e.to.selfConnection.gateNode===this?i.push(e.weight*e.from.activation+e.to.old):i.push(e.weight*e.from.activation))}),this.incoming.forEach(e=>{var s;e.eligibility=this.selfConnection.gain*this.selfConnection.weight*e.eligibility+e.from.activation*e.gain;for(let o=0;o<t.length;o++){const a=t[o],n=i[o];e.xTrace.has(a)?e.xTrace.set(a,a.selfConnection.gain*a.selfConnection.weight*(null!==(s=e.xTrace.get(a))&&void 0!==s?s:0)+this.derivativeState*e.eligibility*n):e.xTrace.set(a,this.derivativeState*e.eligibility*n)}}),this.activation}return this.isInputNode()?this.activation=0:(this.state=this.selfConnection.gain*this.selfConnection.weight*this.state+this.bias,this.incoming.forEach(t=>this.state+=t.from.activation*t.weight*t.gain),this.activation=this.squash(this.state,!1),this.gated.forEach(t=>t.gain=this.activation),this.activation)}toJSON(){return{bias:this.bias,type:this.type,squash:this.squash,mask:this.mask,index:this.index}}isInputNode(){return this.type===i.NodeType.INPUT}isHiddenNode(){return this.type===i.NodeType.HIDDEN}isOutputNode(){return this.type===i.NodeType.OUTPUT}setBias(t){return this.bias=t,this}setActivationType(t){return this.squash=t,this}}exports.Node=a;
},{"../enums/NodeType":"../src/enums/NodeType.js","../methods/Mutation":"../src/methods/Mutation.js","../utils/Utils":"../src/utils/Utils.js","./Connection":"../src/architecture/Connection.js"}],"../src/enums/GatingType.js":[function(require,module,exports) {
"use strict";var e;Object.defineProperty(exports,"__esModule",{value:!0}),exports.GatingType=void 0,function(e){e[e.INPUT=0]="INPUT",e[e.SELF=1]="SELF",e[e.OUTPUT=2]="OUTPUT"}(e=exports.GatingType||(exports.GatingType={}));
},{}],"../src/architecture/Layers/Layer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Layer=void 0;const e=require("../../enums/ConnectionType"),n=require("../../enums/GatingType");class t{constructor(e){this.outputSize=e,this.nodes=[],this.inputNodes=new Set,this.outputNodes=new Set,this.connections=[],this.gates=[]}static connect(n,o,r=e.ConnectionType.ALL_TO_ALL,s=1){if(r===e.ConnectionType.NO_CONNECTION)throw new ReferenceError("Cannot connect with 'NO_CONNECTION' connection type");const c=Array.from(n instanceof t?n.outputNodes:n),i=Array.from(o instanceof t?o.inputNodes:o);if(0===i.length)throw new ReferenceError("Target from has no input nodes!");if(0===c.length)throw new ReferenceError("This from has no output nodes!");const a=[];if(r===e.ConnectionType.ALL_TO_ALL)c.forEach(e=>{i.forEach(n=>{a.push(e.connect(n,s))})});else if(r===e.ConnectionType.ONE_TO_ONE){if(c.length!==i.length)throw new RangeError("Can't connect one to one! Number of output nodes from are unequal number of incoming nodes from next layer!");for(let e=0;e<c.length;e++)a.push(c[e].connect(i[e],s))}else if(r===e.ConnectionType.POOLING){const e=i.length/c.length;a.push(...c.map((n,t)=>n.connect(i[Math.floor(t*e)],s)))}return a}static gate(e,t,o){const r=[];switch(o){case n.GatingType.INPUT:{const n=Array.from(new Set(t.map(e=>e.to)));for(let o=0;o<n.length;o++){const s=n[o],c=e[o%e.length];s.incoming.forEach(e=>{t.includes(e)&&(c.addGate(e),r.push(e))})}break}case n.GatingType.SELF:{const n=Array.from(new Set(t.map(e=>e.from)));for(let o=0;o<n.length;o++)t.includes(n[o].selfConnection)&&(e[o%e.length].addGate(n[o].selfConnection),r.push(n[o].selfConnection));break}case n.GatingType.OUTPUT:{const n=Array.from(new Set(t.map(e=>e.from)));for(let o=0;o<n.length;o++){const s=n[o],c=e[o%e.length];s.outgoing.forEach(e=>{t.includes(e)&&(c.addGate(e),r.push(e))})}break}}return r}}exports.Layer=t;
},{"../../enums/ConnectionType":"../src/enums/ConnectionType.js","../../enums/GatingType":"../src/enums/GatingType.js"}],"../src/architecture/Nodes/ConstantNode.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConstantNode=void 0;const e=require("activations/build/src"),o=require("../../enums/NodeType"),t=require("../Node");class n extends t.Node{constructor(){super(o.NodeType.HIDDEN),this.bias=1}fromJSON(o){var t,n;return this.index=null!==(t=o.index)&&void 0!==t?t:-1,this.squash=null!==(n=o.squash)&&void 0!==n?n:e.Identitiy,this}toJSON(){return{index:this.index,squash:this.squash}}mutateBias(){throw new ReferenceError("Cannot mutate a pool node!")}mutateActivation(){throw new ReferenceError("Cannot mutate a pool node!")}addGate(){throw new ReferenceError("A pool node can't gate a connection!")}removeGate(){throw new ReferenceError("A pool node can't gate a connection!")}setBias(){throw new ReferenceError("Cannot set the bias of a pool node!")}}exports.ConstantNode=n;
},{"../../enums/NodeType":"../src/enums/NodeType.js","../Node":"../src/architecture/Node.js"}],"../src/architecture/Nodes/NoiseNode.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NoiseNode=void 0;const t=require("../../enums/NodeType"),e=require("../../utils/Utils"),i=require("./ConstantNode");class s extends i.ConstantNode{constructor(e={}){var i;super(),this.noiseType=null!==(i=e.noiseType)&&void 0!==i?i:t.NoiseNodeType.GAUSSIAN_NOISE,this.options=e}activate(){var i,s,o,a;this.old=this.state;const r=Array.from(this.incoming).map(t=>t.from.activation*t.weight*t.gain);switch(this.noiseType){case t.NoiseNodeType.GAUSSIAN_NOISE:this.state=e.avg(r)+e.generateGaussian(null!==(s=null===(i=this.options.gaussian)||void 0===i?void 0:i.mean)&&void 0!==s?s:0,null!==(a=null===(o=this.options.gaussian)||void 0===o?void 0:o.deviation)&&void 0!==a?a:2);break;default:throw new ReferenceError("Cannot activate this noise type!")}return this.activation=this.squash(this.state,!1)*this.mask,this.derivativeState=this.squash(this.state,!0),this.activation}propagate(t,i={}){var s,o,a;i.momentum=null!==(s=i.momentum)&&void 0!==s?s:0,i.rate=null!==(o=i.rate)&&void 0!==o?o:.3,i.update=null===(a=i.update)||void 0===a||a;const r=Array.from(this.outgoing).map(t=>t.to.errorResponsibility*t.weight*t.gain);this.errorResponsibility=this.errorProjected=e.sum(r)*this.derivativeState,this.incoming.forEach(t=>{var e,s;let o=this.errorProjected*t.eligibility;t.xTrace.forEach((t,e)=>{o+=e.errorResponsibility*t}),t.deltaWeightsTotal+=(null!==(e=i.rate)&&void 0!==e?e:.3)*o*this.mask,i.update&&(t.deltaWeightsTotal+=(null!==(s=i.momentum)&&void 0!==s?s:0)*t.deltaWeightsPrevious,t.weight+=t.deltaWeightsTotal,t.deltaWeightsPrevious=t.deltaWeightsTotal,t.deltaWeightsTotal=0)})}}exports.NoiseNode=s;
},{"../../enums/NodeType":"../src/enums/NodeType.js","../../utils/Utils":"../src/utils/Utils.js","./ConstantNode":"../src/architecture/Nodes/ConstantNode.js"}],"../src/architecture/Layers/NoiseLayers/NoiseLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NoiseLayer=void 0;const e=require("activations/build/src"),o=require("../../../enums/ConnectionType"),t=require("../../../enums/NodeType"),i=require("../../Nodes/NoiseNode"),s=require("../Layer");class n extends s.Layer{constructor(o,s={}){var n;super(o);const r=null!==(n=s.activation)&&void 0!==n?n:e.Identitiy;for(let e=0;e<o;e++)this.inputNodes.add(new i.NoiseNode({noiseType:t.NoiseNodeType.GAUSSIAN_NOISE,gaussian:s}).setActivationType(r));this.outputNodes=this.inputNodes,this.nodes.push(...Array.from(this.inputNodes))}getDefaultIncomingConnectionType(){return o.ConnectionType.ONE_TO_ONE}connectionTypeisAllowed(e){return e===o.ConnectionType.ONE_TO_ONE}}exports.NoiseLayer=n;
},{"../../../enums/ConnectionType":"../src/enums/ConnectionType.js","../../../enums/NodeType":"../src/enums/NodeType.js","../../Nodes/NoiseNode":"../src/architecture/Nodes/NoiseNode.js","../Layer":"../src/architecture/Layers/Layer.js"}],"../src/architecture/Layers/CoreLayers/InputLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.InputLayer=void 0;const e=require("../../../enums/ConnectionType"),o=require("../../../enums/NodeType"),n=require("../../Node"),t=require("../Layer"),s=require("../NoiseLayers/NoiseLayer");class r extends t.Layer{constructor(e,r={}){super(e);for(let t=0;t<e;t++){const e=new n.Node(o.NodeType.INPUT);this.nodes.push(e)}if(r.noise){const e=new s.NoiseLayer(r.noise);e.outputNodes.forEach(e=>this.outputNodes.add(e)),this.connections.push(...t.Layer.connect(this.nodes,e,e.getDefaultIncomingConnectionType()))}else this.nodes.forEach(e=>this.outputNodes.add(e))}getDefaultIncomingConnectionType(){return e.ConnectionType.NO_CONNECTION}connectionTypeisAllowed(o){return o===e.ConnectionType.NO_CONNECTION}}exports.InputLayer=r;
},{"../../../enums/ConnectionType":"../src/enums/ConnectionType.js","../../../enums/NodeType":"../src/enums/NodeType.js","../../Node":"../src/architecture/Node.js","../Layer":"../src/architecture/Layers/Layer.js","../NoiseLayers/NoiseLayer":"../src/architecture/Layers/NoiseLayers/NoiseLayer.js"}],"../src/architecture/Layers/CoreLayers/OutputLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.OutputLayer=void 0;const e=require("activations/build/src"),t=require("../../../enums/ConnectionType"),n=require("../../../enums/NodeType"),o=require("../../Node"),r=require("../Layer");class i extends r.Layer{constructor(t,r={}){var i;super(t);const u=null!==(i=r.activation)&&void 0!==i?i:e.Identitiy;for(let e=0;e<t;e++)this.inputNodes.add(new o.Node(n.NodeType.OUTPUT).setActivationType(u));this.nodes.push(...Array.from(this.inputNodes))}connect(){throw new ReferenceError("Could not connect an OutputLayer!")}connectionTypeisAllowed(){return!0}getDefaultIncomingConnectionType(){return t.ConnectionType.ALL_TO_ALL}}exports.OutputLayer=i;
},{"../../../enums/ConnectionType":"../src/enums/ConnectionType.js","../../../enums/NodeType":"../src/enums/NodeType.js","../../Node":"../src/architecture/Node.js","../Layer":"../src/architecture/Layers/Layer.js"}],"../src/methods/Loss.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ALL_LOSSES=exports.HINGELoss=exports.MSLELoss=exports.WAPELoss=exports.MAPELoss=exports.MAELoss=exports.BinaryLoss=exports.MBELoss=exports.MSELoss=void 0;const s=require("../utils/Utils");exports.MSELoss=function(s,o){let t=0;return o.forEach((o,e)=>{t+=Math.pow(s[e]-o,2)}),t/o.length},exports.MBELoss=function(s,o){let t=0;return o.forEach((o,e)=>{t+=s[e]-o}),t/o.length},exports.BinaryLoss=function(s,o){let t=0;return o.forEach((o,e)=>{t+=Math.round(2*s[e])!==Math.round(2*o)?1:0}),t/o.length},exports.MAELoss=function(s,o){let t=0;return o.forEach((o,e)=>{t+=Math.abs(s[e]-o)}),t/o.length},exports.MAPELoss=function(s,o){let t=0;return o.forEach((o,e)=>{t+=Math.abs((o-s[e])/Math.max(s[e],1e-15))}),t/o.length},exports.WAPELoss=function(o,t){let e=0;return t.forEach((s,t)=>{e+=Math.abs(o[t]-s)}),e/s.sum(o)},exports.MSLELoss=function(s,o){let t=0;return o.forEach((o,e)=>{t+=Math.log(Math.max(s[e],1e-15))-Math.log(Math.max(o,1e-15))}),t/o.length},exports.HINGELoss=function(s,o){let t=0;return o.forEach((o,e)=>{t+=Math.max(0,1-o*s[e])}),t/o.length},exports.ALL_LOSSES={MSELoss:exports.MSELoss,MBELoss:exports.MBELoss,BinaryLoss:exports.BinaryLoss,MAELoss:exports.MAELoss,MAPELoss:exports.MAPELoss,WAPELoss:exports.WAPELoss,MSLELoss:exports.MSLELoss,HINGELoss:exports.HINGELoss};
},{"../utils/Utils":"../src/utils/Utils.js"}],"../src/methods/Selection.js":[function(require,module,exports) {
"use strict";var e=this&&this.__createBinding||(Object.create?function(e,t,o,r){void 0===r&&(r=o),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[o]}})}:function(e,t,o,r){void 0===r&&(r=o),e[r]=t[o]}),t=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(o){if(o&&o.__esModule)return o;var r={};if(null!=o)for(var s in o)Object.hasOwnProperty.call(o,s)&&e(r,o,s);return t(r,o),r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.TournamentSelection=exports.PowerSelection=exports.FitnessProportionateSelection=exports.Selection=void 0;const r=o(require("timsort")),s=require("../utils/Utils");class i{}exports.Selection=i;class n extends i{select(e){var t,o,r;let i=0,n=0;for(const s of e)n=Math.min(null!==(t=s.score)&&void 0!==t?t:n,n),i+=null!==(o=s.score)&&void 0!==o?o:0;i+=(n=Math.abs(n))*e.length;const c=s.randDouble(0,i);let l=0;for(const s of e)if(c<(l+=(null!==(r=s.score)&&void 0!==r?r:0)+n))return s;return s.pickRandom(e)}}exports.FitnessProportionateSelection=n;class c extends i{constructor(e=4){super(),this.power=e}select(e){return e[Math.floor(Math.pow(Math.random(),this.power)*e.length)]}}exports.PowerSelection=c;class l extends i{constructor(e=5,t=.5){super(),this.size=e,this.probability=t}select(e){if(this.size>e.length)throw new Error("Your tournament size should be lower than the population size, please change methods.selection.TOURNAMENT.size");const t=[];for(let o=0;o<this.size;o++)t.push(s.pickRandom(e));r.sort(t,(e,t)=>void 0===t.score||void 0===e.score?0:t.score-e.score);for(let o=0;o<this.size;o++)if(Math.random()<this.probability||o===this.size-1)return t[o];return s.pickRandom(e)}}exports.TournamentSelection=l;
},{"../utils/Utils":"../src/utils/Utils.js"}],"../src/interfaces/EvolveOptions.js":[function(require,module,exports) {
"use strict";var t=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.EvolveOptions=void 0;const e=require("activations/build/src"),s=t(require("os")),i=require("../architecture/Network"),n=require("../methods/Loss"),r=require("../methods/Mutation"),o=require("../methods/Selection");class a{constructor(){this._speciesDistanceThreshold=4,this._c1=1,this._c2=1,this._c3=1,this._survivors=.8,this._input=1,this._output=1,this._generation=0,this._elitism=1,this._equal=!0,this._clear=!1,this._populationSize=50,this._mutationRate=.6,this._mutationAmount=5,this._selection=new o.FitnessProportionateSelection,this._loss=n.MSELoss,this._mutations=r.FEEDFORWARD_MUTATIONS,this._activations=Object.values(e.ALL_ACTIVATIONS),this._template=new i.Network(this._input,this._output),this._maxNodes=1/0,this._maxConnections=1/0,this._maxGates=1/0,this._threads=s.default.cpus().length,this._log=-1,this._iterations=1e3,this._error=.05,this._maxStagnation=3}get maxStagnation(){return this._maxStagnation}set maxStagnation(t){this._maxStagnation=t}get speciesDistanceThreshold(){return this._speciesDistanceThreshold}set speciesDistanceThreshold(t){this._speciesDistanceThreshold=t}get c1(){return this._c1}set c1(t){this._c1=t}get c2(){return this._c2}set c2(t){this._c2=t}get c3(){return this._c3}set c3(t){this._c3=t}get survivors(){return this._survivors}set survivors(t){this._survivors=t}get threads(){return this._threads}set threads(t){this._threads=t}get input(){return this._input}set input(t){this._input=t}get output(){return this._output}set output(t){this._output=t}get dataset(){return this._dataset}set dataset(t){this._dataset=t}get generation(){return this._generation}set generation(t){this._generation=t}get training(){return this._training}set training(t){this._training=t}get template(){return this._template}set template(t){this._template=t}get mutations(){return this._mutations}set mutations(t){this._mutations=t}get activations(){return this._activations}set activations(t){this._activations=t}get selection(){return this._selection}set selection(t){this._selection=t}get mutationRate(){return this._mutationRate}set mutationRate(t){this._mutationRate=t}get mutationAmount(){return this._mutationAmount}set mutationAmount(t){this._mutationAmount=t}get elitism(){return this._elitism}set elitism(t){this._elitism=t}get populationSize(){return this._populationSize}set populationSize(t){this._populationSize=t}get fitnessFunction(){return this._fitnessFunction}set fitnessFunction(t){this._fitnessFunction=t}get loss(){return this._loss}set loss(t){this._loss=t}get maxNodes(){return this._maxNodes}set maxNodes(t){this._maxNodes=t}get maxConnections(){return this._maxConnections}set maxConnections(t){this._maxConnections=t}get maxGates(){return this._maxGates}set maxGates(t){this._maxGates=t}get equal(){return this._equal}set equal(t){this._equal=t}get log(){return this._log}set log(t){this._log=t}get schedule(){return this._schedule}set schedule(t){this._schedule=t}get clear(){return this._clear}set clear(t){this._clear=t}get iterations(){return this._iterations}set iterations(t){this._iterations=t}get error(){return this._error}set error(t){this._error=t}}exports.EvolveOptions=a;
},{"../architecture/Network":"../src/architecture/Network.js","../methods/Loss":"../src/methods/Loss.js","../methods/Mutation":"../src/methods/Mutation.js","../methods/Selection":"../src/methods/Selection.js"}],"../src/architecture/Species.js":[function(require,module,exports) {
"use strict";var e=this&&this.__createBinding||(Object.create?function(e,t,s,r){void 0===r&&(r=s),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[s]}})}:function(e,t,s,r){void 0===r&&(r=s),e[r]=t[s]}),t=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(s){if(s&&s.__esModule)return s;var r={};if(null!=s)for(var i in s)Object.hasOwnProperty.call(s,i)&&e(r,s,i);return t(r,s),r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Species=void 0;const r=s(require("timsort")),i=require("../utils/Utils"),o=require("./Network");class n{constructor(e){this.representative=e,this.representative.species=this,this.members=new Set,this.members.add(e),this._score=0,this.lastScore=0,this._stagnation=0}get score(){return this._score}get stagnation(){return this._stagnation}put(e,t,s,r,i){return e.distance(this.representative,t,s,r)<i&&(this.forcePut(e),!0)}forcePut(e){void 0!==e&&(this.members.add(e),e.species=this)}evaluateScore(){let e=0;this.members.forEach(t=>{var s;return e+=null!==(s=t.score)&&void 0!==s?s:0});const t=e/this.members.size;this.lastScore<t?this._stagnation++:this._stagnation=0,this._score=t}reset(){this.representative=i.pickRandom(this.members),this.members.forEach(e=>e.species=null),this.members.clear(),this.members.add(this.representative),this.representative.species=this,this.lastScore=this.score,this._score=0}kill(e){const t=Array.from(this.members);r.sort(t,(e,t)=>void 0===e.score||void 0===t.score?0:e.score-t.score);const s=Math.floor(e*this.members.size);for(let r=0;r<s;r++)this.members.delete(t[r]),t[r].species=null}breed(){return o.Network.crossOver(i.pickRandom(this.members),i.pickRandom(this.members))}size(){return this.members.size}getBest(){const e=Array.from(this.members);return e[i.maxValueIndex(e.map(e=>{var t;return null!==(t=e.score)&&void 0!==t?t:-1/0}))]}print(){console.log("Species={Members: "+this.members.size+"; Score: "+this._score+"; Stagnation: "+this.stagnation+"}")}}exports.Species=n;
},{"../utils/Utils":"../src/utils/Utils.js","./Network":"../src/architecture/Network.js"}],"../src/NEAT.js":[function(require,module,exports) {
"use strict";var t=this&&this.__createBinding||(Object.create?function(t,i,o,e){void 0===e&&(e=o),Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[o]}})}:function(t,i,o,e){void 0===e&&(e=o),t[e]=i[o]}),i=this&&this.__setModuleDefault||(Object.create?function(t,i){Object.defineProperty(t,"default",{enumerable:!0,value:i})}:function(t,i){t.default=i}),o=this&&this.__importStar||function(o){if(o&&o.__esModule)return o;var e={};if(null!=o)for(var s in o)Object.hasOwnProperty.call(o,s)&&t(e,o,s);return i(e,o),e},e=this&&this.__awaiter||function(t,i,o,e){return new(o||(o=Promise))(function(s,n){function r(t){try{c(e.next(t))}catch(i){n(i)}}function a(t){try{c(e.throw(t))}catch(i){n(i)}}function c(t){var i;t.done?s(t.value):(i=t.value,i instanceof o?i:new o(function(t){t(i)})).then(r,a)}c((e=e.apply(t,i||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.NEAT=void 0;const s=o(require("timsort")),n=require("./architecture/Species"),r=require("./methods/Mutation"),a=require("./utils/Utils");class c{constructor(t){if(!t.fitnessFunction)throw new ReferenceError("No fitness function given!");this._options=t,this.population=[],this.species=new Set;for(let i=0;i<this.options.populationSize;i++)this.population.push(this.options.template.copy())}get options(){return this._options}set options(t){this._options=t}mutateRandom(t){const i=this.options.mutations.filter(i=>i.constructor.name!==r.AddNodeMutation.constructor.name||t.nodes.length<this.options.maxNodes||i.constructor.name!==r.AddConnectionMutation.constructor.name||t.connections.size<this.options.maxConnections||i.constructor.name!==r.AddGateMutation.constructor.name||t.gates.size<this.options.maxGates);t.mutate(a.pickRandom(i),{allowedActivations:this.options.activations})}evolve(){return e(this,void 0,void 0,function*(){if(this.genSpecies(),yield this.evaluate(),this.sort(),this.species.forEach(t=>t.evaluateScore()),this.kill(1-this.options.survivors),this.removeExtinctSpecies(),this.reproduce(),this.mutate(),this.options.training)for(const i of this.population)i.train(this.options.training);yield this.evaluate(),this.sort();const t=this.population[0].copy();if(t.score=this.population[0].score,this.options.log>0&&this.options.generation%this.options.log==0){console.log("\n---------------------------"),console.log("Generation: "+this.options.generation+"; Species: "+this.species.size+"; Score: "+this.population[0].score);for(const t of this.species)t.print()}return this.population.forEach(t=>t.score=void 0),this.options.generation++,t})}mutate(t){this.population.filter(()=>Math.random()<=this.options.mutationRate).forEach(i=>{for(let o=0;o<this.options.mutationAmount;o++)t?i.mutate(t):this.mutateRandom(i)})}evaluate(){var t,i;return e(this,void 0,void 0,function*(){return this.options.clear&&this.population.forEach(t=>t.clear()),yield null===(i=(t=this.options).fitnessFunction)||void 0===i?void 0:i.call(t,this.population,this.options.dataset),this.sort(),this.population[0]})}sort(){s.sort(this.population,(t,i)=>void 0===t.score||void 0===i.score?0:i.score-t.score)}getFittest(){return e(this,void 0,void 0,function*(){return void 0===this.population[this.population.length-1].score&&(yield this.evaluate()),this.sort(),this.population[0]})}getAverage(){return e(this,void 0,void 0,function*(){void 0===this.population[this.population.length-1].score&&(yield this.evaluate());let t=0;return this.population.map(t=>t.score).forEach(i=>t+=null!=i?i:0),t/this.population.length})}replacePopulation(t){this.population=t,this.options.populationSize=t.length}reproduce(){const t=Array.from(this.species);if(0!==t.length)for(let i=0;i<this.population.length;i++)if(null===this.population[i].species){const o=this.options.selection.select(t);this.population[i]=o.breed(),o.forcePut(this.population[i])}}removeExtinctSpecies(){for(const t of Array.from(this.species))(t.size()<=1||t.stagnation>this.options.maxStagnation)&&(t.members.forEach(t=>t.species=null),this.species.delete(t))}kill(t){this.species.forEach(i=>i.kill(t))}genSpecies(){this.species.forEach(t=>t.reset()),this.population.filter(t=>null===t.species).forEach(t=>{let i=!1;for(const o of Array.from(this.species))if(o.put(t,this.options.c1,this.options.c2,this.options.c3,this.options.speciesDistanceThreshold)){i=!0;break}i||this.species.add(new n.Species(t))})}}exports.NEAT=c;
},{"./architecture/Species":"../src/architecture/Species.js","./methods/Mutation":"../src/methods/Mutation.js","./utils/Utils":"../src/utils/Utils.js"}],"../src/architecture/Network.js":[function(require,module,exports) {
"use strict";var t=this&&this.__createBinding||(Object.create?function(t,e,o,n){void 0===n&&(n=o),Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[o]}})}:function(t,e,o,n){void 0===n&&(n=o),t[n]=e[o]}),e=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),o=this&&this.__importStar||function(o){if(o&&o.__esModule)return o;var n={};if(null!=o)for(var i in o)Object.hasOwnProperty.call(o,i)&&t(n,o,i);return e(n,o),n},n=this&&this.__awaiter||function(t,e,o,n){return new(o||(o=Promise))(function(i,s){function r(t){try{d(n.next(t))}catch(e){s(e)}}function a(t){try{d(n.throw(t))}catch(e){s(e)}}function d(t){var e;t.done?i(t.value):(e=t.value,e instanceof o?e:new o(function(t){t(e)})).then(r,a)}d((n=n.apply(t,e||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Network=void 0;const i=require("threads"),s=require("threads/dist");require("threads/register");const r=o(require("timsort")),a=require("../enums/NodeType"),d=require("../interfaces/EvolveOptions"),u=require("../methods/Loss"),h=require("../methods/Mutation"),c=require("../NEAT"),l=require("../utils/Utils"),p=require("./Node");class f{constructor(t,e){this.inputSize=t,this.outputSize=e,this.nodes=[],this.connections=new Set,this.gates=new Set,this.score=void 0,this.species=null;for(let o=0;o<t;o++)this.nodes.push(new p.Node(a.NodeType.INPUT));for(let o=0;o<e;o++)this.nodes.push(new p.Node(a.NodeType.OUTPUT));for(let o=0;o<this.inputSize;o++)for(let t=this.inputSize;t<this.outputSize+this.inputSize;t++){const e=(Math.random()-.5)*this.inputSize*Math.sqrt(2/this.inputSize);this.connect(this.nodes[o],this.nodes[t],e)}}static fromJSON(t){const e=new f(t.inputSize,t.outputSize);return e.nodes=[],e.connections.clear(),t.nodes.map(t=>(new p.Node).fromJSON(t)).forEach(t=>e.nodes[t.index]=t),t.connections.forEach(t=>{const o=e.connect(e.nodes[t.fromIndex],e.nodes[t.toIndex],t.weight);null!==t.gateNodeIndex&&e.addGate(e.nodes[t.gateNodeIndex],o)}),e}static crossOver(t,e){var o,n;if(t.inputSize!==e.inputSize||t.outputSize!==e.outputSize)throw new Error("Networks don`t have the same input/output size!");const i=new f(t.inputSize,t.outputSize);i.connections.clear(),i.nodes=[];const s=null!==(o=t.score)&&void 0!==o?o:0,r=null!==(n=e.score)&&void 0!==n?n:0;let d;if(s===r){const o=Math.max(t.nodes.length,e.nodes.length),n=Math.min(t.nodes.length,e.nodes.length);d=l.randInt(n,o+1)}else d=s>r?t.nodes.length:e.nodes.length;const u=t.inputSize,h=t.outputSize;for(let a=0;a<t.nodes.length;a++)t.nodes[a].index=a;for(let a=0;a<e.nodes.length;a++)e.nodes[a].index=a;for(let f=0;f<d;f++){let o,n=null;if(f<u){n=a.NodeType.INPUT;const i=l.randBoolean()?t:e;let s=-1,r=-1;for(;s<f;){if(r++>=i.nodes.length)throw RangeError("something is wrong with the size of the input");i.nodes[r].isInputNode()&&s++}o=i.nodes[r]}else if(f<u+h){n=a.NodeType.OUTPUT;const i=l.randBoolean()?t:e;let s=-1,r=-1;for(;s<f-u;){if(++r>=i.nodes.length)throw RangeError("something is wrong with the size of the output");i.nodes[r].isOutputNode()&&s++}o=i.nodes[r]}else{let i;n=a.NodeType.HIDDEN,i=f>=t.nodes.length?e:f>=e.nodes.length?t:l.randBoolean()?t:e,o=l.pickRandom(i.nodes)}const s=new p.Node(n);s.bias=o.bias,s.squash=o.squash,i.nodes.push(s)}const c=[],g=[];t.connections.forEach(t=>{c[l.pairing(t.from.index,t.to.index)]=t.toJSON()}),e.connections.forEach(t=>{g[l.pairing(t.from.index,t.to.index)]=t.toJSON()});const m=[],v=Object.keys(c),w=Object.keys(g);for(let a=v.length-1;a>=0;a--)void 0!==g[parseInt(v[a])]?(m.push(l.randBoolean()?c[parseInt(v[a])]:g[parseInt(v[a])]),g[parseInt(v[a])]=void 0):s>=r&&m.push(c[parseInt(v[a])]);return r>=s&&w.map(t=>parseInt(t)).map(t=>g[t]).filter(t=>void 0!==t).forEach(t=>m.push(t)),m.forEach(t=>{if(void 0!==t&&t.toIndex<d&&t.fromIndex<d){const e=i.nodes[t.fromIndex],o=i.nodes[t.toIndex],n=i.connect(e,o,t.weight);null!==t.gateNodeIndex&&t.gateNodeIndex<d&&i.addGate(i.nodes[t.gateNodeIndex],n)}}),i}copy(){return f.fromJSON(this.toJSON())}connect(t,e,o=0){const n=t.connect(e,o);return this.connections.add(n),n}activate(t,e={}){var o,n;if(t.length!==this.inputSize)throw new RangeError("Input size of dataset is different to network input size!");return e.dropoutRate=null!==(o=e.dropoutRate)&&void 0!==o?o:0,e.trace=null===(n=e.trace)||void 0===n||n,this.nodes.filter(t=>t.isInputNode()).forEach((o,n)=>o.activate(t[n],e.trace)),this.nodes.filter(t=>t.isHiddenNode()).forEach(t=>{e.dropoutRate&&(t.mask=Math.random()>=e.dropoutRate?1:0),t.activate(void 0,e.trace)}),this.nodes.filter(t=>t.isOutputNode()).map(t=>t.activate(void 0,e.trace))}propagate(t,e={}){var o,n,i;if(e.rate=null!==(o=e.rate)&&void 0!==o?o:.3,e.momentum=null!==(n=e.momentum)&&void 0!==n?n:0,e.update=null!==(i=e.update)&&void 0!==i&&i,t.length!==this.outputSize)throw new Error("Output target length should match network output length");this.nodes.filter(t=>t.isOutputNode()).forEach((o,n)=>o.propagate(t[n],e));for(let s=this.nodes.length-1;s>=0;s--)this.nodes[s].isHiddenNode()&&this.nodes[s].propagate(void 0,e);this.nodes.filter(t=>t.isInputNode()).forEach(t=>t.propagate(void 0,e))}clear(){this.nodes.forEach(t=>t.clear())}disconnect(t,e){return this.connections.forEach(o=>{o.from===t&&o.to===e&&(null!==o.gateNode&&this.removeGate(o),this.connections.delete(o))}),t.disconnect(e)}addGate(t,e){if(-1===this.nodes.indexOf(t))throw new ReferenceError("This node is not part of the network!");null===e.gateNode&&(t.addGate(e),this.gates.add(e))}removeGate(t){if(!this.gates.has(t))throw new Error("This connection is not gated!");this.gates.delete(t),null!==t.gateNode&&t.gateNode.removeGate(t)}removeNode(t,e=(new h.SubNodeMutation).keepGates){if(!this.nodes.includes(t))throw new ReferenceError("This node does not exist in the network!");this.disconnect(t,t);const o=[],n=[],i=[],s=[];for(t.incoming.forEach(i=>{e&&null!==i.gateNode&&i.gateNode!==t&&n.push(i.gateNode),o.push(i.from),this.disconnect(i.from,t)}),t.outgoing.forEach(o=>{e&&null!==o.gateNode&&o.gateNode!==t&&n.push(o.gateNode),i.push(o.to),this.disconnect(t,o.to)}),o.forEach(t=>{i.forEach(e=>{t.isProjectingTo(e)||s.push(this.connect(t,e))})});n.length>0&&s.length>0;){const t=n.shift();if(void 0===t)continue;const e=l.pickRandom(s);this.addGate(t,e),l.removeFromArray(s,e)}t.gated.forEach(this.removeGate),l.removeFromArray(this.nodes,t)}mutate(t,e){t.mutate(this,e)}mutateRandom(t=h.ALL_MUTATIONS,e={}){0!==t.length&&this.mutate(l.pickRandom(t),e)}train(t){if(t.dataset[0].input.length!==this.inputSize||t.dataset[0].output.length!==this.outputSize)throw new Error("Dataset input/output size should be same as network input/output size!");const e=Date.now();if(t.iterations<=0&&t.error<=0)throw new Error("At least one of the following options must be specified: error, iterations");let o,n,i,s;t.crossValidateTestSize>0?(o=Math.ceil((1-t.crossValidateTestSize)*t.dataset.length),n=t.dataset.slice(0,o),i=t.dataset.slice(o)):(n=t.dataset,i=[]);let r=0,a=1;for(;a>t.error&&(t.iterations<=0||r<t.iterations);)r++,s=t.rate.calc(r),a=this.trainEpoch({dataset:n,batchSize:t.batchSize,trainingRate:s,momentum:t.momentum,loss:t.loss,dropoutRate:t.dropout}),t.clear&&this.clear(),t.crossValidateTestSize>0&&(a=this.test(i,t.loss),t.clear&&this.clear()),t.shuffle&&l.shuffle(t.dataset),t.log>0&&r%t.log==0&&console.log("iteration number",r,"error",a,"training rate",s),t.schedule&&r%t.schedule.iterations==0&&t.schedule.function(a,r);return t.clear&&this.clear(),{error:a,iterations:r,time:Date.now()-e}}test(t,e=u.MSELoss){let o=0;for(const n of t){const t=n.input;o+=e(n.output,this.activate(t,{trace:!1}))}return o/t.length}toJSON(){const t={nodes:[],connections:[],inputSize:this.inputSize,outputSize:this.outputSize};for(let e=0;e<this.nodes.length;e++)this.nodes[e].index=e;return this.nodes.forEach(e=>{t.nodes.push(e.toJSON()),0!==e.selfConnection.weight&&t.connections.push(e.selfConnection.toJSON())}),this.connections.forEach(e=>{t.connections.push(e.toJSON())}),t}evolve(t=new d.EvolveOptions){return n(this,void 0,void 0,function*(){if(!t.fitnessFunction&&t.dataset&&(t.dataset[0].input.length!==this.inputSize||t.dataset[0].output.length!==this.outputSize))throw new Error("Dataset input/output size should be same as network input/output size!");t.input=this.inputSize,t.output=this.outputSize;const e=Date.now();let o=null;if(!t.fitnessFunction){const e=JSON.stringify(t.dataset),r=Object.values(u.ALL_LOSSES).indexOf(t.loss);o=s.Pool(()=>i.spawn(new i.Worker("../multithreading/TestWorker")),t.threads),t.fitnessFunction=function(t){return n(this,void 0,void 0,function*(){for(const i of t)o&&o.queue(t=>n(this,void 0,void 0,function*(){if(void 0===i)throw new ReferenceError;i.score=-(yield t(e,JSON.stringify(i.toJSON()),r))}));o&&(yield o.completed())})}}t.template=this;const r=new c.NEAT(t);let a,d=0,h=null;do{const e=yield r.evolve();if(!e.score)throw new ReferenceError;a=e.score,(1===r.options.generation||e.score>d)&&(d=e.score,h=e),t.schedule&&r.options.generation%t.schedule.iterations==0&&t.schedule.function(e.score,-a,r.options.generation)}while(a<-t.error&&(0===t.iterations||r.options.generation<t.iterations));return h&&(this.nodes=h.nodes,this.connections=h.connections,this.gates=h.gates,t.clear&&this.clear()),null!==o&&(yield o.terminate()),{error:-a,iterations:r.options.generation,time:Date.now()-e}})}distance(t,e,o,n){for(let r=0;r<this.nodes.length;r++)this.nodes[r].index=r;for(let r=0;r<t.nodes.length;r++)t.nodes[r].index=r;let i=0,s=0;const a=Array.from(this.connections).filter(t=>void 0!==t),d=Array.from(t.connections).filter(t=>void 0!==t);if(r.sort(a,(t,e)=>t.getInnovationID()-e.getInnovationID()),r.sort(d,(t,e)=>t.getInnovationID()-e.getInnovationID()),a[a.length-1].getInnovationID()<d[d.length-1].getInnovationID())return t.distance(this,e,o,n);let u=0,h=0,c=0;for(;i<a.length&&s<d.length;){const t=a[i],e=d[s];if(void 0===t||void 0===e)throw Error("HERE");t.getInnovationID()===e.getInnovationID()?(i++,s++,h+=Math.abs(t.weight-e.weight),c++):i>s?(s++,u++):(i++,u++)}h/=c;const l=this.connections.size-i;let p=Math.max(this.connections.size,t.connections.size);return p<20&&(p=1),e*l/p+o*u/p+n*h}trainEpoch(t){let e=0;for(let o=0;o<t.dataset.length;o++){const n=t.dataset[o].input,i=t.dataset[o].output,s=(o+1)%t.batchSize==0||o+1===t.dataset.length,r=this.activate(n,{dropoutRate:t.dropoutRate});this.propagate(i,{rate:t.trainingRate,momentum:t.momentum,update:s}),e+=t.loss(i,r)}return e/t.dataset.length}}exports.Network=f;
},{"../enums/NodeType":"../src/enums/NodeType.js","../interfaces/EvolveOptions":"../src/interfaces/EvolveOptions.js","../methods/Loss":"../src/methods/Loss.js","../methods/Mutation":"../src/methods/Mutation.js","../NEAT":"../src/NEAT.js","../utils/Utils":"../src/utils/Utils.js","./Node":"../src/architecture/Node.js"}],"../src/architecture/Architect.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Architect=void 0;const e=require("./Layers/CoreLayers/InputLayer"),r=require("./Layers/CoreLayers/OutputLayer"),t=require("./Layers/Layer"),s=require("./Network");class n{constructor(){this.layers=[]}addLayer(e,r){const t=null!=r?r:e.getDefaultIncomingConnectionType();if(!e.connectionTypeisAllowed(t))throw new ReferenceError("Connection type "+t+" is not allowed at layer "+e.constructor.name);return this.layers.push({layer:e,incomingConnectionType:t}),this}buildModel(){if(!(this.layers[0].layer instanceof e.InputLayer))throw new ReferenceError("First layer has to be a InputLayer! Currently is: "+this.layers[0].layer.constructor.name);if(!(this.layers[this.layers.length-1].layer instanceof r.OutputLayer))throw new ReferenceError("Last layer has to be a OutputLayer! Currently is: "+this.layers[this.layers.length-1].layer.constructor.name);const n=this.layers[0].layer.nodes.length,a=this.layers[this.layers.length-1].layer.nodes.length,o=new s.Network(n,a);o.nodes=[],o.connections.clear();for(let e=0;e<this.layers.length-1;e++)t.Layer.connect(this.layers[e].layer,this.layers[e+1].layer,this.layers[e+1].incomingConnectionType).forEach(e=>o.connections.add(e)),o.nodes.push(...this.layers[e].layer.nodes),this.layers[e].layer.connections.forEach(e=>o.connections.add(e)),this.layers[e].layer.gates.forEach(e=>o.gates.add(e));return o.nodes.push(...this.layers[this.layers.length-1].layer.nodes),o}}exports.Architect=n;
},{"./Layers/CoreLayers/InputLayer":"../src/architecture/Layers/CoreLayers/InputLayer.js","./Layers/CoreLayers/OutputLayer":"../src/architecture/Layers/CoreLayers/OutputLayer.js","./Layers/Layer":"../src/architecture/Layers/Layer.js","./Network":"../src/architecture/Network.js"}],"../src/architecture/Nodes/ActivationNode.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActivationNode=void 0;const t=require("../../utils/Utils"),e=require("./ConstantNode");class i extends e.ConstantNode{constructor(){super()}activate(){this.old=this.state;const t=Array.from(this.incoming).map(t=>t.from.activation*t.weight*t.gain);if(1!==t.length)throw new ReferenceError("Only 1 incoming connections is allowed!");return this.state=t[0],this.activation=this.squash(this.state,!1)*this.mask,this.derivativeState=this.squash(this.state,!0),this.activation}propagate(e,i){var o,s,a;i.momentum=null!==(o=i.momentum)&&void 0!==o?o:0,i.rate=null!==(s=i.rate)&&void 0!==s?s:.3,i.update=null===(a=i.update)||void 0===a||a;const r=Array.from(this.outgoing).map(t=>t.to.errorResponsibility*t.weight*t.gain);this.errorResponsibility=this.errorProjected=t.sum(r)*this.derivativeState,this.incoming.forEach(t=>{var e,o;let s=this.errorProjected*t.eligibility;t.xTrace.forEach((t,e)=>{s+=e.errorResponsibility*t}),t.deltaWeightsTotal+=(null!==(e=i.rate)&&void 0!==e?e:.3)*s*this.mask,i.update&&(t.deltaWeightsTotal+=(null!==(o=i.momentum)&&void 0!==o?o:0)*t.deltaWeightsPrevious,t.weight+=t.deltaWeightsTotal,t.deltaWeightsPrevious=t.deltaWeightsTotal,t.deltaWeightsTotal=0)})}}exports.ActivationNode=i;
},{"../../utils/Utils":"../src/utils/Utils.js","./ConstantNode":"../src/architecture/Nodes/ConstantNode.js"}],"../src/architecture/Layers/CoreLayers/ActivationLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActivationLayer=void 0;const e=require("activations/build/src"),t=require("../../../enums/ConnectionType"),o=require("../../Nodes/ActivationNode"),i=require("../Layer");class n extends i.Layer{constructor(t,i={}){var n;super(t);const r=null!==(n=i.activation)&&void 0!==n?n:e.Logistic;for(let e=0;e<t;e++)this.inputNodes.add((new o.ActivationNode).setActivationType(r));this.outputNodes=this.inputNodes,this.nodes.push(...Array.from(this.inputNodes))}connectionTypeisAllowed(e){return e===t.ConnectionType.ONE_TO_ONE}getDefaultIncomingConnectionType(){return t.ConnectionType.ONE_TO_ONE}}exports.ActivationLayer=n;
},{"../../../enums/ConnectionType":"../src/enums/ConnectionType.js","../../Nodes/ActivationNode":"../src/architecture/Nodes/ActivationNode.js","../Layer":"../src/architecture/Layers/Layer.js"}],"../src/architecture/Layers/CoreLayers/DenseLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DenseLayer=void 0;const e=require("activations/build/src"),t=require("../../../enums/ConnectionType"),o=require("../../../enums/NodeType"),n=require("../../Node"),r=require("../Layer");class s extends r.Layer{constructor(t,r={}){var s;super(t);const i=null!==(s=r.activationType)&&void 0!==s?s:e.Logistic;for(let e=0;e<t;e++)this.inputNodes.add(new n.Node(o.NodeType.HIDDEN).setActivationType(i));this.outputNodes=this.inputNodes,this.nodes.push(...Array.from(this.inputNodes))}connectionTypeisAllowed(){return!0}getDefaultIncomingConnectionType(){return t.ConnectionType.ALL_TO_ALL}}exports.DenseLayer=s;
},{"../../../enums/ConnectionType":"../src/enums/ConnectionType.js","../../../enums/NodeType":"../src/enums/NodeType.js","../../Node":"../src/architecture/Node.js","../Layer":"../src/architecture/Layers/Layer.js"}],"../src/architecture/Nodes/DropoutNode.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DropoutNode=void 0;const t=require("../../utils/Utils"),i=require("./ConstantNode");class o extends i.ConstantNode{constructor(t){super(),this.probability=t,this.droppedOut=!1}activate(){if(1!==this.incoming.size)throw new RangeError("Dropout node should have exactly one incoming connection!");const i=Array.from(this.incoming)[0];return t.randDouble(0,1)<this.probability?(this.droppedOut=!0,this.state=0):(this.droppedOut=!1,this.state=i.from.activation*i.weight*i.gain,this.state*=1/(1-this.probability)),this.activation=this.squash(this.state,!1)*this.mask,this.gated.forEach(t=>t.gain=this.activation),this.activation}propagate(i,o={}){var e,r,s;o.momentum=null!==(e=o.momentum)&&void 0!==e?e:0,o.rate=null!==(r=o.rate)&&void 0!==r?r:.3,o.update=null===(s=o.update)||void 0===s||s;const a=Array.from(this.outgoing).map(t=>t.to.errorResponsibility*t.weight*t.gain);if(this.errorResponsibility=this.errorProjected=t.sum(a)/(1-this.probability),1!==this.incoming.size)throw new RangeError("Dropout node should have exactly one incoming connection!");const n=Array.from(this.incoming)[0];if(!this.droppedOut){let t=this.errorProjected*n.eligibility;n.xTrace.forEach((i,o)=>{t+=o.errorResponsibility*i}),o.update&&(n.deltaWeightsTotal+=o.rate*t*this.mask+o.momentum*n.deltaWeightsPrevious,n.weight+=n.deltaWeightsTotal,n.deltaWeightsPrevious=n.deltaWeightsTotal,n.deltaWeightsTotal=0)}}fromJSON(t){return super.fromJSON(t),this.probability=t.probability,this}toJSON(){return Object.assign(super.toJSON(),{probability:this.probability})}}exports.DropoutNode=o;
},{"../../utils/Utils":"../src/utils/Utils.js","./ConstantNode":"../src/architecture/Nodes/ConstantNode.js"}],"../src/architecture/Layers/CoreLayers/DropoutLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DropoutLayer=void 0;const e=require("activations/build/src"),o=require("../../../enums/ConnectionType"),t=require("../../Nodes/DropoutNode"),n=require("../Layer");class r extends n.Layer{constructor(o,n={}){var r,i;super(o);const s=null!==(r=n.activation)&&void 0!==r?r:e.Identitiy,u=null!==(i=n.probability)&&void 0!==i?i:.1;for(let e=0;e<o;e++)this.inputNodes.add(new t.DropoutNode(u).setActivationType(s));this.outputNodes=this.inputNodes,this.nodes.push(...Array.from(this.inputNodes))}getDefaultIncomingConnectionType(){return o.ConnectionType.ONE_TO_ONE}connectionTypeisAllowed(e){return e===o.ConnectionType.ONE_TO_ONE}}exports.DropoutLayer=r;
},{"../../../enums/ConnectionType":"../src/enums/ConnectionType.js","../../Nodes/DropoutNode":"../src/architecture/Nodes/DropoutNode.js","../Layer":"../src/architecture/Layers/Layer.js"}],"../src/architecture/Nodes/PoolNode.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PoolNode=void 0;const e=require("../../enums/NodeType"),t=require("../../utils/Utils"),i=require("./ConstantNode");class o extends i.ConstantNode{constructor(t=e.PoolNodeType.MAX_POOLING){super(),this.poolingType=t,this.receivingNode=null}fromJSON(e){return super.fromJSON(e),this.poolingType=e.poolType,this}activate(){const i=Array.from(this.incoming),o=i.map(e=>e.from.activation*e.weight*e.gain);if(this.poolingType===e.PoolNodeType.MAX_POOLING){const e=t.maxValueIndex(o);this.receivingNode=i[e].from,this.state=o[e]}else if(this.poolingType===e.PoolNodeType.AVG_POOLING)this.state=t.avg(o);else{if(this.poolingType!==e.PoolNodeType.MIN_POOLING)throw new ReferenceError("No valid pooling type! Type: "+this.poolingType);{const e=t.minValueIndex(o);this.receivingNode=i[e].from,this.state=o[e]}}return this.activation=this.squash(this.state,!1)*this.mask,this.poolingType===e.PoolNodeType.AVG_POOLING&&(this.derivativeState=this.squash(this.state,!0)),this.gated.forEach(e=>e.gain=this.activation),this.activation}propagate(i,o={}){var s,r,a;o.momentum=null!==(s=o.momentum)&&void 0!==s?s:0,o.rate=null!==(r=o.rate)&&void 0!==r?r:.3,o.update=null===(a=o.update)||void 0===a||a;const n=Array.from(this.outgoing).map(e=>e.to.errorResponsibility*e.weight*e.gain);this.errorResponsibility=this.errorProjected=t.sum(n)*this.derivativeState,this.poolingType===e.PoolNodeType.AVG_POOLING?this.incoming.forEach(e=>{var t,i;let s=this.errorProjected*e.eligibility;e.xTrace.forEach((e,t)=>{s+=t.errorResponsibility*e}),e.deltaWeightsTotal+=(null!==(t=o.rate)&&void 0!==t?t:.3)*s*this.mask,o.update&&(e.deltaWeightsTotal+=(null!==(i=o.momentum)&&void 0!==i?i:0)*e.deltaWeightsPrevious,e.weight+=e.deltaWeightsTotal,e.deltaWeightsPrevious=e.deltaWeightsTotal,e.deltaWeightsTotal=0)}):this.incoming.forEach(e=>{e.weight=this.receivingNode===e.from?1:0,e.gain=this.receivingNode===e.from?1:0})}toJSON(){return Object.assign(super.toJSON(),{poolType:this.poolingType})}}exports.PoolNode=o;
},{"../../enums/NodeType":"../src/enums/NodeType.js","../../utils/Utils":"../src/utils/Utils.js","./ConstantNode":"../src/architecture/Nodes/ConstantNode.js"}],"../src/architecture/Layers/PoolingLayers/PoolingLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PoolingLayer=void 0;const e=require("../../../enums/ConnectionType"),n=require("../Layer");class o extends n.Layer{constructor(e){super(e)}getDefaultIncomingConnectionType(){return e.ConnectionType.POOLING}connectionTypeisAllowed(){return!0}}exports.PoolingLayer=o;
},{"../../../enums/ConnectionType":"../src/enums/ConnectionType.js","../Layer":"../src/architecture/Layers/Layer.js"}],"../src/architecture/Layers/PoolingLayers/AvgPooling1DLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AvgPooling1DLayer=void 0;const e=require("activations/build/src"),o=require("../../../enums/NodeType"),t=require("../../Nodes/PoolNode"),i=require("./PoolingLayer");class s extends i.PoolingLayer{constructor(i,s={}){var r;super(i);const n=null!==(r=s.activation)&&void 0!==r?r:e.Identitiy;for(let e=0;e<i;e++)this.inputNodes.add(new t.PoolNode(o.PoolNodeType.AVG_POOLING).setActivationType(n));this.outputNodes=this.inputNodes,this.nodes.push(...Array.from(this.inputNodes))}}exports.AvgPooling1DLayer=s;
},{"../../../enums/NodeType":"../src/enums/NodeType.js","../../Nodes/PoolNode":"../src/architecture/Nodes/PoolNode.js","./PoolingLayer":"../src/architecture/Layers/PoolingLayers/PoolingLayer.js"}],"../src/architecture/Layers/PoolingLayers/GlobalAvgPooling1DLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.GlobalAvgPooling1DLayer=void 0;const e=require("./AvgPooling1DLayer");class o extends e.AvgPooling1DLayer{constructor(e,o={}){super(1,o)}}exports.GlobalAvgPooling1DLayer=o;
},{"./AvgPooling1DLayer":"../src/architecture/Layers/PoolingLayers/AvgPooling1DLayer.js"}],"../src/architecture/Layers/PoolingLayers/MaxPooling1DLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MaxPooling1DLayer=void 0;const e=require("activations/build/src"),o=require("../../../enums/NodeType"),t=require("../../Nodes/PoolNode"),i=require("./PoolingLayer");class s extends i.PoolingLayer{constructor(i,s={}){var r;super(i);const n=null!==(r=s.activation)&&void 0!==r?r:e.Identitiy;for(let e=0;e<i;e++)this.inputNodes.add(new t.PoolNode(o.PoolNodeType.MAX_POOLING).setActivationType(n));this.outputNodes=this.inputNodes,this.nodes.push(...Array.from(this.inputNodes))}}exports.MaxPooling1DLayer=s;
},{"../../../enums/NodeType":"../src/enums/NodeType.js","../../Nodes/PoolNode":"../src/architecture/Nodes/PoolNode.js","./PoolingLayer":"../src/architecture/Layers/PoolingLayers/PoolingLayer.js"}],"../src/architecture/Layers/PoolingLayers/GlobalMaxPooling1DLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.GlobalMaxPooling1DLayer=void 0;const e=require("./MaxPooling1DLayer");class o extends e.MaxPooling1DLayer{constructor(e,o={}){super(1,o)}}exports.GlobalMaxPooling1DLayer=o;
},{"./MaxPooling1DLayer":"../src/architecture/Layers/PoolingLayers/MaxPooling1DLayer.js"}],"../src/architecture/Layers/PoolingLayers/MinPooling1DLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MinPooling1DLayer=void 0;const e=require("activations/build/src"),o=require("../../../enums/NodeType"),t=require("../../Nodes/PoolNode"),i=require("./PoolingLayer");class s extends i.PoolingLayer{constructor(i,s={}){var r;super(i);const n=null!==(r=s.activation)&&void 0!==r?r:e.Identitiy;for(let e=0;e<i;e++)this.inputNodes.add(new t.PoolNode(o.PoolNodeType.MIN_POOLING).setActivationType(n));this.outputNodes=this.inputNodes,this.nodes.push(...Array.from(this.inputNodes))}}exports.MinPooling1DLayer=s;
},{"../../../enums/NodeType":"../src/enums/NodeType.js","../../Nodes/PoolNode":"../src/architecture/Nodes/PoolNode.js","./PoolingLayer":"../src/architecture/Layers/PoolingLayers/PoolingLayer.js"}],"../src/architecture/Layers/PoolingLayers/GlobalMinPooling1DLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.GlobalMinPooling1DLayer=void 0;const e=require("./MinPooling1DLayer");class o extends e.MinPooling1DLayer{constructor(e,o={}){super(1,o)}}exports.GlobalMinPooling1DLayer=o;
},{"./MinPooling1DLayer":"../src/architecture/Layers/PoolingLayers/MinPooling1DLayer.js"}],"../src/architecture/Layers/RecurrentLayers/GRULayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.GRULayer=void 0;const e=require("activations/build/src"),n=require("../../../enums/ConnectionType"),t=require("../../../enums/GatingType"),o=require("../../../enums/NodeType"),s=require("../../Node"),i=require("../Layer");class c extends i.Layer{constructor(c,p={}){super(c);const u=[],h=[],L=[],r=[],y=[];for(let n=0;n<c;n++)this.inputNodes.add(new s.Node(o.NodeType.HIDDEN)),u.push(new s.Node(o.NodeType.HIDDEN).setBias(1)),h.push(new s.Node(o.NodeType.HIDDEN).setBias(0).setActivationType(e.Logistic)),L.push(new s.Node(o.NodeType.HIDDEN).setBias(0)),r.push(new s.Node(o.NodeType.HIDDEN).setActivationType(e.TANH)),y.push(new s.Node(o.NodeType.HIDDEN).setBias(0).setActivationType(e.Logistic)),this.outputNodes.add(new s.Node(o.NodeType.HIDDEN));this.connections.push(...i.Layer.connect(this.inputNodes,u,n.ConnectionType.ALL_TO_ALL)),this.connections.push(...i.Layer.connect(this.inputNodes,L,n.ConnectionType.ALL_TO_ALL)),this.connections.push(...i.Layer.connect(this.inputNodes,r,n.ConnectionType.ALL_TO_ALL)),this.connections.push(...i.Layer.connect(y,u,n.ConnectionType.ALL_TO_ALL)),this.connections.push(...i.Layer.connect(u,h,n.ConnectionType.ONE_TO_ONE,1)),this.connections.push(...i.Layer.connect(y,L,n.ConnectionType.ALL_TO_ALL));const a=i.Layer.connect(y,r,n.ConnectionType.ALL_TO_ALL);this.connections.push(...a),this.gates.push(...i.Layer.gate(L,a,t.GatingType.OUTPUT));const T=i.Layer.connect(y,this.outputNodes,n.ConnectionType.ALL_TO_ALL),d=i.Layer.connect(r,this.outputNodes,n.ConnectionType.ALL_TO_ALL);this.connections.push(...T),this.connections.push(...d),this.gates.push(...i.Layer.gate(u,T,t.GatingType.OUTPUT)),this.gates.push(...i.Layer.gate(h,d,t.GatingType.OUTPUT)),this.connections.push(...i.Layer.connect(this.outputNodes,y,n.ConnectionType.ONE_TO_ONE,1)),this.nodes.push(...Array.from(this.inputNodes)),this.nodes.push(...u),this.nodes.push(...h),this.nodes.push(...L),this.nodes.push(...r),this.nodes.push(...Array.from(this.outputNodes)),this.nodes.push(...y),this.outputNodes.forEach(n=>{var t;return n.squash=null!==(t=p.activation)&&void 0!==t?t:e.Logistic})}connectionTypeisAllowed(){return!0}getDefaultIncomingConnectionType(){return n.ConnectionType.ALL_TO_ALL}}exports.GRULayer=c;
},{"../../../enums/ConnectionType":"../src/enums/ConnectionType.js","../../../enums/GatingType":"../src/enums/GatingType.js","../../../enums/NodeType":"../src/enums/NodeType.js","../../Node":"../src/architecture/Node.js","../Layer":"../src/architecture/Layers/Layer.js"}],"../src/architecture/Layers/RecurrentLayers/HopfieldLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.HopfieldLayer=void 0;const e=require("activations/build/src"),o=require("../../../enums/ConnectionType"),t=require("../../../enums/NodeType"),n=require("../../Node"),s=require("../Layer");class i extends s.Layer{constructor(i){super(i);for(let o=0;o<i;o++)this.inputNodes.add(new n.Node(t.NodeType.HIDDEN)),this.outputNodes.add(new n.Node(t.NodeType.HIDDEN).setActivationType(e.BinaryStep));this.connections.push(...s.Layer.connect(this.inputNodes,this.outputNodes,o.ConnectionType.ALL_TO_ALL)),this.connections.push(...s.Layer.connect(this.outputNodes,this.inputNodes,o.ConnectionType.ALL_TO_ALL)),this.nodes.push(...Array.from(this.inputNodes)),this.nodes.push(...Array.from(this.outputNodes))}connectionTypeisAllowed(){return!0}getDefaultIncomingConnectionType(){return o.ConnectionType.ALL_TO_ALL}}exports.HopfieldLayer=i;
},{"../../../enums/ConnectionType":"../src/enums/ConnectionType.js","../../../enums/NodeType":"../src/enums/NodeType.js","../../Node":"../src/architecture/Node.js","../Layer":"../src/architecture/Layers/Layer.js"}],"../src/architecture/Layers/RecurrentLayers/LSTMLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LSTMLayer=void 0;const e=require("activations/build/src"),n=require("../../../enums/ConnectionType"),t=require("../../../enums/GatingType"),o=require("../../../enums/NodeType"),s=require("../../Node"),i=require("../Layer");class c extends i.Layer{constructor(c,p={}){super(c);const u=[],L=[],r=[],h=[];for(let n=0;n<c;n++)this.inputNodes.add(new s.Node(o.NodeType.HIDDEN)),u.push(new s.Node(o.NodeType.HIDDEN).setBias(1)),L.push(new s.Node(o.NodeType.HIDDEN).setBias(1).setActivationType(e.Logistic)),r.push(new s.Node(o.NodeType.HIDDEN)),h.push(new s.Node(o.NodeType.HIDDEN).setBias(1)),this.outputNodes.add(new s.Node(o.NodeType.HIDDEN));this.connections.push(...i.Layer.connect(r,u,n.ConnectionType.ALL_TO_ALL)),this.connections.push(...i.Layer.connect(r,L,n.ConnectionType.ALL_TO_ALL)),this.connections.push(...i.Layer.connect(r,h,n.ConnectionType.ALL_TO_ALL));const a=i.Layer.connect(r,r,n.ConnectionType.ONE_TO_ONE),y=i.Layer.connect(r,this.outputNodes,n.ConnectionType.ALL_TO_ALL);this.connections.push(...a),this.connections.push(...y),this.connections.push(...i.Layer.connect(this.inputNodes,r,n.ConnectionType.ALL_TO_ALL)),this.connections.push(...i.Layer.connect(this.inputNodes,h,n.ConnectionType.ALL_TO_ALL)),this.connections.push(...i.Layer.connect(this.inputNodes,L,n.ConnectionType.ALL_TO_ALL));const d=i.Layer.connect(this.inputNodes,u,n.ConnectionType.ALL_TO_ALL);this.connections.push(...d),this.gates.push(...i.Layer.gate(L,a,t.GatingType.SELF)),this.gates.push(...i.Layer.gate(h,y,t.GatingType.OUTPUT)),this.gates.push(...i.Layer.gate(u,d,t.GatingType.INPUT)),this.nodes.push(...Array.from(this.inputNodes)),this.nodes.push(...u),this.nodes.push(...L),this.nodes.push(...r),this.nodes.push(...h),this.nodes.push(...Array.from(this.outputNodes)),this.outputNodes.forEach(n=>{var t;return n.squash=null!==(t=p.activation)&&void 0!==t?t:e.TANH})}connectionTypeisAllowed(){return!0}getDefaultIncomingConnectionType(){return n.ConnectionType.ALL_TO_ALL}}exports.LSTMLayer=c;
},{"../../../enums/ConnectionType":"../src/enums/ConnectionType.js","../../../enums/GatingType":"../src/enums/GatingType.js","../../../enums/NodeType":"../src/enums/NodeType.js","../../Node":"../src/architecture/Node.js","../Layer":"../src/architecture/Layers/Layer.js"}],"../src/architecture/Layers/RecurrentLayers/MemoryLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MemoryLayer=void 0;const e=require("activations/build/src"),o=require("../../../enums/ConnectionType"),t=require("../../../enums/NodeType"),r=require("../../Node"),s=require("../Layer");class n extends s.Layer{constructor(n,i={}){var u;super(n);for(let e=0;e<n;e++)this.inputNodes.add(new r.Node(t.NodeType.HIDDEN));let c=Array.from(this.inputNodes);const d=[];for(let a=0;a<(null!==(u=i.memorySize)&&void 0!==u?u:1);a++){const i=[];for(let o=0;o<n;o++){const o=new r.Node(t.NodeType.HIDDEN);o.squash=e.Identitiy,o.bias=0,i.push(o)}this.connections.push(...s.Layer.connect(c,i,o.ConnectionType.ONE_TO_ONE)),d.push(...i),c=i}this.nodes.push(...Array.from(this.inputNodes)),this.nodes.push(...d.reverse()),c.forEach(e=>this.outputNodes.add(e)),this.outputNodes.forEach(o=>{var t;return o.squash=null!==(t=i.activation)&&void 0!==t?t:e.Logistic})}connectionTypeisAllowed(){return!0}getDefaultIncomingConnectionType(){return o.ConnectionType.ALL_TO_ALL}}exports.MemoryLayer=n;
},{"../../../enums/ConnectionType":"../src/enums/ConnectionType.js","../../../enums/NodeType":"../src/enums/NodeType.js","../../Node":"../src/architecture/Node.js","../Layer":"../src/architecture/Layers/Layer.js"}],"../src/architecture/Layers/RecurrentLayers/RNNLayer.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RNNLayer=void 0;const e=require("activations/build/src"),t=require("../../../enums/ConnectionType"),o=require("../../../enums/NodeType"),n=require("../../Node"),i=require("../Layer");class s extends i.Layer{constructor(s,r={}){var u;super(s);for(let t=0;t<s;t++)this.inputNodes.add(new n.Node(o.NodeType.HIDDEN).setActivationType(null!==(u=r.activation)&&void 0!==u?u:e.Logistic));this.outputNodes=this.inputNodes,this.nodes.push(...Array.from(this.inputNodes)),this.connections.push(...i.Layer.connect(this.nodes,this.nodes,t.ConnectionType.ONE_TO_ONE))}connectionTypeisAllowed(){return!0}getDefaultIncomingConnectionType(){return t.ConnectionType.ALL_TO_ALL}}exports.RNNLayer=s;
},{"../../../enums/ConnectionType":"../src/enums/ConnectionType.js","../../../enums/NodeType":"../src/enums/NodeType.js","../../Node":"../src/architecture/Node.js","../Layer":"../src/architecture/Layers/Layer.js"}],"../src/methods/Rate.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.InverseRate=exports.ExponentialRate=exports.StepRate=exports.FixedRate=exports.Rate=void 0;class t{constructor(t){this.baseRate=t}}exports.Rate=t;class e extends t{calc(){return this.baseRate}}exports.FixedRate=e;class s extends t{constructor(t,e=.9,s=100){super(t),this.gamma=e,this.stepSize=s}calc(t){return this.baseRate*Math.pow(this.gamma,Math.floor(t/this.stepSize))}}exports.StepRate=s;class a extends t{constructor(t,e=.999){super(t),this.gamma=e}calc(t){return this.baseRate*Math.pow(this.gamma,t)}}exports.ExponentialRate=a;class r extends t{constructor(t,e=.001,s=2){super(t),this.gamma=e,this.power=s}calc(t){return this.baseRate*Math.pow(1+this.gamma*t,-this.power)}}exports.InverseRate=r;
},{}],"../src/interfaces/TrainOptions.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TrainOptions=void 0;const t=require("../methods/Loss"),e=require("../methods/Rate");class s{constructor(s){this._dataset=s,this._iterations=-1,this._error=-1,this._loss=t.MSELoss,this._dropout=0,this._momentum=0,this._batchSize=this.dataset.length,this._rate=new e.FixedRate(.3),this._log=-1,this._crossValidateTestSize=-1,this._shuffle=!1,this._clear=!1}get dataset(){return this._dataset}set dataset(t){this._dataset=t}get shuffle(){return this._shuffle}set shuffle(t){this._shuffle=t}get clear(){return this._clear}set clear(t){this._clear=t}get schedule(){return this._schedule}set schedule(t){this._schedule=t}get crossValidateTestSize(){return this._crossValidateTestSize}set crossValidateTestSize(t){this._crossValidateTestSize=t}get rate(){return this._rate}set rate(t){this._rate=t}get loss(){return this._loss}set loss(t){this._loss=t}get iterations(){return this._iterations}set iterations(t){this._iterations=t}get error(){return this._error}set error(t){this._error=t}get momentum(){return this._momentum}set momentum(t){this._momentum=t}get dropout(){return this._dropout}set dropout(t){this._dropout=t}get log(){return this._log}set log(t){this._log=t}get batchSize(){return this._batchSize}set batchSize(t){this._batchSize=t}}exports.TrainOptions=s;
},{"../methods/Loss":"../src/methods/Loss.js","../methods/Rate":"../src/methods/Rate.js"}],"index.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.generateGaussian=exports.avg=exports.sum=exports.min=exports.minValueIndex=exports.maxValueIndex=exports.max=exports.shuffle=exports.removeFromArray=exports.randBoolean=exports.randDouble=exports.randInt=exports.pickRandom=exports.TournamentSelection=exports.PowerSelection=exports.FitnessProportionateSelection=exports.Selection=exports.InverseRate=exports.ExponentialRate=exports.StepRate=exports.FixedRate=exports.Rate=exports.SwapNodesMutation=exports.SubBackConnectionMutation=exports.AddBackConnectionMutation=exports.SubSelfConnectionMutation=exports.AddSelfConnectionMutation=exports.SubGateMutation=exports.AddGateMutation=exports.ModActivationMutation=exports.ModBiasMutation=exports.ModWeightMutation=exports.SubConnectionMutation=exports.AddConnectionMutation=exports.SubNodeMutation=exports.AddNodeMutation=exports.Mutation=exports.ONLY_STRUCTURE=exports.NO_STRUCTURE_MUTATIONS=exports.FEEDFORWARD_MUTATIONS=exports.ALL_MUTATIONS=exports.HINGELoss=exports.MSLELoss=exports.WAPELoss=exports.MAPELoss=exports.MAELoss=exports.BinaryLoss=exports.MBELoss=exports.MSELoss=exports.ALL_LOSSES=exports.TrainOptions=exports.EvolveOptions=exports.NoiseNodeType=exports.PoolNodeType=exports.NodeType=exports.GatingType=exports.ConnectionType=exports.Node=exports.Species=exports.Network=exports.Connection=exports.Architect=exports.PoolNode=exports.NoiseNode=exports.DropoutNode=exports.ConstantNode=exports.Layer=exports.MemoryLayer=exports.LSTMLayer=exports.GRULayer=exports.RNNLayer=exports.HopfieldLayer=exports.ActivationLayer=exports.PoolingLayer=exports.GlobalMaxPooling1DLayer=exports.GlobalMinPooling1DLayer=exports.GlobalAvgPooling1DLayer=exports.MaxPooling1DLayer=exports.MinPooling1DLayer=exports.AvgPooling1DLayer=exports.NoiseLayer=exports.OutputLayer=exports.InputLayer=exports.DropoutLayer=exports.DenseLayer=void 0;var e=require("../src/architecture/Architect");Object.defineProperty(exports,"Architect",{enumerable:!0,get:function(){return e.Architect}});var r=require("../src/architecture/Connection");Object.defineProperty(exports,"Connection",{enumerable:!0,get:function(){return r.Connection}});var t=require("../src/architecture/Layers/CoreLayers/ActivationLayer");Object.defineProperty(exports,"ActivationLayer",{enumerable:!0,get:function(){return t.ActivationLayer}});var o=require("../src/architecture/Layers/CoreLayers/DenseLayer");Object.defineProperty(exports,"DenseLayer",{enumerable:!0,get:function(){return o.DenseLayer}});var n=require("../src/architecture/Layers/CoreLayers/DropoutLayer");Object.defineProperty(exports,"DropoutLayer",{enumerable:!0,get:function(){return n.DropoutLayer}});var i=require("../src/architecture/Layers/CoreLayers/InputLayer");Object.defineProperty(exports,"InputLayer",{enumerable:!0,get:function(){return i.InputLayer}});var a=require("../src/architecture/Layers/CoreLayers/OutputLayer");Object.defineProperty(exports,"OutputLayer",{enumerable:!0,get:function(){return a.OutputLayer}});var u=require("../src/architecture/Layers/Layer");Object.defineProperty(exports,"Layer",{enumerable:!0,get:function(){return u.Layer}});var s=require("../src/architecture/Layers/NoiseLayers/NoiseLayer");Object.defineProperty(exports,"NoiseLayer",{enumerable:!0,get:function(){return s.NoiseLayer}});var c=require("../src/architecture/Layers/PoolingLayers/AvgPooling1DLayer");Object.defineProperty(exports,"AvgPooling1DLayer",{enumerable:!0,get:function(){return c.AvgPooling1DLayer}});var p=require("../src/architecture/Layers/PoolingLayers/GlobalAvgPooling1DLayer");Object.defineProperty(exports,"GlobalAvgPooling1DLayer",{enumerable:!0,get:function(){return p.GlobalAvgPooling1DLayer}});var y=require("../src/architecture/Layers/PoolingLayers/GlobalMaxPooling1DLayer");Object.defineProperty(exports,"GlobalMaxPooling1DLayer",{enumerable:!0,get:function(){return y.GlobalMaxPooling1DLayer}});var b=require("../src/architecture/Layers/PoolingLayers/GlobalMinPooling1DLayer");Object.defineProperty(exports,"GlobalMinPooling1DLayer",{enumerable:!0,get:function(){return b.GlobalMinPooling1DLayer}});var l=require("../src/architecture/Layers/PoolingLayers/MaxPooling1DLayer");Object.defineProperty(exports,"MaxPooling1DLayer",{enumerable:!0,get:function(){return l.MaxPooling1DLayer}});var d=require("../src/architecture/Layers/PoolingLayers/MinPooling1DLayer");Object.defineProperty(exports,"MinPooling1DLayer",{enumerable:!0,get:function(){return d.MinPooling1DLayer}});var x=require("../src/architecture/Layers/PoolingLayers/PoolingLayer");Object.defineProperty(exports,"PoolingLayer",{enumerable:!0,get:function(){return x.PoolingLayer}});var f=require("../src/architecture/Layers/RecurrentLayers/GRULayer");Object.defineProperty(exports,"GRULayer",{enumerable:!0,get:function(){return f.GRULayer}});var L=require("../src/architecture/Layers/RecurrentLayers/HopfieldLayer");Object.defineProperty(exports,"HopfieldLayer",{enumerable:!0,get:function(){return L.HopfieldLayer}});var g=require("../src/architecture/Layers/RecurrentLayers/LSTMLayer");Object.defineProperty(exports,"LSTMLayer",{enumerable:!0,get:function(){return g.LSTMLayer}});var P=require("../src/architecture/Layers/RecurrentLayers/MemoryLayer");Object.defineProperty(exports,"MemoryLayer",{enumerable:!0,get:function(){return P.MemoryLayer}});var m=require("../src/architecture/Layers/RecurrentLayers/RNNLayer");Object.defineProperty(exports,"RNNLayer",{enumerable:!0,get:function(){return m.RNNLayer}});var O=require("../src/architecture/Network");Object.defineProperty(exports,"Network",{enumerable:!0,get:function(){return O.Network}});var M=require("../src/architecture/Node");Object.defineProperty(exports,"Node",{enumerable:!0,get:function(){return M.Node}});var j=require("../src/architecture/Nodes/ConstantNode");Object.defineProperty(exports,"ConstantNode",{enumerable:!0,get:function(){return j.ConstantNode}});var N=require("../src/architecture/Nodes/DropoutNode");Object.defineProperty(exports,"DropoutNode",{enumerable:!0,get:function(){return N.DropoutNode}});var S=require("../src/architecture/Nodes/NoiseNode");Object.defineProperty(exports,"NoiseNode",{enumerable:!0,get:function(){return S.NoiseNode}});var v=require("../src/architecture/Nodes/PoolNode");Object.defineProperty(exports,"PoolNode",{enumerable:!0,get:function(){return v.PoolNode}});var A=require("../src/architecture/Species");Object.defineProperty(exports,"Species",{enumerable:!0,get:function(){return A.Species}});var T=require("../src/enums/ConnectionType");Object.defineProperty(exports,"ConnectionType",{enumerable:!0,get:function(){return T.ConnectionType}});var R=require("../src/enums/GatingType");Object.defineProperty(exports,"GatingType",{enumerable:!0,get:function(){return R.GatingType}});var D=require("../src/enums/NodeType");Object.defineProperty(exports,"NodeType",{enumerable:!0,get:function(){return D.NodeType}}),Object.defineProperty(exports,"NoiseNodeType",{enumerable:!0,get:function(){return D.NoiseNodeType}}),Object.defineProperty(exports,"PoolNodeType",{enumerable:!0,get:function(){return D.PoolNodeType}});var E=require("../src/interfaces/EvolveOptions");Object.defineProperty(exports,"EvolveOptions",{enumerable:!0,get:function(){return E.EvolveOptions}});var h=require("../src/interfaces/TrainOptions");Object.defineProperty(exports,"TrainOptions",{enumerable:!0,get:function(){return h.TrainOptions}});var C=require("../src/methods/Loss");Object.defineProperty(exports,"ALL_LOSSES",{enumerable:!0,get:function(){return C.ALL_LOSSES}}),Object.defineProperty(exports,"BinaryLoss",{enumerable:!0,get:function(){return C.BinaryLoss}}),Object.defineProperty(exports,"HINGELoss",{enumerable:!0,get:function(){return C.HINGELoss}}),Object.defineProperty(exports,"MAELoss",{enumerable:!0,get:function(){return C.MAELoss}}),Object.defineProperty(exports,"MAPELoss",{enumerable:!0,get:function(){return C.MAPELoss}}),Object.defineProperty(exports,"MBELoss",{enumerable:!0,get:function(){return C.MBELoss}}),Object.defineProperty(exports,"MSELoss",{enumerable:!0,get:function(){return C.MSELoss}}),Object.defineProperty(exports,"MSLELoss",{enumerable:!0,get:function(){return C.MSLELoss}}),Object.defineProperty(exports,"WAPELoss",{enumerable:!0,get:function(){return C.WAPELoss}});var q=require("../src/methods/Mutation");Object.defineProperty(exports,"AddBackConnectionMutation",{enumerable:!0,get:function(){return q.AddBackConnectionMutation}}),Object.defineProperty(exports,"AddConnectionMutation",{enumerable:!0,get:function(){return q.AddConnectionMutation}}),Object.defineProperty(exports,"AddGateMutation",{enumerable:!0,get:function(){return q.AddGateMutation}}),Object.defineProperty(exports,"AddNodeMutation",{enumerable:!0,get:function(){return q.AddNodeMutation}}),Object.defineProperty(exports,"AddSelfConnectionMutation",{enumerable:!0,get:function(){return q.AddSelfConnectionMutation}}),Object.defineProperty(exports,"ALL_MUTATIONS",{enumerable:!0,get:function(){return q.ALL_MUTATIONS}}),Object.defineProperty(exports,"FEEDFORWARD_MUTATIONS",{enumerable:!0,get:function(){return q.FEEDFORWARD_MUTATIONS}}),Object.defineProperty(exports,"ModActivationMutation",{enumerable:!0,get:function(){return q.ModActivationMutation}}),Object.defineProperty(exports,"ModBiasMutation",{enumerable:!0,get:function(){return q.ModBiasMutation}}),Object.defineProperty(exports,"ModWeightMutation",{enumerable:!0,get:function(){return q.ModWeightMutation}}),Object.defineProperty(exports,"Mutation",{enumerable:!0,get:function(){return q.Mutation}}),Object.defineProperty(exports,"NO_STRUCTURE_MUTATIONS",{enumerable:!0,get:function(){return q.NO_STRUCTURE_MUTATIONS}}),Object.defineProperty(exports,"ONLY_STRUCTURE",{enumerable:!0,get:function(){return q.ONLY_STRUCTURE}}),Object.defineProperty(exports,"SubBackConnectionMutation",{enumerable:!0,get:function(){return q.SubBackConnectionMutation}}),Object.defineProperty(exports,"SubConnectionMutation",{enumerable:!0,get:function(){return q.SubConnectionMutation}}),Object.defineProperty(exports,"SubGateMutation",{enumerable:!0,get:function(){return q.SubGateMutation}}),Object.defineProperty(exports,"SubNodeMutation",{enumerable:!0,get:function(){return q.SubNodeMutation}}),Object.defineProperty(exports,"SubSelfConnectionMutation",{enumerable:!0,get:function(){return q.SubSelfConnectionMutation}}),Object.defineProperty(exports,"SwapNodesMutation",{enumerable:!0,get:function(){return q.SwapNodesMutation}});var G=require("../src/methods/Rate");Object.defineProperty(exports,"ExponentialRate",{enumerable:!0,get:function(){return G.ExponentialRate}}),Object.defineProperty(exports,"FixedRate",{enumerable:!0,get:function(){return G.FixedRate}}),Object.defineProperty(exports,"InverseRate",{enumerable:!0,get:function(){return G.InverseRate}}),Object.defineProperty(exports,"Rate",{enumerable:!0,get:function(){return G.Rate}}),Object.defineProperty(exports,"StepRate",{enumerable:!0,get:function(){return G.StepRate}});var I=require("../src/methods/Selection");Object.defineProperty(exports,"FitnessProportionateSelection",{enumerable:!0,get:function(){return I.FitnessProportionateSelection}}),Object.defineProperty(exports,"PowerSelection",{enumerable:!0,get:function(){return I.PowerSelection}}),Object.defineProperty(exports,"Selection",{enumerable:!0,get:function(){return I.Selection}}),Object.defineProperty(exports,"TournamentSelection",{enumerable:!0,get:function(){return I.TournamentSelection}});var U=require("../src/utils/Utils");Object.defineProperty(exports,"avg",{enumerable:!0,get:function(){return U.avg}}),Object.defineProperty(exports,"generateGaussian",{enumerable:!0,get:function(){return U.generateGaussian}}),Object.defineProperty(exports,"max",{enumerable:!0,get:function(){return U.max}}),Object.defineProperty(exports,"maxValueIndex",{enumerable:!0,get:function(){return U.maxValueIndex}}),Object.defineProperty(exports,"min",{enumerable:!0,get:function(){return U.min}}),Object.defineProperty(exports,"minValueIndex",{enumerable:!0,get:function(){return U.minValueIndex}}),Object.defineProperty(exports,"pickRandom",{enumerable:!0,get:function(){return U.pickRandom}}),Object.defineProperty(exports,"randBoolean",{enumerable:!0,get:function(){return U.randBoolean}}),Object.defineProperty(exports,"randDouble",{enumerable:!0,get:function(){return U.randDouble}}),Object.defineProperty(exports,"randInt",{enumerable:!0,get:function(){return U.randInt}}),Object.defineProperty(exports,"removeFromArray",{enumerable:!0,get:function(){return U.removeFromArray}}),Object.defineProperty(exports,"shuffle",{enumerable:!0,get:function(){return U.shuffle}}),Object.defineProperty(exports,"sum",{enumerable:!0,get:function(){return U.sum}});
},{"../src/architecture/Architect":"../src/architecture/Architect.js","../src/architecture/Connection":"../src/architecture/Connection.js","../src/architecture/Layers/CoreLayers/ActivationLayer":"../src/architecture/Layers/CoreLayers/ActivationLayer.js","../src/architecture/Layers/CoreLayers/DenseLayer":"../src/architecture/Layers/CoreLayers/DenseLayer.js","../src/architecture/Layers/CoreLayers/DropoutLayer":"../src/architecture/Layers/CoreLayers/DropoutLayer.js","../src/architecture/Layers/CoreLayers/InputLayer":"../src/architecture/Layers/CoreLayers/InputLayer.js","../src/architecture/Layers/CoreLayers/OutputLayer":"../src/architecture/Layers/CoreLayers/OutputLayer.js","../src/architecture/Layers/Layer":"../src/architecture/Layers/Layer.js","../src/architecture/Layers/NoiseLayers/NoiseLayer":"../src/architecture/Layers/NoiseLayers/NoiseLayer.js","../src/architecture/Layers/PoolingLayers/AvgPooling1DLayer":"../src/architecture/Layers/PoolingLayers/AvgPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/GlobalAvgPooling1DLayer":"../src/architecture/Layers/PoolingLayers/GlobalAvgPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/GlobalMaxPooling1DLayer":"../src/architecture/Layers/PoolingLayers/GlobalMaxPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/GlobalMinPooling1DLayer":"../src/architecture/Layers/PoolingLayers/GlobalMinPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/MaxPooling1DLayer":"../src/architecture/Layers/PoolingLayers/MaxPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/MinPooling1DLayer":"../src/architecture/Layers/PoolingLayers/MinPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/PoolingLayer":"../src/architecture/Layers/PoolingLayers/PoolingLayer.js","../src/architecture/Layers/RecurrentLayers/GRULayer":"../src/architecture/Layers/RecurrentLayers/GRULayer.js","../src/architecture/Layers/RecurrentLayers/HopfieldLayer":"../src/architecture/Layers/RecurrentLayers/HopfieldLayer.js","../src/architecture/Layers/RecurrentLayers/LSTMLayer":"../src/architecture/Layers/RecurrentLayers/LSTMLayer.js","../src/architecture/Layers/RecurrentLayers/MemoryLayer":"../src/architecture/Layers/RecurrentLayers/MemoryLayer.js","../src/architecture/Layers/RecurrentLayers/RNNLayer":"../src/architecture/Layers/RecurrentLayers/RNNLayer.js","../src/architecture/Network":"../src/architecture/Network.js","../src/architecture/Node":"../src/architecture/Node.js","../src/architecture/Nodes/ConstantNode":"../src/architecture/Nodes/ConstantNode.js","../src/architecture/Nodes/DropoutNode":"../src/architecture/Nodes/DropoutNode.js","../src/architecture/Nodes/NoiseNode":"../src/architecture/Nodes/NoiseNode.js","../src/architecture/Nodes/PoolNode":"../src/architecture/Nodes/PoolNode.js","../src/architecture/Species":"../src/architecture/Species.js","../src/enums/ConnectionType":"../src/enums/ConnectionType.js","../src/enums/GatingType":"../src/enums/GatingType.js","../src/enums/NodeType":"../src/enums/NodeType.js","../src/interfaces/EvolveOptions":"../src/interfaces/EvolveOptions.js","../src/interfaces/TrainOptions":"../src/interfaces/TrainOptions.js","../src/methods/Loss":"../src/methods/Loss.js","../src/methods/Mutation":"../src/methods/Mutation.js","../src/methods/Rate":"../src/methods/Rate.js","../src/methods/Selection":"../src/methods/Selection.js","../src/utils/Utils":"../src/utils/Utils.js"}]},{},["index.js"], "carrot")
//# sourceMappingURL=/index.browser.min.js.map