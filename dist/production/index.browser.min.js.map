{"version":3,"sources":["../src/enums/ConnectionType.js","../src/enums/NodeType.js","../src/methods/Activation.js","../src/methods/Utils.js","../src/methods/Mutation.js","../src/architecture/Connection.js","../src/architecture/Node.js","../src/enums/GatingType.js","../src/architecture/Layers/Layer.js","../src/architecture/Nodes/ConstantNode.js","../src/architecture/Nodes/NoiseNode.js","../src/architecture/Layers/NoiseLayers/NoiseLayer.js","../src/architecture/Layers/CoreLayers/InputLayer.js","../src/architecture/Layers/CoreLayers/OutputLayer.js","../src/methods/Loss.js","../src/methods/Rate.js","../src/methods/Selection.js","../src/NEAT.js","../src/architecture/Network.js","../src/architecture/Architect.js","../src/architecture/Layers/CoreLayers/DenseLayer.js","../src/architecture/Nodes/DropoutNode.js","../src/architecture/Layers/CoreLayers/DropoutLayer.js","../src/architecture/Nodes/PoolNode.js","../src/architecture/Layers/PoolingLayers/PoolingLayer.js","../src/architecture/Layers/PoolingLayers/AvgPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/GlobalAvgPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/MaxPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/GlobalMaxPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/MinPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/GlobalMinPooling1DLayer.js","../src/architecture/Layers/RecurrentLayers/GRULayer.js","../src/architecture/Layers/RecurrentLayers/LSTMLayer.js","../src/architecture/Layers/RecurrentLayers/MemoryLayer.js","index.js"],"names":["Object","defineProperty","exports","value","ConnectionType","NoiseNodeType","PoolNodeType","NodeType","ALL_ACTIVATIONS","MISHActivation","SELUActivation","InverseActivation","AbsoluteActivation","HardTanhActivation","BipolarSigmoidActivation","BipolarActivation","BentIdentityActivation","GaussianActivation","SinusoidActivation","SoftSignActivation","RELUActivation","StepActivation","IdentityActivation","TanhActivation","LogisticActivation","x","derivative","Math","exp","tanh","pow","abs","sin","cos","sqrt","max","min","alpha","scale","ex","w","d","log","generateGaussian","avg","sum","minValueIndex","maxValueIndex","shuffle","getOrDefault","removeFromArray","randBoolean","randDouble","randInt","pickRandom","arr","length","RangeError","floor","random","elem","index","indexOf","splice","defaultValue","array","counter","temp","maxValue","i","minValue","_i","array_1","mean","deviation","numSamples","__extends","extendStatics","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","SwapNodesMutation","SubBackConnectionMutation","AddBackConnectionMutation","SubSelfConnectionMutation","AddSelfConnectionMutation","SubGateMutation","AddGateMutation","ModActivationMutation","ModBiasMutation","ModWeightMutation","SubConnectionMutation","AddConnectionMutation","SubNodeMutation","AddNodeMutation","Mutation","ONLY_STRUCTURE","NO_STRUCTURE_MUTATIONS","FEEDFORWARD_MUTATIONS","ALL_MUTATIONS","Node_1","require","NodeType_1","Utils_1","_super","randomActivation","_this","call","mutate","network","options","maxNodes","undefined","nodes","node","Node","HIDDEN","mutateActivation","connection","from","connections","to","disconnect","minBound","inputSize","newConnection1","connect","newConnection2","weight","gateNode","addGate","keepGates","possible","filter","isHiddenNode","removeNode","apply","arguments","maxConnections","size","outputSize","j","isProjectingTo","push","pair","conn","outgoing","incoming","randomConnection","isInputNode","mutateBias","mutateOutput","allowedActivations","selfConnection","maxGates","gates","removeGate","node1_1","node2","biasTemp","bias","squashTemp","squash","Connection","gain","eligibility","deltaWeightsPrevious","deltaWeightsTotal","xTraceNodes","xTraceValues","innovationID","a","toJSON","fromIndex","toIndex","gateNodeIndex","Activation_1","Mutation_1","Connection_1","type","activation","derivativeState","state","old","mask","deltaBiasPrevious","deltaBiasTotal","Set","gated","errorResponsibility","errorProjected","errorGated","NaN","fromJSON","json","_a","_b","_c","_d","clear","forEach","method","values","isProjectedBy","map","includes","add","delete","target","twoSided","ReferenceError","Error","propagate","momentum","rate","update","Number","isFinite","influence","gradient","activate","input","trace","nodes_1","influences_1","INPUT","isOutputNode","OUTPUT","setBias","setActivationType","GatingType","Layer","ConnectionType_1","GatingType_1","inputNodes","outputNodes","connectionType","ALL_TO_ALL","NO_CONNECTION","fromNodes","toNodes","fromNode","toNode","ONE_TO_ONE","POOLING","ratio_1","gate","gateType","gatedConnections","_loop_1","SELF","_loop_2","ConstantNode","NoiseNode","ConstantNode_1","noiseType","GAUSSIAN_NOISE","incomingStates","gaussian","connectionsStates","NoiseLayer","NoiseNode_1","Layer_1","getDefaultIncomingConnectionType","connectionTypeisAllowed","InputLayer","NoiseLayer_1","noise","noiseLayer","OutputLayer","ALL_LOSSES","HINGELoss","MSLELoss","WAPELoss","MAPELoss","MAELoss","BinaryLoss","MBELoss","MSELoss","targets","outputs","error","round","InverseRate","ExponentialRate","StepRate","FixedRate","Rate","baseRate","calc","iteration","gamma","stepSize","power","TournamentSelection","PowerSelection","FitnessProportionateSelection","Selection","select","population","totalFitness","minimalFitness","population_1","genome","score","population_2","probability","individuals","sort","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","adopt","done","then","__generator","body","_","f","y","t","g","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","pop","NEAT","Network_1","Selection_1","fitnessFunction","dataset","output","generation","equal","populationSize","elitism","provenance","mutationRate","mutationAmount","selection","mutations","activations","template","Network","Infinity","copy","filterGenome","pickGenome","adjustGenome","mutateRandom","allowed","name","evolve","elitists","newPopulation","fittest","evaluate","fill","getOffspring","parent1","parent2","crossOver","getFittest","getAverage","val","__assign","assign","s","__importDefault","mod","__esModule","os_1","threads_1","dist_1","Loss_1","Rate_1","NEAT_1","nodeJSON","jsonConnection","network1","network2","offspring","score1","score2","offspringSize","chosenNode","chosenNodeType","sourceNetwork","inputNumber","outputNumber","newNode","n1connections","n2connections","keys1","keys","keys2","parseInt","key","connectionJSON","dropoutRate","inputs","shift","allowedMethods","train","iterations","loss","dropout","batchSize","ratePolicy","start","Date","now","trainingSetSize","trainingSet","testSet","crossValidateTestSize","ceil","slice","currentTrainingRate","iterationCount","trainError","trainEpoch","trainingRate","test","console","schedule","function","time","dataset_1","entry","_e","targetError","workerPool","serializedDataSet_1","lossIndex_1","neat","bestFitness","bestGenome","_f","growth","JSON","stringify","Pool","spawn","Worker","threads","default","cpus","queue","completed","terminate","errorSum","correctOutput","Architect","InputLayer_1","OutputLayer_1","layers","addLayer","layer","incomingConnectionType","buildModel","DenseLayer","activationType","DropoutNode","droppedOut","incomingConnection","DropoutLayer","DropoutNode_1","PoolNode","poolingType","MAX_POOLING","receivingNode","poolType","AVG_POOLING","MIN_POOLING","PoolingLayer","AvgPooling1DLayer","PoolNode_1","PoolingLayer_1","GlobalAvgPooling1DLayer","AvgPooling1DLayer_1","MaxPooling1DLayer","GlobalMaxPooling1DLayer","MaxPooling1DLayer_1","MinPooling1DLayer","GlobalMinPooling1DLayer","MinPooling1DLayer_1","GRULayer","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","updateGate","inverseUpdateGate","resetGate","memoryCell","previousOutput","reset","inverseUpdate","LSTMLayer","inputGate","forgetGate","outputGate","forgetGateConnections","outputGateConnections","inputGateConnections","MemoryLayer","prevNodes","memorySize","block","reverse","Architect_1","enumerable","get","DenseLayer_1","DropoutLayer_1","GlobalAvgPooling1DLayer_1","GlobalMaxPooling1DLayer_1","GlobalMinPooling1DLayer_1","GRULayer_1","LSTMLayer_1","MemoryLayer_1"],"mappings":"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","file":"index.browser.min.js","sourceRoot":"../../build/scripts","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionType = void 0;\n/**\n * The type of a connection.\n */\nvar ConnectionType;\n(function (ConnectionType) {\n    /**\n     * No connection used for exceptions.\n     */\n    ConnectionType[ConnectionType[\"NO_CONNECTION\"] = 0] = \"NO_CONNECTION\";\n    /**\n     * Connect all input to all output nodes\n     */\n    ConnectionType[ConnectionType[\"ALL_TO_ALL\"] = 1] = \"ALL_TO_ALL\";\n    /**\n     * Connect one input to one output node\n     */\n    ConnectionType[ConnectionType[\"ONE_TO_ONE\"] = 2] = \"ONE_TO_ONE\";\n    /**\n     * Connect with pooling\n     */\n    ConnectionType[ConnectionType[\"POOLING\"] = 3] = \"POOLING\";\n})(ConnectionType = exports.ConnectionType || (exports.ConnectionType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoiseNodeType = exports.PoolNodeType = exports.NodeType = void 0;\n/**\n * The type of node.\n */\nvar NodeType;\n(function (NodeType) {\n    /**\n     * Node is an input node.\n     */\n    NodeType[NodeType[\"INPUT\"] = 0] = \"INPUT\";\n    /**\n     * Node is a hidden node.\n     */\n    NodeType[NodeType[\"HIDDEN\"] = 1] = \"HIDDEN\";\n    /**\n     * Node is a output node.\n     */\n    NodeType[NodeType[\"OUTPUT\"] = 2] = \"OUTPUT\";\n})(NodeType = exports.NodeType || (exports.NodeType = {}));\n/**\n * The type of pool node.\n */\nvar PoolNodeType;\n(function (PoolNodeType) {\n    /**\n     * Maximum pooling node.\n     */\n    PoolNodeType[PoolNodeType[\"MAX_POOLING\"] = 0] = \"MAX_POOLING\";\n    /**\n     * Average pooling node.\n     */\n    PoolNodeType[PoolNodeType[\"AVG_POOLING\"] = 1] = \"AVG_POOLING\";\n    /**\n     * Minimum pooling node.\n     */\n    PoolNodeType[PoolNodeType[\"MIN_POOLING\"] = 2] = \"MIN_POOLING\";\n})(PoolNodeType = exports.PoolNodeType || (exports.PoolNodeType = {}));\n/**\n * The type of noise node.\n */\nvar NoiseNodeType;\n(function (NoiseNodeType) {\n    /**\n     * Gaussian noise node\n     */\n    NoiseNodeType[NoiseNodeType[\"GAUSSIAN_NOISE\"] = 0] = \"GAUSSIAN_NOISE\";\n})(NoiseNodeType = exports.NoiseNodeType || (exports.NoiseNodeType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ALL_ACTIVATIONS = exports.MISHActivation = exports.SELUActivation = exports.InverseActivation = exports.AbsoluteActivation = exports.HardTanhActivation = exports.BipolarSigmoidActivation = exports.BipolarActivation = exports.BentIdentityActivation = exports.GaussianActivation = exports.SinusoidActivation = exports.SoftSignActivation = exports.RELUActivation = exports.StepActivation = exports.IdentityActivation = exports.TanhActivation = exports.LogisticActivation = void 0;\nexports.LogisticActivation = function (x, derivative) {\n    if (!derivative) {\n        return 1 / (1 + Math.exp(-x));\n    }\n    else {\n        return exports.LogisticActivation(x, false) * (1 - exports.LogisticActivation(x, false));\n    }\n};\nexports.TanhActivation = function (x, derivative) {\n    if (!derivative) {\n        return Math.tanh(x);\n    }\n    else {\n        return 1 - Math.pow(exports.TanhActivation(x, false), 2);\n    }\n};\nexports.IdentityActivation = function (x, derivative) {\n    if (!derivative) {\n        return x;\n    }\n    else {\n        return 1;\n    }\n};\nexports.StepActivation = function (x, derivative) {\n    if (!derivative) {\n        return x < 0 ? 0 : 1;\n    }\n    else {\n        return 0;\n    }\n};\nexports.RELUActivation = function (x, derivative) {\n    if (!derivative) {\n        return x > 0 ? x : 0;\n    }\n    else {\n        return x <= 0 ? 0 : 1;\n    }\n};\nexports.SoftSignActivation = function (x, derivative) {\n    if (!derivative) {\n        return x / (1 + Math.abs(x));\n    }\n    else {\n        return x / ((1 + Math.abs(x)) * (1 + Math.abs(x)));\n    }\n};\nexports.SinusoidActivation = function (x, derivative) {\n    if (!derivative) {\n        return Math.sin(x);\n    }\n    else {\n        return Math.cos(x);\n    }\n};\nexports.GaussianActivation = function (x, derivative) {\n    if (!derivative) {\n        return Math.exp(-x * x);\n    }\n    else {\n        return -2 * x * exports.GaussianActivation(x, false);\n    }\n};\nexports.BentIdentityActivation = function (x, derivative) {\n    if (!derivative) {\n        return (Math.sqrt(x * x + 1) - 1) / 2 + x;\n    }\n    else {\n        return x / (2 * Math.sqrt(x * x + 1)) + 1;\n    }\n};\nexports.BipolarActivation = function (x, derivative) {\n    if (!derivative) {\n        return x > 0 ? 1 : -1;\n    }\n    else {\n        return 0;\n    }\n};\nexports.BipolarSigmoidActivation = function (x, derivative) {\n    if (!derivative) {\n        return 2 / (1 + Math.exp(-x)) - 1;\n    }\n    else {\n        return (2 * Math.exp(-x)) / ((1 + Math.exp(-x)) * (1 + Math.exp(-x)));\n    }\n};\nexports.HardTanhActivation = function (x, derivative) {\n    if (!derivative) {\n        return Math.max(-1, Math.min(1, x));\n    }\n    else {\n        return Math.abs(x) < 1 ? 1 : 0;\n    }\n};\nexports.AbsoluteActivation = function (x, derivative) {\n    if (!derivative) {\n        return Math.abs(x);\n    }\n    else {\n        return x < 0 ? -1 : 1;\n    }\n};\nexports.InverseActivation = function (x, derivative) {\n    if (!derivative) {\n        return 1 - x;\n    }\n    else {\n        return -1;\n    }\n};\nexports.SELUActivation = function (x, derivative) {\n    var alpha = 1.6732632423543772848170429916717; // this is bad\n    var scale = 1.0507009873554804934193349852946; // this is bad\n    if (!derivative) {\n        if (x > 0) {\n            return x * scale;\n        }\n        else {\n            return (alpha * Math.exp(x) - alpha) * scale;\n        }\n    }\n    else {\n        if (x > 0) {\n            return scale;\n        }\n        else {\n            return alpha * Math.exp(x) * scale;\n        }\n    }\n};\nexports.MISHActivation = function (x, derivative) {\n    var ex = Math.exp(x);\n    if (derivative) {\n        var w = ex * ex * ex + 4 * (ex * ex + x * ex + x + 1) + 6 * ex;\n        var d = 2 * ex + ex * ex + 2;\n        return ex * w / (d * d);\n    }\n    else {\n        return x * Math.tanh(Math.log(1 + ex));\n    }\n};\nexports.ALL_ACTIVATIONS = {\n    LogisticActivation: exports.LogisticActivation,\n    TanhActivation: exports.TanhActivation,\n    IdentityActivation: exports.IdentityActivation,\n    StepActivation: exports.StepActivation,\n    RELUActivation: exports.RELUActivation,\n    SoftSignActivation: exports.SoftSignActivation,\n    SinusoidActivation: exports.SinusoidActivation,\n    GaussianActivation: exports.GaussianActivation,\n    BentIdentityActivation: exports.BentIdentityActivation,\n    BipolarActivation: exports.BipolarActivation,\n    BipolarSigmoidActivation: exports.BipolarSigmoidActivation,\n    HardTanhActivation: exports.HardTanhActivation,\n    AbsoluteActivation: exports.AbsoluteActivation,\n    InverseActivation: exports.InverseActivation,\n    SELUActivation: exports.SELUActivation,\n    MISHActivation: exports.MISHActivation\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateGaussian = exports.avg = exports.sum = exports.min = exports.minValueIndex = exports.maxValueIndex = exports.max = exports.shuffle = exports.getOrDefault = exports.removeFromArray = exports.randBoolean = exports.randDouble = exports.randInt = exports.pickRandom = void 0;\n/**\n * Returns an random element from the given array.\n *\n * @param arr the array to pick from\n * @returns the random picked element\n */\nfunction pickRandom(arr) {\n    if (arr.length === 0) {\n        throw new RangeError(\"Cannot pick from an empty array\");\n    }\n    return arr[randInt(0, arr.length)];\n}\nexports.pickRandom = pickRandom;\n/**\n * Returns a random integer in the range [min,max)\n *\n * @param min bound\n * @param max bound\n * @returns random integer in [min,max)\n */\nfunction randInt(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n}\nexports.randInt = randInt;\n/**\n * Returns a random double in the range [min,max)\n *\n * @param min bound\n * @param max bound\n * @returns random double in [min,max)\n */\nfunction randDouble(min, max) {\n    return Math.random() * (max - min) + min;\n}\nexports.randDouble = randDouble;\n/**\n * Returns a random boolean\n *\n * @returns random boolean\n */\nfunction randBoolean() {\n    return Math.random() >= 0.5;\n}\nexports.randBoolean = randBoolean;\n/**\n * Removes an element from an array.\n *\n * @param arr the array\n * @param elem the element which will be removed\n * @returns false -> element does not exists on array; true -> element removed from array\n */\nfunction removeFromArray(arr, elem) {\n    var index = arr.indexOf(elem);\n    if (index === -1) {\n        return false;\n    }\n    else {\n        arr.splice(index, 1);\n        return true;\n    }\n}\nexports.removeFromArray = removeFromArray;\n/**\n * Checks a given value. If value is undefined return the default value.\n *\n * @param value to check\n * @param defaultValue to return if value is undefined\n * @returns value if defined otherwise defaultValue\n */\nfunction getOrDefault(value, defaultValue) {\n    return value !== null && value !== void 0 ? value : defaultValue;\n}\nexports.getOrDefault = getOrDefault;\n/**\n * Shuffles an array\n * @param array the array\n * @returns the shuffled array\n */\nfunction shuffle(array) {\n    var counter = array.length;\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        var index = randInt(0, counter);\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element with it\n        var temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n    return array;\n}\nexports.shuffle = shuffle;\n/**\n * Finds the maximum value of an number array\n *\n * @param array\n */\nfunction max(array) {\n    var maxValue = array[0];\n    for (var i = 1; i < array.length; i++) {\n        if (array[i] > maxValue) {\n            maxValue = array[i];\n        }\n    }\n    return maxValue;\n}\nexports.max = max;\n/**\n * Finds the maximum value index of an number array\n *\n * @param array\n */\nfunction maxValueIndex(array) {\n    var maxValue = array[0];\n    var maxValueIndex = 0;\n    for (var i = 1; i < array.length; i++) {\n        if (array[i] > maxValue) {\n            maxValue = array[i];\n            maxValueIndex = i;\n        }\n    }\n    return maxValueIndex;\n}\nexports.maxValueIndex = maxValueIndex;\n/**\n * Finds the minimum value index of an number array\n *\n * @param array\n */\nfunction minValueIndex(array) {\n    var minValue = array[0];\n    var minValueIndex = 0;\n    for (var i = 1; i < array.length; i++) {\n        if (array[i] < minValue) {\n            minValue = array[i];\n            minValueIndex = i;\n        }\n    }\n    return minValueIndex;\n}\nexports.minValueIndex = minValueIndex;\n/**\n * Finds the minimum value of an number array\n *\n * @param array\n */\nfunction min(array) {\n    var minValue = array[0];\n    for (var i = 1; i < array.length; i++) {\n        if (array[i] < minValue) {\n            minValue = array[i];\n        }\n    }\n    return minValue;\n}\nexports.min = min;\n/**\n * Calculates the average value of an array\n *\n * @param array\n */\nfunction avg(array) {\n    return sum(array) / array.length;\n}\nexports.avg = avg;\n/**\n * Calculates the sum of all values of an array\n *\n * @param array\n */\nfunction sum(array) {\n    var sum = 0;\n    for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n        var value = array_1[_i];\n        sum += value;\n    }\n    return sum;\n}\nexports.sum = sum;\n/**\n * Generates a random number with the gaussian distribution.\n *\n * @see https://en.wikipedia.org/wiki/Normal_distribution\n *\n * @param mean the mean value\n * @param deviation the standard deviation\n */\nfunction generateGaussian(mean, deviation) {\n    if (mean === void 0) { mean = 0; }\n    if (deviation === void 0) { deviation = 2; }\n    var sum = 0;\n    var numSamples = 10;\n    for (var i = 0; i < numSamples; i++) {\n        sum += Math.random();\n    }\n    return deviation * sum / numSamples + mean - 0.5 * deviation;\n}\nexports.generateGaussian = generateGaussian;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SwapNodesMutation = exports.SubBackConnectionMutation = exports.AddBackConnectionMutation = exports.SubSelfConnectionMutation = exports.AddSelfConnectionMutation = exports.SubGateMutation = exports.AddGateMutation = exports.ModActivationMutation = exports.ModBiasMutation = exports.ModWeightMutation = exports.SubConnectionMutation = exports.AddConnectionMutation = exports.SubNodeMutation = exports.AddNodeMutation = exports.Mutation = exports.ONLY_STRUCTURE = exports.NO_STRUCTURE_MUTATIONS = exports.FEEDFORWARD_MUTATIONS = exports.ALL_MUTATIONS = void 0;\nvar Node_1 = require(\"../architecture/Node\");\nvar NodeType_1 = require(\"../enums/NodeType\");\nvar Utils_1 = require(\"./Utils\");\n/**\n *\n * Genetic algorithm mutation methods. Creates variations (mutations) in neural networks which are then selected for better performance.\n *\n * @see {@link https://en.wikipedia.org/wiki/mutation_(genetic_algorithm)|Mutation (genetic algorithms) on Wikipedia}\n * @see {@link https://en.wikipedia.org/wiki/Genetic_algorithm#Selection|Selection (genetic algorithms) on Wikipedia}\n *\n */\nvar Mutation = /** @class */ (function () {\n    function Mutation() {\n    }\n    return Mutation;\n}());\nexports.Mutation = Mutation;\n/**\n * Add node mutation.\n *\n * Adds a hidden node to the network.\n *\n * @prop {boolean} randomActivation=true If enabled, sets a random activation function on the newly created node\n */\nvar AddNodeMutation = /** @class */ (function (_super) {\n    __extends(AddNodeMutation, _super);\n    /**\n     * Constructs a AddNodeMutation object\n     * @param randomActivation Should choose a random activation for a new node?\n     */\n    function AddNodeMutation(randomActivation) {\n        if (randomActivation === void 0) { randomActivation = true; }\n        var _this = _super.call(this) || this;\n        _this.randomActivation = randomActivation;\n        return _this;\n    }\n    /**\n     * Mutates the network.\n     *\n     * @param network The network which gets mutated\n     * @param options\n     */\n    AddNodeMutation.prototype.mutate = function (network, options) {\n        if (options === void 0) { options = {}; }\n        // check if max nodes is already reached\n        if (options.maxNodes !== undefined && network.nodes.length >= options.maxNodes) {\n            return;\n        }\n        // create a new hidden node\n        var node = new Node_1.Node(NodeType_1.NodeType.HIDDEN);\n        if (this.randomActivation) {\n            node.mutateActivation(); // choose random activation\n        }\n        // take a random connection\n        var connection = Utils_1.pickRandom(Array.from(network.connections));\n        var from = connection.from;\n        var to = connection.to;\n        network.disconnect(from, to); // disconnect it\n        // put the node in between the connection\n        var minBound = Math.max(network.inputSize, 1 + network.nodes.indexOf(from));\n        network.nodes.splice(minBound, 0, node);\n        var newConnection1 = network.connect(from, node, 1);\n        var newConnection2 = network.connect(node, to, connection.weight);\n        if (connection.gateNode != null) {\n            // if connection had a gate node\n            // choose randomly which new connection should get this gate node\n            if (Utils_1.randBoolean()) {\n                network.addGate(connection.gateNode, newConnection1);\n            }\n            else {\n                network.addGate(connection.gateNode, newConnection2);\n            }\n        }\n    };\n    return AddNodeMutation;\n}(Mutation));\nexports.AddNodeMutation = AddNodeMutation;\n/**\n * Sub node mutation.\n *\n * Removes a random node from the network.\n *\n * @prop keepGates=true Ensures replacement node has gated connections if the removed node did.\n */\nvar SubNodeMutation = /** @class */ (function (_super) {\n    __extends(SubNodeMutation, _super);\n    function SubNodeMutation(keepGates) {\n        if (keepGates === void 0) { keepGates = true; }\n        var _this = _super.call(this) || this;\n        _this.keepGates = keepGates;\n        return _this;\n    }\n    /**\n     * Mutates the network.\n     *\n     * @param network The network which gets mutated\n     */\n    SubNodeMutation.prototype.mutate = function (network) {\n        var possible = network.nodes.filter(function (node) { return node !== undefined && node.isHiddenNode(); }); // hidden nodes\n        if (possible.length > 0) {\n            network.removeNode(Utils_1.pickRandom(possible), this.keepGates); // remove a random node from the filtered array\n        }\n    };\n    return SubNodeMutation;\n}(Mutation));\nexports.SubNodeMutation = SubNodeMutation;\n/**\n * Add connections mutation.\n *\n * Adds a connection to the network.\n */\nvar AddConnectionMutation = /** @class */ (function (_super) {\n    __extends(AddConnectionMutation, _super);\n    function AddConnectionMutation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Mutates the network.\n     *\n     * @param network The network which gets mutated\n     * @param options\n     */\n    AddConnectionMutation.prototype.mutate = function (network, options) {\n        if (options === void 0) { options = {}; }\n        // check if max connections is already reached\n        if (options.maxConnections !== undefined && network.connections.size >= options.maxConnections) {\n            return;\n        }\n        var possible = [];\n        for (var i = 0; i < network.nodes.length - network.outputSize; i++) {\n            var from = network.nodes[i];\n            for (var j = Math.max(i + 1, network.inputSize); j < network.nodes.length; j++) {\n                var to = network.nodes[j];\n                if (!from.isProjectingTo(to)) {\n                    possible.push([from, to]);\n                }\n            }\n        }\n        if (possible.length > 0) {\n            var pair = Utils_1.pickRandom(possible);\n            network.connect(pair[0], pair[1]);\n        }\n    };\n    return AddConnectionMutation;\n}(Mutation));\nexports.AddConnectionMutation = AddConnectionMutation;\n/**\n * Sub connection mutation.\n *\n * Removes a random connection from the network.\n */\nvar SubConnectionMutation = /** @class */ (function (_super) {\n    __extends(SubConnectionMutation, _super);\n    function SubConnectionMutation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Mutates the network.\n     *\n     * @param network The network which gets mutated\n     */\n    SubConnectionMutation.prototype.mutate = function (network) {\n        var possible = Array.from(network.connections)\n            .filter(function (conn) { return conn.from.outgoing.size > 1; }) // do not deactivate a neuron\n            .filter(function (conn) { return conn.to.incoming.size > 1; }) // do not deactivate a neuron\n            .filter(function (conn) { return network.nodes.indexOf(conn.to) > network.nodes.indexOf(conn.from); }); // look for forward pointing connections\n        if (possible.length > 0) {\n            var randomConnection = Utils_1.pickRandom(possible); // pick a random connection from the filtered array\n            network.disconnect(randomConnection.from, randomConnection.to); // remove the connection from the network\n        }\n    };\n    return SubConnectionMutation;\n}(Mutation));\nexports.SubConnectionMutation = SubConnectionMutation;\n/**\n * Mod weight mutation.\n *\n * Modifies the weight of a random connection.\n *\n * @prop {number} min=-1 lower bound for weight modification\n * @prop {number} max=1 higher bound for weight modification\n */\nvar ModWeightMutation = /** @class */ (function (_super) {\n    __extends(ModWeightMutation, _super);\n    /**\n     * Constructs a ModWeightMutation object\n     * @param min The minimum weight.\n     * @param max The maximum weight.\n     */\n    function ModWeightMutation(min, max) {\n        if (min === void 0) { min = -1; }\n        if (max === void 0) { max = 1; }\n        var _this = _super.call(this) || this;\n        _this.min = min;\n        _this.max = max;\n        return _this;\n    }\n    /**\n     * Mutates the network.\n     *\n     * @param network The network which gets mutated\n     */\n    ModWeightMutation.prototype.mutate = function (network) {\n        // pick random connection and mutate it's weight\n        Utils_1.pickRandom(Array.from(network.connections)).weight += Utils_1.randDouble(this.min, this.max);\n    };\n    return ModWeightMutation;\n}(Mutation));\nexports.ModWeightMutation = ModWeightMutation;\n/**\n * Mod bias mutation.\n *\n * Modifies the bias value of a random hidden or output node\n *\n * @prop {number} min=-1 lower bound for modification of a neuron's bias\n * @prop {number} max=1 higher bound for modification of a neuron's bias\n */\nvar ModBiasMutation = /** @class */ (function (_super) {\n    __extends(ModBiasMutation, _super);\n    /**\n     * Constructs a ModBiasMutation object\n     * @param min The minimum bias.\n     * @param max The maximum bias.\n     */\n    function ModBiasMutation(min, max) {\n        if (min === void 0) { min = -1; }\n        if (max === void 0) { max = 1; }\n        var _this = _super.call(this) || this;\n        _this.min = min;\n        _this.max = max;\n        return _this;\n    }\n    /**\n     * Mutates the network.\n     *\n     * @param network The network which gets mutated\n     */\n    ModBiasMutation.prototype.mutate = function (network) {\n        Utils_1.pickRandom(network.nodes.filter(function (node) { return !node.isInputNode(); })) // pick random hidden or output node\n            .mutateBias(this); // mutate it's bias\n    };\n    return ModBiasMutation;\n}(Mutation));\nexports.ModBiasMutation = ModBiasMutation;\n/**\n * Mod activation mutation.\n *\n * Modifies the activation function of a random node\n *\n * @prop {boolean} mutateOutput=false Change activation function of network output neurons. Enable this to let the network experiment with its output.\n */\nvar ModActivationMutation = /** @class */ (function (_super) {\n    __extends(ModActivationMutation, _super);\n    /**\n     * Constructs a ModActivationMutation object\n     * @param mutateOutput Can the output be mutated?\n     */\n    function ModActivationMutation(mutateOutput) {\n        if (mutateOutput === void 0) { mutateOutput = false; }\n        var _this = _super.call(this) || this;\n        _this.mutateOutput = mutateOutput;\n        return _this;\n    }\n    /**\n     * Mutates the network.\n     *\n     * @param network The network which gets mutated\n     * @param options\n     */\n    ModActivationMutation.prototype.mutate = function (network, options) {\n        if (options === void 0) { options = {}; }\n        var possible = this.mutateOutput\n            ? network.nodes.filter(function (node) { return !node.isInputNode(); }) // hidden and output nodes\n            : network.nodes.filter(function (node) { return node.isHiddenNode(); }); // hidden nodes\n        if (possible.length > 0) {\n            Utils_1.pickRandom(possible).mutateActivation(options.allowedActivations); // mutate the activation of the node\n        }\n    };\n    return ModActivationMutation;\n}(Mutation));\nexports.ModActivationMutation = ModActivationMutation;\n/**\n * Add self connection.\n *\n * Adds a connection from a node to itself.\n */\nvar AddSelfConnectionMutation = /** @class */ (function (_super) {\n    __extends(AddSelfConnectionMutation, _super);\n    function AddSelfConnectionMutation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Mutates the network.\n     *\n     * @param network The network which gets mutated\n     */\n    AddSelfConnectionMutation.prototype.mutate = function (network) {\n        var possible = network.nodes\n            .filter(function (node) { return !node.isInputNode(); }) // no input nodes\n            .filter(function (node) { return node.selfConnection.weight === 0; }); // only nodes that doesn't have an self connection already\n        if (possible.length > 0) {\n            var node = Utils_1.pickRandom(possible); // pick a random node from the filtered array\n            network.connect(node, node); // connection the node to itself\n        }\n    };\n    return AddSelfConnectionMutation;\n}(Mutation));\nexports.AddSelfConnectionMutation = AddSelfConnectionMutation;\n/**\n * Sub self connection.\n *\n * Removes a connection from a node to itself.\n */\nvar SubSelfConnectionMutation = /** @class */ (function (_super) {\n    __extends(SubSelfConnectionMutation, _super);\n    function SubSelfConnectionMutation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Mutates the network.\n     *\n     * @param network The network which gets mutated\n     */\n    SubSelfConnectionMutation.prototype.mutate = function (network) {\n        var possible = Array.from(network.connections).filter(function (conn) { return conn.from === conn.to; });\n        if (possible.length > 0) {\n            var randomConnection = Utils_1.pickRandom(possible);\n            network.disconnect(randomConnection.from, randomConnection.to);\n        }\n    };\n    return SubSelfConnectionMutation;\n}(Mutation));\nexports.SubSelfConnectionMutation = SubSelfConnectionMutation;\n/**\n * Add gate mutation.\n *\n * Adds a gate to the network.\n */\nvar AddGateMutation = /** @class */ (function (_super) {\n    __extends(AddGateMutation, _super);\n    function AddGateMutation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Mutates the network.\n     *\n     * @param network The network which gets mutated\n     * @param options\n     */\n    AddGateMutation.prototype.mutate = function (network, options) {\n        if (options === void 0) { options = {}; }\n        // check if max gates isn't reached already\n        if (options.maxGates !== undefined && network.gates.length >= options.maxGates) {\n            return;\n        }\n        // use only connections that aren't already gated\n        var possible = Array.from(network.connections).filter(function (conn) { return conn.gateNode === null; });\n        if (possible.length > 0) {\n            var node = Utils_1.pickRandom(network.nodes.filter(function (node) { return !node.isInputNode(); })); // hidden or output node\n            var connection = Utils_1.pickRandom(possible); // random connection from filtered array\n            network.addGate(node, connection); // use the node to gate the connection\n        }\n    };\n    return AddGateMutation;\n}(Mutation));\nexports.AddGateMutation = AddGateMutation;\n/**\n * Sub gate mutation.\n *\n * Removes a gate from the network.\n */\nvar SubGateMutation = /** @class */ (function (_super) {\n    __extends(SubGateMutation, _super);\n    function SubGateMutation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Mutates the network.\n     *\n     * @param network The network which gets mutated\n     */\n    SubGateMutation.prototype.mutate = function (network) {\n        if (network.gates.length > 0) {\n            network.removeGate(Utils_1.pickRandom(network.gates));\n        }\n    };\n    return SubGateMutation;\n}(Mutation));\nexports.SubGateMutation = SubGateMutation;\n/**\n * Add back connection mutation.\n *\n * Adds a backward pointing connection to the network.\n */\nvar AddBackConnectionMutation = /** @class */ (function (_super) {\n    __extends(AddBackConnectionMutation, _super);\n    function AddBackConnectionMutation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Mutates the network.\n     *\n     * @param network The network which gets mutated\n     */\n    AddBackConnectionMutation.prototype.mutate = function (network) {\n        var possible = [];\n        for (var i = network.inputSize; i < network.nodes.length; i++) {\n            var from = network.nodes[i];\n            for (var j = network.inputSize; j < i; j++) {\n                var to = network.nodes[j];\n                if (!from.isProjectingTo(to)) {\n                    possible.push([from, to]);\n                }\n            }\n        }\n        if (possible.length > 0) {\n            var pair = Utils_1.pickRandom(possible);\n            network.connect(pair[0], pair[1]);\n        }\n    };\n    return AddBackConnectionMutation;\n}(Mutation));\nexports.AddBackConnectionMutation = AddBackConnectionMutation;\n/**\n * Sub back connection mutation.\n *\n * Removes a backward pointing connection to the network.\n */\nvar SubBackConnectionMutation = /** @class */ (function (_super) {\n    __extends(SubBackConnectionMutation, _super);\n    function SubBackConnectionMutation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Mutates the network.\n     *\n     * @param network The network which gets mutated\n     */\n    SubBackConnectionMutation.prototype.mutate = function (network) {\n        var possible = Array.from(network.connections)\n            .filter(function (conn) { return conn.from.outgoing.size > 1; })\n            .filter(function (conn) { return conn.to.incoming.size > 1; })\n            .filter(function (conn) { return network.nodes.indexOf(conn.from) > network.nodes.indexOf(conn.to); });\n        if (possible.length > 0) {\n            var randomConnection = Utils_1.pickRandom(possible);\n            network.disconnect(randomConnection.from, randomConnection.to);\n        }\n    };\n    return SubBackConnectionMutation;\n}(Mutation));\nexports.SubBackConnectionMutation = SubBackConnectionMutation;\n/**\n * Swap nodes mutation.\n *\n * Swaps the values of two randomly picked nodes.\n *\n * @prop {boolean} mutateOutput=false Swap bias and activation function of network output neurons too. Disable this to keep output of a neural network normalized.\n */\nvar SwapNodesMutation = /** @class */ (function (_super) {\n    __extends(SwapNodesMutation, _super);\n    /**\n     * Constructs a SwapNodeMutation object\n     * @param mutateOutput Can the output be mutated?\n     */\n    function SwapNodesMutation(mutateOutput) {\n        if (mutateOutput === void 0) { mutateOutput = false; }\n        var _this = _super.call(this) || this;\n        _this.mutateOutput = mutateOutput;\n        return _this;\n    }\n    /**\n     * Mutates the network.\n     *\n     * @param network The network which gets mutated\n     */\n    SwapNodesMutation.prototype.mutate = function (network) {\n        var possible = this.mutateOutput\n            ? network.nodes.filter(function (node) { return node !== undefined && !node.isInputNode(); }) // hidden or output nodes\n            : network.nodes.filter(function (node) { return node !== undefined && node.isHiddenNode(); }); // only hidden nodes\n        if (possible.length >= 2) {\n            // select two different nodes from the filtered array\n            var node1_1 = Utils_1.pickRandom(possible);\n            var node2 = Utils_1.pickRandom(possible.filter(function (node) { return node !== node1_1; }));\n            // change there parameters\n            var biasTemp = node1_1.bias;\n            var squashTemp = node1_1.squash;\n            node1_1.bias = node2.bias;\n            node1_1.squash = node2.squash;\n            node2.bias = biasTemp;\n            node2.squash = squashTemp;\n        }\n    };\n    return SwapNodesMutation;\n}(Mutation));\nexports.SwapNodesMutation = SwapNodesMutation;\n/**\n * Array of all mutation methods\n */\nvar ALL_MUTATIONS = [\n    new AddNodeMutation(),\n    new SubNodeMutation(),\n    new AddConnectionMutation(),\n    new SubConnectionMutation(),\n    new ModWeightMutation(),\n    new ModBiasMutation(),\n    new ModActivationMutation(),\n    new AddGateMutation(),\n    new SubGateMutation(),\n    new AddSelfConnectionMutation(),\n    new SubSelfConnectionMutation(),\n    new AddBackConnectionMutation(),\n    new SubBackConnectionMutation(),\n    new SwapNodesMutation(),\n];\nexports.ALL_MUTATIONS = ALL_MUTATIONS;\n/**\n * Array of all feed forward mutation methods\n */\nvar FEEDFORWARD_MUTATIONS = [\n    new AddNodeMutation(),\n    new SubNodeMutation(),\n    new AddConnectionMutation(),\n    new SubConnectionMutation(),\n    new ModWeightMutation(),\n    new ModBiasMutation(),\n    new ModActivationMutation(),\n    new SwapNodesMutation(),\n];\nexports.FEEDFORWARD_MUTATIONS = FEEDFORWARD_MUTATIONS;\nvar NO_STRUCTURE_MUTATIONS = [\n    new ModWeightMutation(),\n    new ModBiasMutation(),\n    new ModActivationMutation(),\n];\nexports.NO_STRUCTURE_MUTATIONS = NO_STRUCTURE_MUTATIONS;\nvar ONLY_STRUCTURE = [\n    new AddNodeMutation(),\n    new SubNodeMutation(),\n    new AddConnectionMutation(),\n    new SubConnectionMutation(),\n    new AddGateMutation(),\n    new SubGateMutation(),\n    new AddSelfConnectionMutation(),\n    new SubSelfConnectionMutation(),\n    new AddBackConnectionMutation(),\n    new SubBackConnectionMutation(),\n    new SwapNodesMutation(),\n];\nexports.ONLY_STRUCTURE = ONLY_STRUCTURE;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\n/**\n * A connection instance describes the connection between two nodes.\n */\nvar Connection = /** @class */ (function () {\n    function Connection(from, to, weight, gateNode) {\n        this.from = from;\n        this.to = to;\n        this.weight = weight !== null && weight !== void 0 ? weight : 0;\n        this.gain = 1;\n        this.eligibility = 0;\n        this.deltaWeightsPrevious = 0;\n        this.deltaWeightsTotal = 0;\n        this.xTraceNodes = [];\n        this.xTraceValues = [];\n        if (gateNode) {\n            this.gateNode = gateNode;\n            gateNode.addGate(this);\n        }\n        else {\n            this.gateNode = null;\n        }\n    }\n    /**\n     * Returns an innovation ID\n     *\n     * @see {@link https://en.wikipedia.org/wiki/Pairing_function (Cantor pairing function)|Pairing function (Cantor pairing function)}\n     *\n     * @param a - A [natural number](https://en.wikipedia.org/wiki/Natural_number), which is an integer greater than or equal to zero\n     * @param b - A [natural number](https://en.wikipedia.org/wiki/Natural_number), which is an integer greater than or equal to zero\n     *\n     * @return An Integer that uniquely represents a pair of Integers\n     */\n    Connection.innovationID = function (a, b) {\n        return 1 / 2 * (a + b) * (a + b + 1) + b;\n    };\n    /**\n     * Returns the connection as a JSON\n     *\n     * @return Connection as a JSON\n     */\n    Connection.prototype.toJSON = function () {\n        return {\n            fromIndex: this.from.index,\n            toIndex: this.to.index,\n            gateNodeIndex: this.gateNode === null ? null : this.gateNode.index,\n            weight: this.weight\n        };\n    };\n    return Connection;\n}());\nexports.Connection = Connection;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Node = void 0;\nvar NodeType_1 = require(\"../enums/NodeType\");\nvar Activation_1 = require(\"../methods/Activation\");\nvar Mutation_1 = require(\"../methods/Mutation\");\nvar Utils_1 = require(\"../methods/Utils\");\nvar Connection_1 = require(\"./Connection\");\n/**\n * Creates a new neuron/node\n *\n * Neurons are the basic unit of the neural network. They can be connected together, or used to gate connections between other neurons. A Neuron can perform basically 4 operations: form connections, gate connections, activate and [propagate](https://www.youtube.com/watch?v=Ilg3gGewQ5U).\n *\n * For more information check:\n * - [BecomingHuman](https://becominghuman.ai/what-is-an-artificial-neuron-8b2e421ce42e)\n * - [Wikipedia](https://en.wikipedia.org/wiki/Artificial_neuron)\n * - [Neataptic](https://wagenaartje.github.io/neataptic/docs/architecture/node/)\n * - [Synaptic](https://github.com/cazala/synaptic/wiki/Neural-Networks-101)\n * - [Keras](https://keras.io/backend/#bias_add)\n */\nvar Node = /** @class */ (function () {\n    function Node(type) {\n        if (type === void 0) { type = NodeType_1.NodeType.HIDDEN; }\n        this.type = type;\n        this.bias = Utils_1.randDouble(-1, 1);\n        this.squash = Activation_1.LogisticActivation;\n        this.activation = 0;\n        this.derivativeState = 1;\n        this.state = 0;\n        this.old = 0;\n        this.mask = 1;\n        this.deltaBiasPrevious = 0;\n        this.deltaBiasTotal = 0;\n        this.incoming = new Set();\n        this.outgoing = new Set();\n        this.gated = new Set();\n        this.selfConnection = new Connection_1.Connection(this, this, 0);\n        this.errorResponsibility = 0;\n        this.errorProjected = 0;\n        this.errorGated = 0;\n        this.index = NaN;\n    }\n    /**\n     * Convert a json object to a node\n     *\n     * @param json A node represented as a JSON object\n     *\n     * @returns itself\n     *\n     */\n    Node.prototype.fromJSON = function (json) {\n        var _a, _b, _c, _d;\n        this.bias = (_a = json.bias) !== null && _a !== void 0 ? _a : Utils_1.randDouble(-1, 1);\n        this.type = json.type;\n        this.squash = (_b = json.squash) !== null && _b !== void 0 ? _b : Activation_1.LogisticActivation;\n        this.mask = (_c = json.mask) !== null && _c !== void 0 ? _c : 1;\n        this.index = (_d = json.index) !== null && _d !== void 0 ? _d : NaN;\n        return this;\n    };\n    /**\n     * Clears this node's state information - _i.e. resets node and its connections to \"factory settings\"_\n     *\n     * `node.clear()` is useful for predicting time series.\n     *\n     */\n    Node.prototype.clear = function () {\n        this.incoming.forEach(function (connection) {\n            connection.eligibility = 0;\n            connection.xTraceNodes = [];\n            connection.xTraceValues = [];\n        });\n        this.gated.forEach(function (conn) { return conn.gain = 0; });\n        this.errorResponsibility = this.errorProjected = this.errorGated = 0;\n        this.old = this.state = this.activation = 0;\n    };\n    /**\n     * Mutates the node's bias\n     *\n     * @param method The method is needed for the min and max value of the node's bias otherwise a range of [-1,1] is chosen\n     *\n     */\n    Node.prototype.mutateBias = function (method) {\n        if (method === void 0) { method = new Mutation_1.ModBiasMutation(); }\n        this.bias += Utils_1.randDouble(method.min, method.max); // add a random value in range [min,max)\n    };\n    /**\n     * Mutates the node's activation function\n     */\n    Node.prototype.mutateActivation = function (allowedActivations) {\n        var _this = this;\n        if (allowedActivations === void 0) { allowedActivations = Object.values(Activation_1.ALL_ACTIVATIONS); }\n        // pick a random activation from allowed activations except the current activation\n        var possible = allowedActivations.filter(function (activation) { return activation !== _this.squash; });\n        if (possible.length > 0) {\n            this.squash = Utils_1.pickRandom(possible);\n        }\n    };\n    /**\n     * Checks if the given node(s) are have outgoing connections to this node\n     *\n     * @param node Checks if `node(s)` have outgoing connections into this node\n     *\n     * @return Returns true, if every node(s) has an outgoing connection into this node\n     */\n    Node.prototype.isProjectedBy = function (node) {\n        if (node === this) { // self connection\n            return this.selfConnection.weight !== 0; // is projected, if weight of self connection is unequal 0\n        }\n        else {\n            return Array.from(this.incoming).map(function (conn) { return conn.from; }).includes(node); // check every incoming connection for node\n        }\n    };\n    /**\n     * Checks if this node has an outgoing connection(s) into the given node(s)\n     *\n     * @param node Checks if this node has outgoing connection(s) into `node(s)`\n     *\n     * @returns Returns true, if this node has an outgoing connection into every node(s)\n     */\n    Node.prototype.isProjectingTo = function (node) {\n        if (node === this) { // self connection\n            return this.selfConnection.weight !== 0; // is projected, if weight of self connection is unequal 0\n        }\n        else {\n            return Array.from(this.outgoing).map(function (conn) { return conn.to; }).includes(node); // check every outgoing connection for node\n        }\n    };\n    /**\n     * This node gates (influences) the given connection\n     *\n     * @param connection Connection to be gated (influenced) by a neuron\n     */\n    Node.prototype.addGate = function (connection) {\n        this.gated.add(connection);\n        connection.gateNode = this;\n    };\n    /**\n     * Stops this node from gating (manipulating) the given connection(s)\n     *\n     * @param connection Connections to remove gate - _i.e. remove this node from_\n     */\n    Node.prototype.removeGate = function (connection) {\n        this.gated.delete(connection);\n        connection.gateNode = null;\n        connection.gain = 1;\n    };\n    /**\n     * Connects this node to the given node(s)\n     *\n     * @param target Node(s) to project connection(s) to\n     * @param weight Initial connection(s) [weight](https://en.wikipedia.org/wiki/Synaptic_weight)\n     * @param twoSided If `true` connect nodes to each other\n     */\n    Node.prototype.connect = function (target, weight, twoSided) {\n        if (weight === void 0) { weight = 1; }\n        if (twoSided === void 0) { twoSided = false; }\n        if (target === this) { // self connection\n            this.selfConnection.weight = weight;\n            return this.selfConnection;\n        }\n        else if (this.isProjectingTo(target)) {\n            throw new ReferenceError(\"Their is already a connection!\"); // already connected\n        }\n        else {\n            var connection = new Connection_1.Connection(this, target, weight); // create new connection\n            // add it to the arrays\n            this.outgoing.add(connection);\n            target.incoming.add(connection);\n            if (twoSided) {\n                target.connect(this); // connect in the other direction\n            }\n            return connection;\n        }\n    };\n    /**\n     * Disconnects this node from the given node(s)\n     *\n     * @param node Node(s) to remove connection(s) to\n     * @param twoSided=false If `true` disconnects nodes from each other (i.e. both sides)\n     */\n    Node.prototype.disconnect = function (node, twoSided) {\n        if (twoSided === void 0) { twoSided = false; }\n        if (node === this) { // self connection\n            this.selfConnection.weight = 0; // set weight to 0\n            return this.selfConnection;\n        }\n        var connections = Array.from(this.outgoing).filter(function (conn) { return conn.to === node; });\n        if (connections.length === 0) {\n            throw new Error(\"No Connection found\");\n        }\n        var connection = connections[0];\n        // remove it from the arrays\n        this.outgoing.delete(connection);\n        connection.to.incoming.delete(connection);\n        if (connection.gateNode !== undefined && connection.gateNode != null) {\n            connection.gateNode.removeGate(connection); // if connection is gated -> remove gate\n        }\n        if (twoSided) {\n            node.disconnect(this); // disconnect the other direction\n        }\n        return connection;\n    };\n    /**\n     * Backpropagate the error (a.k.a. learn).\n     *\n     * After an activation, you can teach the node what should have been the correct output (a.k.a. train). This is done by backpropagating. [Momentum](https://www.willamette.edu/~gorr/classes/cs449/momrate.html) adds a fraction of the previous weight update to the current one. When the gradient keeps pointing in the same direction, this will increase the size of the steps taken towards the minimum.\n     *\n     * If you combine a high learning rate with a lot of momentum, you will rush past the minimum (of the error function) with huge steps. It is therefore often necessary to reduce the global learning rate µ when using a lot of momentum (m close to 1).\n     *\n     * @param target The target value (i.e. \"the value the network SHOULD have given\")\n     * @param options More options for propagation\n     *\n     * @see [Regularization Neataptic](https://wagenaartje.github.io/neataptic/docs/methods/regularization/)\n     * @see [What is backpropagation | YouTube](https://www.youtube.com/watch?v=Ilg3gGewQ5U)\n     */\n    Node.prototype.propagate = function (target, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        options.momentum = Utils_1.getOrDefault(options.momentum, 0);\n        options.rate = Utils_1.getOrDefault(options.rate, 0.3);\n        options.update = Utils_1.getOrDefault(options.update, true);\n        if (target !== undefined && Number.isFinite(target)) {\n            this.errorResponsibility = this.errorProjected = target - this.activation;\n        }\n        else {\n            this.errorProjected = 0;\n            this.outgoing.forEach(function (connection) {\n                _this.errorProjected += connection.to.errorResponsibility * connection.weight * connection.gain;\n            });\n            this.errorProjected *= this.derivativeState;\n            this.errorGated = 0;\n            this.gated.forEach(function (connection) {\n                var influence;\n                if (connection.to.selfConnection.gateNode === _this) { // self connection is gated with this node\n                    influence = connection.to.old + connection.weight * connection.from.activation;\n                }\n                else {\n                    influence = connection.weight * connection.from.activation;\n                }\n                _this.errorGated += connection.to.errorResponsibility * influence;\n            });\n            this.errorGated *= this.derivativeState;\n            this.errorResponsibility = this.errorProjected + this.errorGated;\n        }\n        this.incoming.forEach(function (connection) {\n            var _a, _b;\n            // calculate gradient\n            var gradient = _this.errorProjected * connection.eligibility;\n            for (var j = 0; j < connection.xTraceNodes.length; j++) {\n                gradient += connection.xTraceNodes[j].errorResponsibility * connection.xTraceValues[j];\n            }\n            connection.deltaWeightsTotal += ((_a = options.rate) !== null && _a !== void 0 ? _a : 0.3) * gradient * _this.mask;\n            if (options.update) {\n                connection.deltaWeightsTotal += ((_b = options.momentum) !== null && _b !== void 0 ? _b : 0) * connection.deltaWeightsPrevious;\n                connection.weight += connection.deltaWeightsTotal;\n                connection.deltaWeightsPrevious = connection.deltaWeightsTotal;\n                connection.deltaWeightsTotal = 0;\n            }\n        });\n        this.deltaBiasTotal += options.rate * this.errorResponsibility;\n        if (options.update) {\n            this.deltaBiasTotal += options.momentum * this.deltaBiasPrevious;\n            this.bias += this.deltaBiasTotal;\n            this.deltaBiasPrevious = this.deltaBiasTotal;\n            this.deltaBiasTotal = 0;\n        }\n    };\n    /**\n     * Actives the node.\n     *\n     * When a neuron activates, it computes its state from all its input connections and 'squashes' it using its activation function, and returns the output (activation).\n     *\n     * You can also provide the activation (a float between 0 and 1) as a parameter, which is useful for neurons in the input layer.\n     *\n     * @param [input] Environment signal (i.e. optional numerical value passed to the network as input)  - _should only be passed in input neurons_\n     * @param [trace] Controls whether traces are created when activation happens (a trace is meta information left behind for different uses, e.g. backpropagation).\n     *\n     * @returns A neuron's ['Squashed'](https://medium.com/the-theory-of-everything/understanding-activation-functions-in-neural-networks-9491262884e0) output value\n     */\n    Node.prototype.activate = function (input, trace) {\n        var _this = this;\n        if (trace === void 0) { trace = true; }\n        if (input !== undefined) {\n            return this.activation = input;\n        }\n        else if (this.isInputNode()) {\n            throw new ReferenceError(\"There is no input given to an input node!\");\n        }\n        if (trace) {\n            this.old = this.state;\n            this.state = this.selfConnection.gain * this.selfConnection.weight * this.state + this.bias;\n            this.incoming.forEach(function (conn) {\n                _this.state += conn.from.activation * conn.weight * conn.gain;\n            });\n            this.activation = this.squash(this.state, false) * this.mask;\n            this.derivativeState = this.squash(this.state, true);\n            // store traces\n            var nodes_1 = [];\n            var influences_1 = [];\n            // Adjust 'gain' (to gated connections) & Build traces\n            this.gated.forEach(function (connection) {\n                connection.gain = _this.activation;\n                // Build traces\n                var index = nodes_1.indexOf(connection.to);\n                if (index > -1) { // Node & influence exist\n                    influences_1[index] += connection.weight * connection.from.activation;\n                }\n                else { // Add node & corresponding influence\n                    nodes_1.push(connection.to);\n                    if (connection.to.selfConnection.gateNode === _this) {\n                        influences_1.push(connection.weight * connection.from.activation + connection.to.old);\n                    }\n                    else {\n                        influences_1.push(connection.weight * connection.from.activation);\n                    }\n                }\n            });\n            // Forwarding 'xTrace' (to incoming connections)\n            this.incoming.forEach(function (connection) {\n                connection.eligibility = _this.selfConnection.gain * _this.selfConnection.weight * connection.eligibility + connection.from.activation * connection.gain;\n                for (var i = 0; i < nodes_1.length; i++) {\n                    var node = nodes_1[i];\n                    var influence = influences_1[i];\n                    var index = connection.xTraceNodes.indexOf(node);\n                    if (index > -1) {\n                        connection.xTraceValues[index] = node.selfConnection.gain * node.selfConnection.weight * connection.xTraceValues[index] + _this.derivativeState * connection.eligibility * influence;\n                    }\n                    else {\n                        connection.xTraceNodes.push(node);\n                        connection.xTraceValues.push(_this.derivativeState * connection.eligibility * influence);\n                    }\n                }\n            });\n            return this.activation;\n        }\n        else {\n            if (this.isInputNode())\n                return this.activation = 0;\n            this.state = this.selfConnection.gain * this.selfConnection.weight * this.state + this.bias;\n            this.incoming.forEach(function (connection) { return _this.state += connection.from.activation * connection.weight * connection.gain; });\n            this.activation = this.squash(this.state, false);\n            // Adjust gain\n            this.gated.forEach(function (connection) { return connection.gain = _this.activation; });\n            return this.activation;\n        }\n    };\n    /**\n     * Converts the node to a json object that can later be converted back\n     *\n     * @returns A node representing json object\n     */\n    Node.prototype.toJSON = function () {\n        return {\n            bias: this.bias,\n            type: this.type,\n            squash: this.squash,\n            mask: this.mask,\n            index: this.index\n        };\n    };\n    /**\n     * Is this a input Node?\n     */\n    Node.prototype.isInputNode = function () {\n        return this.type === NodeType_1.NodeType.INPUT;\n    };\n    /**\n     * Is this a hidden Node?\n     */\n    Node.prototype.isHiddenNode = function () {\n        return this.type === NodeType_1.NodeType.HIDDEN;\n    };\n    /**\n     * Is this a output Node?\n     */\n    Node.prototype.isOutputNode = function () {\n        return this.type === NodeType_1.NodeType.OUTPUT;\n    };\n    /**\n     * Set bias.\n     *\n     * @param bias the new bias value\n     */\n    Node.prototype.setBias = function (bias) {\n        this.bias = bias;\n        return this;\n    };\n    /**\n     * Set activation type\n     *\n     * @param activation the new activation type\n     */\n    Node.prototype.setActivationType = function (activation) {\n        this.squash = activation;\n        return this;\n    };\n    return Node;\n}());\nexports.Node = Node;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GatingType = void 0;\n/**\n * The type of gating.\n */\nvar GatingType;\n(function (GatingType) {\n    /**\n     * Gate incoming connections.\n     */\n    GatingType[GatingType[\"INPUT\"] = 0] = \"INPUT\";\n    /**\n     * Gate self connections.\n     */\n    GatingType[GatingType[\"SELF\"] = 1] = \"SELF\";\n    /**\n     * Gate outgoing connections.\n     */\n    GatingType[GatingType[\"OUTPUT\"] = 2] = \"OUTPUT\";\n})(GatingType = exports.GatingType || (exports.GatingType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Layer = void 0;\nvar ConnectionType_1 = require(\"../../enums/ConnectionType\");\nvar GatingType_1 = require(\"../../enums/GatingType\");\n/**\n * Parent class for layers.\n */\nvar Layer = /** @class */ (function () {\n    function Layer(outputSize) {\n        this.outputSize = outputSize;\n        this.nodes = [];\n        this.inputNodes = new Set();\n        this.outputNodes = new Set();\n        this.connections = [];\n        this.gates = [];\n    }\n    /**\n     * Connect two Layers or sets of Nodes.\n     *\n     * @param from origin Nodes / Layer\n     * @param to destination Nodes / Layer\n     * @param connectionType The type of connection\n     * @param weight the initial weights for all new connections\n     *\n     * @returns all created connections\n     */\n    Layer.connect = function (from, to, connectionType, weight) {\n        if (connectionType === void 0) { connectionType = ConnectionType_1.ConnectionType.ALL_TO_ALL; }\n        if (weight === void 0) { weight = 1; }\n        if (connectionType === ConnectionType_1.ConnectionType.NO_CONNECTION) {\n            throw new ReferenceError(\"Cannot connect with 'NO_CONNECTION' connection type\");\n        }\n        var fromNodes = Array.from(from instanceof Layer ? from.outputNodes : from);\n        var toNodes = Array.from(to instanceof Layer ? to.inputNodes : to);\n        if (toNodes.length === 0) {\n            throw new ReferenceError(\"Target from has no input nodes!\");\n        }\n        if (fromNodes.length === 0) {\n            throw new ReferenceError(\"This from has no output nodes!\");\n        }\n        var connections = [];\n        if (connectionType === ConnectionType_1.ConnectionType.ALL_TO_ALL) {\n            fromNodes.forEach(function (fromNode) {\n                toNodes.forEach(function (toNode) {\n                    connections.push(fromNode.connect(toNode, weight)); // connect every \"from node\" to every \"to node\"\n                });\n            });\n        }\n        else if (connectionType === ConnectionType_1.ConnectionType.ONE_TO_ONE) {\n            if (fromNodes.length !== toNodes.length) {\n                throw new RangeError(\"Can't connect one to one! Number of output nodes from are unequal number of incoming nodes from next layer!\");\n            }\n            for (var i = 0; i < fromNodes.length; i++) {\n                connections.push(fromNodes[i].connect(toNodes[i], weight)); // connect every nodes with same indices\n            }\n        }\n        else if (connectionType === ConnectionType_1.ConnectionType.POOLING) {\n            // connect the same amount of input nodes to every output node\n            // every input node has only one connection available\n            var ratio_1 = toNodes.length / fromNodes.length;\n            connections.push.apply(connections, fromNodes.map(function (node, index) { return node.connect(toNodes[Math.floor(index * ratio_1)], weight); }));\n        }\n        return connections;\n    };\n    /**\n     * Gate nodes and connections.\n     *\n     * @param nodes the nodes which function as gateNodes\n     * @param connections the connections which will be gated\n     * @param gateType The type of gating\n     *\n     * @returns all gated connections\n     */\n    Layer.gate = function (nodes, connections, gateType) {\n        var gatedConnections = [];\n        switch (gateType) {\n            case GatingType_1.GatingType.INPUT: { // gate incoming connections\n                var toNodes = Array.from(new Set(connections.map(function (conn) { return conn.to; })));\n                var _loop_1 = function (i) {\n                    var node = toNodes[i];\n                    var gateNode = nodes[i % nodes.length];\n                    node.incoming\n                        .forEach(function (conn) {\n                        if (connections.includes(conn)) {\n                            gateNode.addGate(conn);\n                            gatedConnections.push(conn);\n                        }\n                    });\n                };\n                for (var i = 0; i < toNodes.length; i++) {\n                    _loop_1(i);\n                }\n                break;\n            }\n            case GatingType_1.GatingType.SELF: { // gate self connections\n                var fromNodes = Array.from(new Set(connections.map(function (conn) { return conn.from; })));\n                for (var i = 0; i < fromNodes.length; i++) {\n                    if (connections.includes(fromNodes[i].selfConnection)) {\n                        nodes[i % nodes.length].addGate(fromNodes[i].selfConnection);\n                        gatedConnections.push(fromNodes[i].selfConnection);\n                    }\n                }\n                break;\n            }\n            case GatingType_1.GatingType.OUTPUT: { // gate outgoing connections\n                var fromNodes = Array.from(new Set(connections.map(function (conn) { return conn.from; })));\n                var _loop_2 = function (i) {\n                    var node = fromNodes[i];\n                    var gateNode = nodes[i % nodes.length];\n                    node.outgoing\n                        .forEach(function (conn) {\n                        if (connections.includes(conn)) {\n                            gateNode.addGate(conn);\n                            gatedConnections.push(conn);\n                        }\n                    });\n                };\n                for (var i = 0; i < fromNodes.length; i++) {\n                    _loop_2(i);\n                }\n                break;\n            }\n        }\n        return gatedConnections;\n    };\n    return Layer;\n}());\nexports.Layer = Layer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConstantNode = void 0;\nvar NodeType_1 = require(\"../../enums/NodeType\");\nvar Activation_1 = require(\"../../methods/Activation\");\nvar Node_1 = require(\"../Node\");\n/**\n * Constant node\n */\nvar ConstantNode = /** @class */ (function (_super) {\n    __extends(ConstantNode, _super);\n    function ConstantNode() {\n        var _this = _super.call(this, NodeType_1.NodeType.HIDDEN) || this;\n        _this.bias = 1;\n        return _this;\n    }\n    /**\n     * Create a constant node from json object.\n     *\n     * @param json the json object representing the node\n     *\n     * @returns the created node\n     */\n    ConstantNode.prototype.fromJSON = function (json) {\n        var _a, _b;\n        this.index = (_a = json.index) !== null && _a !== void 0 ? _a : -1;\n        this.squash = (_b = json.squash) !== null && _b !== void 0 ? _b : Activation_1.IdentityActivation;\n        return this;\n    };\n    /**\n     * Convert this node into a json object.\n     *\n     * @returns the json object representing this node\n     */\n    ConstantNode.prototype.toJSON = function () {\n        return { index: this.index, squash: this.squash };\n    };\n    /**\n     * Bias mutations aren't allowed for a constant node.\n     */\n    ConstantNode.prototype.mutateBias = function () {\n        throw new ReferenceError(\"Cannot mutate a pool node!\");\n    };\n    /**\n     * Activation mutations aren't allowed for a constant node.\n     */\n    ConstantNode.prototype.mutateActivation = function () {\n        throw new ReferenceError(\"Cannot mutate a pool node!\");\n    };\n    /**\n     * Constant nodes can't gate a connection.\n     */\n    ConstantNode.prototype.addGate = function () {\n        throw new ReferenceError(\"A pool node can't gate a connection!\");\n    };\n    /**\n     * Constant nodes can't gate a connection.\n     */\n    ConstantNode.prototype.removeGate = function () {\n        throw new ReferenceError(\"A pool node can't gate a connection!\");\n    };\n    /**\n     * Can't set the bias of a constant node.\n     */\n    ConstantNode.prototype.setBias = function () {\n        throw new ReferenceError(\"Cannot set the bias of a pool node!\");\n    };\n    return ConstantNode;\n}(Node_1.Node));\nexports.ConstantNode = ConstantNode;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoiseNode = void 0;\nvar NodeType_1 = require(\"../../enums/NodeType\");\nvar Utils_1 = require(\"../../methods/Utils\");\nvar ConstantNode_1 = require(\"./ConstantNode\");\n/**\n * Noise node\n */\nvar NoiseNode = /** @class */ (function (_super) {\n    __extends(NoiseNode, _super);\n    function NoiseNode(options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this) || this;\n        _this.noiseType = Utils_1.getOrDefault(options.noiseType, NodeType_1.NoiseNodeType.GAUSSIAN_NOISE);\n        _this.options = options;\n        return _this;\n    }\n    /**\n     * Actives the node.\n     *\n     * When a neuron activates, it computes its state from all its input connections and 'squashes' it using its activation function, and returns the output (activation).\n     *\n     * You can also provide the activation (a float between 0 and 1) as a parameter, which is useful for neurons in the input layer.\n     *\n     * @returns A neuron's output value\n     */\n    NoiseNode.prototype.activate = function () {\n        var _a, _b, _c, _d;\n        this.old = this.state;\n        var incomingStates = Array.from(this.incoming).map(function (conn) { return conn.from.activation * conn.weight * conn.gain; });\n        switch (this.noiseType) {\n            case NodeType_1.NoiseNodeType.GAUSSIAN_NOISE:\n                this.state = Utils_1.avg(incomingStates) + Utils_1.generateGaussian((_b = (_a = this.options.gaussian) === null || _a === void 0 ? void 0 : _a.mean) !== null && _b !== void 0 ? _b : 0, (_d = (_c = this.options.gaussian) === null || _c === void 0 ? void 0 : _c.deviation) !== null && _d !== void 0 ? _d : 2);\n                break;\n            default:\n                throw new ReferenceError(\"Cannot activate this noise type!\");\n        }\n        this.activation = this.squash(this.state, false) * this.mask;\n        this.derivativeState = this.squash(this.state, true);\n        return this.activation;\n    };\n    /**\n     * Backpropagate the error (a.k.a. learn).\n     *\n     * After an activation, you can teach the node what should have been the correct output (a.k.a. train). This is done by backpropagating. [Momentum](https://www.willamette.edu/~gorr/classes/cs449/momrate.html) adds a fraction of the previous weight update to the current one. When the gradient keeps pointing in the same direction, this will increase the size of the steps taken towards the minimum.\n     *\n     * If you combine a high learning rate with a lot of momentum, you will rush past the minimum (of the error function) with huge steps. It is therefore often necessary to reduce the global learning rate µ when using a lot of momentum (m close to 1).\n     *\n     * @param target The target value (i.e. \"the value the network SHOULD have given\")\n     * @param options More options for propagation\n     */\n    NoiseNode.prototype.propagate = function (target, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        options.momentum = Utils_1.getOrDefault(options.momentum, 0);\n        options.rate = Utils_1.getOrDefault(options.rate, 0.3);\n        options.update = Utils_1.getOrDefault(options.update, true);\n        var connectionsStates = Array.from(this.outgoing).map(function (conn) { return conn.to.errorResponsibility * conn.weight * conn.gain; });\n        this.errorResponsibility = this.errorProjected = Utils_1.sum(connectionsStates) * this.derivativeState;\n        this.incoming.forEach(function (connection) {\n            var _a, _b;\n            // calculate gradient\n            var gradient = _this.errorProjected * connection.eligibility;\n            for (var i = 0; i < connection.xTraceNodes.length; i++) {\n                gradient += connection.xTraceNodes[i].errorResponsibility * connection.xTraceValues[i];\n            }\n            connection.deltaWeightsTotal += ((_a = options.rate) !== null && _a !== void 0 ? _a : 0.3) * gradient * _this.mask;\n            if (options.update) {\n                connection.deltaWeightsTotal += ((_b = options.momentum) !== null && _b !== void 0 ? _b : 0) * connection.deltaWeightsPrevious;\n                connection.weight += connection.deltaWeightsTotal;\n                connection.deltaWeightsPrevious = connection.deltaWeightsTotal;\n                connection.deltaWeightsTotal = 0;\n            }\n        });\n    };\n    return NoiseNode;\n}(ConstantNode_1.ConstantNode));\nexports.NoiseNode = NoiseNode;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoiseLayer = void 0;\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\nvar NodeType_1 = require(\"../../../enums/NodeType\");\nvar Activation_1 = require(\"../../../methods/Activation\");\nvar NoiseNode_1 = require(\"../../Nodes/NoiseNode\");\nvar Layer_1 = require(\"../Layer\");\n/**\n * Noise layer\n */\nvar NoiseLayer = /** @class */ (function (_super) {\n    __extends(NoiseLayer, _super);\n    function NoiseLayer(outputSize, options) {\n        var _a;\n        if (options === void 0) { options = {}; }\n        var _b;\n        var _this = _super.call(this, outputSize) || this;\n        var activation = (_b = options.activation) !== null && _b !== void 0 ? _b : Activation_1.IdentityActivation;\n        for (var i = 0; i < outputSize; i++) {\n            _this.inputNodes.add(new NoiseNode_1.NoiseNode({\n                noiseType: NodeType_1.NoiseNodeType.GAUSSIAN_NOISE,\n                gaussian: options\n            }).setActivationType(activation));\n        }\n        _this.outputNodes = _this.inputNodes;\n        (_a = _this.nodes).push.apply(_a, Array.from(_this.inputNodes));\n        return _this;\n    }\n    /**\n     * Gets the default connection type for a incoming connection to this layer.\n     *\n     * @returns the default incoming connection\n     */\n    NoiseLayer.prototype.getDefaultIncomingConnectionType = function () {\n        return ConnectionType_1.ConnectionType.ONE_TO_ONE;\n    };\n    /**\n     * Checks if a given connection type is allowed on this layer.\n     *\n     * @param type the type to check\n     *\n     * @return Is this connection type allowed?\n     */\n    NoiseLayer.prototype.connectionTypeisAllowed = function (type) {\n        return type === ConnectionType_1.ConnectionType.ONE_TO_ONE;\n    };\n    return NoiseLayer;\n}(Layer_1.Layer));\nexports.NoiseLayer = NoiseLayer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputLayer = void 0;\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\nvar NodeType_1 = require(\"../../../enums/NodeType\");\nvar Node_1 = require(\"../../Node\");\nvar Layer_1 = require(\"../Layer\");\nvar NoiseLayer_1 = require(\"../NoiseLayers/NoiseLayer\");\n/**\n * Input layer\n */\nvar InputLayer = /** @class */ (function (_super) {\n    __extends(InputLayer, _super);\n    function InputLayer(outputSize, options) {\n        var _a;\n        if (options === void 0) { options = {}; }\n        var _b;\n        var _this = _super.call(this, outputSize) || this;\n        for (var i = 0; i < outputSize; i++) {\n            var node = new Node_1.Node(NodeType_1.NodeType.INPUT);\n            _this.nodes.push(node);\n        }\n        if (options.noise) {\n            var noiseLayer = new NoiseLayer_1.NoiseLayer((_b = options.noise) !== null && _b !== void 0 ? _b : NodeType_1.NoiseNodeType.GAUSSIAN_NOISE);\n            noiseLayer.outputNodes.forEach(function (node) { return _this.outputNodes.add(node); });\n            (_a = _this.connections).push.apply(_a, Layer_1.Layer.connect(_this.nodes, noiseLayer, noiseLayer.getDefaultIncomingConnectionType()));\n        }\n        else {\n            _this.nodes.forEach(function (node) { return _this.outputNodes.add(node); });\n        }\n        return _this;\n    }\n    /**\n     * Gets the default connection type for a incoming connection to this layer.\n     *\n     * @returns the default incoming connection\n     */\n    InputLayer.prototype.getDefaultIncomingConnectionType = function () {\n        return ConnectionType_1.ConnectionType.NO_CONNECTION;\n    };\n    /**\n     * Checks if a given connection type is allowed on this layer.\n     *\n     * @param type the type to check\n     *\n     * @return Is this connection type allowed?\n     */\n    InputLayer.prototype.connectionTypeisAllowed = function (type) {\n        return type === ConnectionType_1.ConnectionType.NO_CONNECTION;\n    };\n    return InputLayer;\n}(Layer_1.Layer));\nexports.InputLayer = InputLayer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutputLayer = void 0;\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\nvar NodeType_1 = require(\"../../../enums/NodeType\");\nvar Activation_1 = require(\"../../../methods/Activation\");\nvar Node_1 = require(\"../../Node\");\nvar Layer_1 = require(\"../Layer\");\n/**\n * Output layer\n */\nvar OutputLayer = /** @class */ (function (_super) {\n    __extends(OutputLayer, _super);\n    function OutputLayer(outputSize, options) {\n        var _a;\n        if (options === void 0) { options = {}; }\n        var _b;\n        var _this = _super.call(this, outputSize) || this;\n        var activation = (_b = options.activation) !== null && _b !== void 0 ? _b : Activation_1.IdentityActivation;\n        for (var i = 0; i < outputSize; i++) {\n            _this.inputNodes.add(new Node_1.Node(NodeType_1.NodeType.OUTPUT).setActivationType(activation));\n        }\n        (_a = _this.nodes).push.apply(_a, Array.from(_this.inputNodes));\n        return _this;\n    }\n    /**\n     * A outgoing connection is not allowed for an output layer!\n     */\n    OutputLayer.prototype.connect = function () {\n        throw new ReferenceError(\"Could not connect an OutputLayer!\");\n    };\n    /**\n     * Checks if a given connection type is allowed on this layer.\n     *\n     * @param type the type to check\n     *\n     * @return Is this connection type allowed?\n     */\n    OutputLayer.prototype.connectionTypeisAllowed = function (type) {\n        return true;\n    };\n    /**\n     * Gets the default connection type for a incoming connection to this layer.\n     *\n     * @returns the default incoming connection\n     */\n    OutputLayer.prototype.getDefaultIncomingConnectionType = function () {\n        return ConnectionType_1.ConnectionType.ALL_TO_ALL;\n    };\n    return OutputLayer;\n}(Layer_1.Layer));\nexports.OutputLayer = OutputLayer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ALL_LOSSES = exports.HINGELoss = exports.MSLELoss = exports.WAPELoss = exports.MAPELoss = exports.MAELoss = exports.BinaryLoss = exports.MBELoss = exports.MSELoss = void 0;\nexports.MSELoss = function (targets, outputs) {\n    var error = 0;\n    outputs.forEach((function (value, index) {\n        error += Math.pow((targets[index] - value), 2);\n    }));\n    return error / outputs.length;\n};\nexports.MBELoss = function (targets, outputs) {\n    var error = 0;\n    outputs.forEach((function (value, index) {\n        error += (targets[index] - value);\n    }));\n    return error / outputs.length;\n};\nexports.BinaryLoss = function (targets, outputs) {\n    var error = 0;\n    outputs.forEach((function (value, index) {\n        error += Math.round(targets[index] * 2) !== Math.round(value * 2) ? 1 : 0;\n    }));\n    return error / outputs.length;\n};\nexports.MAELoss = function (targets, outputs) {\n    var error = 0;\n    outputs.forEach((function (value, index) {\n        error += Math.abs(targets[index] - value);\n    }));\n    return error / outputs.length;\n};\nexports.MAPELoss = function (targets, outputs) {\n    var error = 0;\n    outputs.forEach((function (value, index) {\n        error += Math.abs((value - targets[index]) / Math.max(targets[index], 1e-15));\n    }));\n    return error / outputs.length;\n};\nexports.WAPELoss = function (targets, outputs) {\n    var error = 0;\n    var sum = 0;\n    for (var i = 0; i < outputs.length; i++) {\n        error += Math.abs(targets[i] - outputs[i]);\n        sum += targets[i];\n    }\n    return error / sum;\n};\nexports.MSLELoss = function (targets, outputs) {\n    var error = 0;\n    outputs.forEach((function (value, index) {\n        error += Math.log(Math.max(targets[index], 1e-15)) - Math.log(Math.max(value, 1e-15));\n    }));\n    return error / outputs.length;\n};\nexports.HINGELoss = function (targets, outputs) {\n    var error = 0;\n    outputs.forEach(function (value, index) {\n        error += Math.max(0, 1 - value * targets[index]);\n    });\n    return error / outputs.length;\n};\nexports.ALL_LOSSES = {\n    MSELoss: exports.MSELoss,\n    MBELoss: exports.MBELoss,\n    BinaryLoss: exports.BinaryLoss,\n    MAELoss: exports.MAELoss,\n    MAPELoss: exports.MAPELoss,\n    WAPELoss: exports.WAPELoss,\n    MSLELoss: exports.MSLELoss,\n    HINGELoss: exports.HINGELoss\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InverseRate = exports.ExponentialRate = exports.StepRate = exports.FixedRate = exports.Rate = void 0;\n/**\n * Built-in learning rate policies, which allow for a dynamic learning rate during neural network training.\n *\n * @see [Learning rates and how-to improve performance](https://towardsdatascience.com/understanding-learning-rates-and-how-it-improves-performance-in-deep-learning-d0d4059c1c10)\n * @see [Learning rate policy](https://stackoverflow.com/questions/30033096/what-is-lr-policy-in-caffe/30045244)\n *\n */\nvar Rate = /** @class */ (function () {\n    /**\n     * Constructs a rate policy\n     * @param baseRate the rate at first iteration\n     */\n    function Rate(baseRate) {\n        this.baseRate = baseRate;\n    }\n    return Rate;\n}());\nexports.Rate = Rate;\n/**\n * Fixed Learning Rate\n *\n * Default rate policy. Using this will make learning rate static (no change). Useful as a way to update a previous rate policy.\n */\nvar FixedRate = /** @class */ (function (_super) {\n    __extends(FixedRate, _super);\n    function FixedRate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Calculates the current training rate.\n     *\n     * @param iteration count\n     * @returns the current training rate\n     */\n    FixedRate.prototype.calc = function (iteration) {\n        return this.baseRate;\n    };\n    return FixedRate;\n}(Rate));\nexports.FixedRate = FixedRate;\n/**\n * Step Learning Rate\n *\n * The learning rate will decrease (i.e. 'step down') every `stepSize` iterations.\n */\nvar StepRate = /** @class */ (function (_super) {\n    __extends(StepRate, _super);\n    /**\n     * Constructs a step rate policy.\n     *\n     * @param baseRate the rate at first iteration\n     * @param gamma=0.9 Learning rate retention per step; - _0 < `gamma` < 1_ - _large `gamma` CAN cause networks to never converge, low `gamma` CAN cause networks to converge too quickly_\n     * @param stepSize=100 Learning rate is updated every `step_size` iterations\n     */\n    function StepRate(baseRate, gamma, stepSize) {\n        if (gamma === void 0) { gamma = 0.9; }\n        if (stepSize === void 0) { stepSize = 100; }\n        var _this = _super.call(this, baseRate) || this;\n        _this.gamma = gamma;\n        _this.stepSize = stepSize;\n        return _this;\n    }\n    /**\n     * Calculates the current training rate.\n     *\n     * @param iteration count\n     * @returns the current training rate\n     */\n    StepRate.prototype.calc = function (iteration) {\n        return this.baseRate * Math.pow(this.gamma, Math.floor(iteration / this.stepSize));\n    };\n    return StepRate;\n}(Rate));\nexports.StepRate = StepRate;\n/**\n * Exponential Learning Rate\n *\n * The learning rate will exponentially decrease.\n *\n * The rate at `iteration` is calculated as: `rate = base_rate * Math.pow(gamma, iteration)`\n */\nvar ExponentialRate = /** @class */ (function (_super) {\n    __extends(ExponentialRate, _super);\n    /**\n     * Constructs a step rate policy.\n     *\n     * @param baseRate the rate at first iteration\n     * @param gamma=0.9 Learning rate retention per step; - _0 < `gamma` < 1_ - _large `gamma` CAN cause networks to never converge, low `gamma` CAN cause networks to converge too quickly_\n     */\n    function ExponentialRate(baseRate, gamma) {\n        if (gamma === void 0) { gamma = 0.999; }\n        var _this = _super.call(this, baseRate) || this;\n        _this.gamma = gamma;\n        return _this;\n    }\n    /**\n     * Calculates the current training rate.\n     *\n     * @param iteration count\n     * @returns the current training rate\n     */\n    ExponentialRate.prototype.calc = function (iteration) {\n        return this.baseRate * Math.pow(this.gamma, iteration);\n    };\n    return ExponentialRate;\n}(Rate));\nexports.ExponentialRate = ExponentialRate;\n/**\n * Inverse Exponential Learning Rate\n *\n * The learning rate will exponentially decrease.\n *\n * The rate at `iteration` is calculated as: `rate = baseRate * Math.pow(1 + gamma * iteration, -power)`\n */\nvar InverseRate = /** @class */ (function (_super) {\n    __extends(InverseRate, _super);\n    /**\n     * Constructs a step rate policy.\n     *\n     * @param baseRate the rate at first iteration\n     * @param gamma=0.001 Learning rate decay per iteration; - _0 < `gamma` < 1_ - _large `gamma` CAN cause networks to converge too quickly and stop learning, low `gamma` CAN cause networks to converge to learn VERY slowly_\n     * @param power=2 Decay rate per iteration - _0 < `power`_ - _large `power` CAN cause networks to stop learning quickly, low `power` CAN cause networks to learn VERY slowly_\n     */\n    function InverseRate(baseRate, gamma, power) {\n        if (gamma === void 0) { gamma = 0.001; }\n        if (power === void 0) { power = 2; }\n        var _this = _super.call(this, baseRate) || this;\n        _this.gamma = gamma;\n        _this.power = power;\n        return _this;\n    }\n    /**\n     * Calculates the current training rate.\n     *\n     * @param iteration count\n     * @returns the current training rate\n     */\n    InverseRate.prototype.calc = function (iteration) {\n        return this.baseRate * Math.pow((1 + this.gamma * iteration), -this.power);\n    };\n    return InverseRate;\n}(Rate));\nexports.InverseRate = InverseRate;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TournamentSelection = exports.PowerSelection = exports.FitnessProportionateSelection = exports.Selection = void 0;\nvar Utils_1 = require(\"./Utils\");\n/**\n * Genetic Algorithm Selection Methods (Genetic Operator)\n *\n * @see [Genetic Algorithm - Selection]{@link https://en.wikipedia.org/wiki/Selection_(genetic_algorithm)}\n *\n */\nvar Selection = /** @class */ (function () {\n    function Selection() {\n    }\n    return Selection;\n}());\nexports.Selection = Selection;\n/**\n * Fitness proportionate selection\n *\n * [Fitness Proportionate / Roulette Wheel Selection on Wikipedia](https://en.wikipedia.org/wiki/Fitness_proportionate_selection)\n */\nvar FitnessProportionateSelection = /** @class */ (function (_super) {\n    __extends(FitnessProportionateSelection, _super);\n    function FitnessProportionateSelection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Selects a genome from the population according to the Selection method.\n     *\n     * @param population the pool of networks\n     * @returns the selected genome\n     */\n    FitnessProportionateSelection.prototype.select = function (population) {\n        var _a, _b, _c;\n        var totalFitness = 0;\n        var minimalFitness = 0;\n        for (var _i = 0, population_1 = population; _i < population_1.length; _i++) {\n            var genome = population_1[_i];\n            minimalFitness = Math.min((_a = genome.score) !== null && _a !== void 0 ? _a : minimalFitness, minimalFitness);\n            totalFitness += (_b = genome.score) !== null && _b !== void 0 ? _b : 0;\n        }\n        minimalFitness = Math.abs(minimalFitness);\n        totalFitness += minimalFitness * population.length;\n        var random = Utils_1.randDouble(0, totalFitness);\n        var value = 0;\n        for (var _d = 0, population_2 = population; _d < population_2.length; _d++) {\n            var genome = population_2[_d];\n            value += ((_c = genome.score) !== null && _c !== void 0 ? _c : 0) + minimalFitness;\n            if (random < value) {\n                return genome;\n            }\n        }\n        return Utils_1.pickRandom(population);\n    };\n    return FitnessProportionateSelection;\n}(Selection));\nexports.FitnessProportionateSelection = FitnessProportionateSelection;\n/**\n * Power selection\n *\n * A random decimal value between 0 and 1 will be generated (e.g. 0.5) then this value will get an exponential value (power, default is 4). So 0.5**4 = 0.0625. This is converted into an index for the array of the current population, sorted from fittest to worst.\n */\nvar PowerSelection = /** @class */ (function (_super) {\n    __extends(PowerSelection, _super);\n    /**\n     * Constructs a power selection.\n     * @param power Probability of picking better networks.\n     */\n    function PowerSelection(power) {\n        if (power === void 0) { power = 4; }\n        var _this = _super.call(this) || this;\n        _this.power = power;\n        return _this;\n    }\n    /**\n     * Selects a genome from the population according to the Selection method.\n     *\n     * @param population the pool of networks\n     * @returns the selected genome\n     */\n    PowerSelection.prototype.select = function (population) {\n        return population[Math.floor(Math.pow(Math.random(), this.power) * population.length)];\n    };\n    return PowerSelection;\n}(Selection));\nexports.PowerSelection = PowerSelection;\n/**\n * Tournament selection\n *\n * [Tournament Selection on Wikipedia](https://en.wikipedia.org/wiki/Tournament_selection)\n */\nvar TournamentSelection = /** @class */ (function (_super) {\n    __extends(TournamentSelection, _super);\n    /**\n     * Constructs a tournament selection.\n     * @param size the size of a tournament\n     * @param probability Selects the best individual (when probability = 1).\n     */\n    function TournamentSelection(size, probability) {\n        if (size === void 0) { size = 5; }\n        if (probability === void 0) { probability = 0.5; }\n        var _this = _super.call(this) || this;\n        _this.size = size;\n        _this.probability = probability;\n        return _this;\n    }\n    /**\n     * Selects a genome from the population according to the Selection method.\n     *\n     * @param population the pool of networks\n     * @returns the selected genome\n     */\n    TournamentSelection.prototype.select = function (population) {\n        if (this.size > population.length) {\n            throw new Error(\"Your tournament size should be lower than the population size, please change methods.selection.TOURNAMENT.size\");\n        }\n        // Create a tournament\n        var individuals = [];\n        for (var i = 0; i < this.size; i++) {\n            individuals.push(Utils_1.pickRandom(population));\n        }\n        // Sort the tournament individuals by score\n        individuals.sort(function (a, b) {\n            return b.score === undefined || a.score === undefined ? 0 : b.score - a.score;\n        });\n        // Select an individual\n        for (var i = 0; i < this.size; i++) {\n            if (Math.random() < this.probability || i === this.size - 1) {\n                return individuals[i];\n            }\n        }\n        return Utils_1.pickRandom(population);\n    };\n    return TournamentSelection;\n}(Selection));\nexports.TournamentSelection = TournamentSelection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NEAT = void 0;\nvar Network_1 = require(\"./architecture/Network\");\nvar Activation_1 = require(\"./methods/Activation\");\nvar Mutation_1 = require(\"./methods/Mutation\");\nvar Selection_1 = require(\"./methods/Selection\");\nvar Utils_1 = require(\"./methods/Utils\");\n/**\n * Runs the NEAT algorithm on group of neural networks.\n *\n * @constructs Neat\n */\nvar NEAT = /** @class */ (function () {\n    /**\n     * Constructs a NEAT object.\n     *\n     * @param options\n     */\n    function NEAT(options) {\n        if (!options.fitnessFunction) {\n            throw new ReferenceError(\"No fitness function given!\");\n        }\n        this.dataset = options.dataset;\n        if (options.dataset && options.dataset.length > 0) {\n            this.input = options.dataset[0].input.length;\n            this.output = options.dataset[0].output.length;\n        }\n        else {\n            this.input = Utils_1.getOrDefault(options.input, 0);\n            this.output = Utils_1.getOrDefault(options.output, 0);\n        }\n        this.generation = Utils_1.getOrDefault(options.generation, 0);\n        this.equal = Utils_1.getOrDefault(options.equal, true);\n        this.clear = Utils_1.getOrDefault(options.clear, false);\n        this.populationSize = Utils_1.getOrDefault(options.populationSize, 50);\n        this.elitism = Utils_1.getOrDefault(options.elitism, 2);\n        this.provenance = Utils_1.getOrDefault(options.provenance, 0);\n        this.mutationRate = Utils_1.getOrDefault(options.mutationRate, 0.6);\n        this.mutationAmount = Utils_1.getOrDefault(options.mutationAmount, 5);\n        this.fitnessFunction = options.fitnessFunction;\n        this.selection = Utils_1.getOrDefault(options.selection, new Selection_1.FitnessProportionateSelection());\n        this.mutations = Utils_1.getOrDefault(options.mutations, Mutation_1.FEEDFORWARD_MUTATIONS);\n        this.activations = Utils_1.getOrDefault(options.activations, Object.values(Activation_1.ALL_ACTIVATIONS));\n        this.template = Utils_1.getOrDefault(options.template, new Network_1.Network(this.input, this.output));\n        this.maxNodes = Utils_1.getOrDefault(options.maxNodes, Infinity);\n        this.maxConnections = Utils_1.getOrDefault(options.maxConnections, Infinity);\n        this.maxGates = Utils_1.getOrDefault(options.maxGates, Infinity);\n        this.population = [];\n        for (var i = 0; i < this.populationSize; i++) {\n            this.population.push(this.template.copy());\n        }\n    }\n    /**\n     * Filter genomes from population\n     *\n     * @param pickGenome Pick a network from the population which gets adjusted or removed\n     * @param adjustGenome Adjust the picked network\n     */\n    NEAT.prototype.filterGenome = function (pickGenome, adjustGenome) {\n        var _this = this;\n        return this.population\n            .filter(function (genome) { return pickGenome(genome); })\n            .map(function (genome) {\n            return adjustGenome ? adjustGenome(genome) : _this.template.copy();\n        });\n    };\n    /**\n     * Mutate a network with a random mutation from the allowed array.\n     *\n     * @param network The network which will be mutated.\n     */\n    NEAT.prototype.mutateRandom = function (network) {\n        var _this = this;\n        var allowed = this.mutations.filter(function (method) {\n            return (method.constructor.name !== Mutation_1.AddNodeMutation.constructor.name || network.nodes.length < _this.maxNodes ||\n                method.constructor.name !== Mutation_1.AddConnectionMutation.constructor.name || network.connections.size < _this.maxConnections ||\n                method.constructor.name !== Mutation_1.AddGateMutation.constructor.name || network.gates.length < _this.maxGates);\n        });\n        network.mutate(Utils_1.pickRandom(allowed), { allowedActivations: this.activations });\n    };\n    /**\n     * Evaluates, selects, breeds and mutates population\n     *\n     * @param {function} [pickGenome] A custom selection function to pick out unwanted genomes. Accepts a network as a parameter and returns true for selection.\n     * @param {function} [adjustGenome=self.template] Accepts a network, modifies it, and returns it. Used to modify unwanted genomes returned by `pickGenome` and reincorporate them into the population. If left unset, unwanted genomes will be replaced with the template Network. Will only run when pickGenome is defined.\n     *\n     * @returns {Network} Fittest network\n     */\n    NEAT.prototype.evolve = function (pickGenome, adjustGenome) {\n        return __awaiter(this, void 0, void 0, function () {\n            var elitists, i, newPopulation, i, fittest;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        // Check if evolve is possible\n                        if (this.elitism + this.provenance > this.populationSize) {\n                            throw new Error(\"Can`t evolve! Elitism + provenance exceeds population size!\");\n                        }\n                        if (!(this.population[this.population.length - 1].score === undefined)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.evaluate()];\n                    case 1:\n                        _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        if (pickGenome) {\n                            this.population = this.filterGenome(pickGenome, adjustGenome);\n                        }\n                        // Sort in order of fitness (fittest first)\n                        this.sort();\n                        elitists = [];\n                        for (i = 0; i < this.elitism; i++) {\n                            elitists.push(this.population[i]);\n                        }\n                        newPopulation = Array(this.provenance).fill(this.template.copy());\n                        // Breed the next individuals\n                        for (i = 0; i < this.populationSize - this.elitism - this.provenance; i++) {\n                            newPopulation.push(this.getOffspring());\n                        }\n                        // Replace the old population with the new population\n                        this.population = newPopulation;\n                        // Mutate the new population\n                        this.mutate();\n                        // Add the elitists\n                        (_a = this.population).push.apply(_a, elitists);\n                        // evaluate the population\n                        return [4 /*yield*/, this.evaluate()];\n                    case 3:\n                        // evaluate the population\n                        _b.sent();\n                        // Check & adjust genomes as needed\n                        if (pickGenome) {\n                            this.population = this.filterGenome(pickGenome, adjustGenome);\n                        }\n                        // Sort in order of fitness (fittest first)\n                        this.sort();\n                        fittest = this.population[0].copy();\n                        fittest.score = this.population[0].score;\n                        // Reset the scores\n                        this.population.forEach(function (genome) { return genome.score = undefined; });\n                        this.generation++;\n                        return [2 /*return*/, fittest];\n                }\n            });\n        });\n    };\n    /**\n     * Selects two genomes from the population with `getParent()`, and returns the offspring from those parents. NOTE: Population MUST be sorted\n     *\n     * @returns {Network} Child network\n     */\n    NEAT.prototype.getOffspring = function () {\n        this.sort();\n        var parent1 = this.selection.select(this.population);\n        var parent2 = this.selection.select(this.population);\n        if (parent1 === null || parent2 === null) {\n            throw new ReferenceError(\"Should not be null!\");\n        }\n        return Network_1.Network.crossOver(parent1, parent2, this.equal);\n    };\n    /**\n     * Mutates the given (or current) population\n     *\n     * @param {Mutation} [method] A mutation method to mutate the population with. When not specified will pick a random mutation from the set allowed mutations.\n     */\n    NEAT.prototype.mutate = function (method) {\n        var _this = this;\n        // Elitist genomes should not be included\n        this.population\n            .filter(function () { return Math.random() <= _this.mutationRate; })\n            .forEach(function (genome) {\n            for (var i = 0; i < _this.mutationAmount; i++) {\n                if (method) {\n                    genome.mutate(method);\n                }\n                else {\n                    _this.mutateRandom(genome);\n                }\n            }\n        });\n    };\n    /**\n     * Evaluates the current population, basically sets their `.score` property\n     *\n     * @return {Network} Fittest Network\n     */\n    NEAT.prototype.evaluate = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.clear) {\n                            this.population.forEach(function (genome) { return genome.clear(); });\n                        }\n                        return [4 /*yield*/, this.fitnessFunction(this.population, this.dataset)];\n                    case 1:\n                        _a.sent();\n                        // Sort the population in order of fitness\n                        this.sort();\n                        return [2 /*return*/, this.population[0]];\n                }\n            });\n        });\n    };\n    /**\n     * Sorts the population by score (descending)\n     */\n    NEAT.prototype.sort = function () {\n        this.population.sort(function (a, b) {\n            return a.score === undefined || b.score === undefined ? 0 : b.score - a.score;\n        });\n    };\n    /**\n     * Returns the fittest genome of the current population\n     *\n     * @returns {Network} Current population's fittest genome\n     */\n    NEAT.prototype.getFittest = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.population[this.population.length - 1].score === undefined)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.evaluate()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        this.sort();\n                        return [2 /*return*/, this.population[0]];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the average fitness of the current population\n     *\n     * @returns {number} Average fitness of the current population\n     */\n    NEAT.prototype.getAverage = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var score;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.population[this.population.length - 1].score === undefined)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.evaluate()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        score = 0;\n                        this.population\n                            .map(function (genome) { return genome.score; })\n                            .forEach(function (val) { return score += val !== null && val !== void 0 ? val : 0; });\n                        return [2 /*return*/, score / this.population.length];\n                }\n            });\n        });\n    };\n    return NEAT;\n}());\nexports.NEAT = NEAT;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Network = void 0;\nvar os_1 = __importDefault(require(\"os\"));\nvar threads_1 = require(\"threads\");\nvar dist_1 = require(\"threads/dist\");\nrequire(\"threads/register\");\nvar NodeType_1 = require(\"../enums/NodeType\");\nvar Loss_1 = require(\"../methods/Loss\");\nvar Mutation_1 = require(\"../methods/Mutation\");\nvar Rate_1 = require(\"../methods/Rate\");\nvar Utils_1 = require(\"../methods/Utils\");\nvar NEAT_1 = require(\"../NEAT\");\nvar Connection_1 = require(\"./Connection\");\nvar Node_1 = require(\"./Node\");\n/**\n * Create a neural network\n *\n * Networks are easy to create, all you need to specify is an `input` and an `output` size.\n *\n * @constructs Network\n *\n * @param {number} inputSize Size of input layer AKA neurons in input layer\n * @param {number} outputSize Size of output layer AKA neurons in output layer\n *\n * @prop {number} inputSize Size of input layer AKA neurons in input layer\n * @prop {number} outputSize Size of output layer AKA neurons in output layer\n * @prop {Array<Node>} nodes Nodes currently within the network\n * @prop {Array<Node>} gates Gates within the network\n * @prop {Array<Connection>} connections Connections within the network\n */\nvar Network = /** @class */ (function () {\n    function Network(inputSize, outputSize) {\n        this.inputSize = inputSize;\n        this.outputSize = outputSize;\n        this.nodes = [];\n        this.connections = new Set();\n        this.gates = [];\n        this.score = undefined;\n        // Create input and output nodes\n        for (var i = 0; i < inputSize; i++) {\n            this.nodes.push(new Node_1.Node(NodeType_1.NodeType.INPUT));\n        }\n        for (var i = 0; i < outputSize; i++) {\n            this.nodes.push(new Node_1.Node(NodeType_1.NodeType.OUTPUT));\n        }\n        // Connect input and output nodes\n        for (var i = 0; i < this.inputSize; i++) {\n            for (var j = this.inputSize; j < this.outputSize + this.inputSize; j++) {\n                // https://stats.stackexchange.com/a/248040/147931\n                var weight = (Math.random() - 0.5) * this.inputSize * Math.sqrt(2 / this.inputSize);\n                this.connect(this.nodes[i], this.nodes[j], weight);\n            }\n        }\n    }\n    /**\n     * Convert a json object to a network\n     *\n     * @param {{input:{number},output:{number},dropout:{number},nodes:Array<object>,connections:Array<object>}} json A network represented as a json object\n     *\n     * @returns {Network} Network A reconstructed network\n     *\n     */\n    Network.fromJSON = function (json) {\n        var network = new Network(json.inputSize, json.outputSize);\n        network.nodes = [];\n        network.connections.clear();\n        json.nodes.map(function (nodeJSON) { return new Node_1.Node().fromJSON(nodeJSON); }).forEach(function (node) { return network.nodes[node.index] = node; });\n        json.connections.forEach(function (jsonConnection) {\n            var connection = network.connect(network.nodes[jsonConnection.fromIndex], network.nodes[jsonConnection.toIndex], jsonConnection.weight);\n            if (jsonConnection.gateNodeIndex != null) {\n                network.addGate(network.nodes[jsonConnection.gateNodeIndex], connection);\n            }\n        });\n        return network;\n    };\n    /**\n     * Create an offspring from two parent networks.\n     *\n     * Networks are not required to have the same size, however input and output size should be the same!\n     *\n     * @todo Add custom [crossover](crossover) method customization\n     *\n     * @param {Network} network1 First parent network\n     * @param {Network} network2 Second parent network\n     * @param {boolean} [equal] Flag to indicate equally fit Networks\n     *\n     * @returns {Network} New network created from mixing parent networks\n     */\n    Network.crossOver = function (network1, network2, equal) {\n        var _a, _b;\n        if (network1.inputSize !== network2.inputSize || network1.outputSize !== network2.outputSize) {\n            throw new Error(\"Networks don`t have the same input/output size!\");\n        }\n        // Initialise offspring\n        var offspring = new Network(network1.inputSize, network1.outputSize);\n        offspring.connections.clear(); // clear\n        offspring.nodes = []; // clear\n        // Save scores and create a copy\n        var score1 = (_a = network1.score) !== null && _a !== void 0 ? _a : 0;\n        var score2 = (_b = network2.score) !== null && _b !== void 0 ? _b : 0;\n        // Determine offspring node size\n        var offspringSize;\n        if (equal || score1 === score2) {\n            var max = Math.max(network1.nodes.length, network2.nodes.length);\n            var min = Math.min(network1.nodes.length, network2.nodes.length);\n            offspringSize = Utils_1.randInt(min, max + 1); // [min,max]\n        }\n        else if (score1 > score2) {\n            offspringSize = network1.nodes.length;\n        }\n        else {\n            offspringSize = network2.nodes.length;\n        }\n        var inputSize = network1.inputSize;\n        var outputSize = network1.outputSize;\n        // set node indices\n        for (var i = 0; i < network1.nodes.length; i++) {\n            network1.nodes[i].index = i;\n        }\n        // set node indices\n        for (var i = 0; i < network2.nodes.length; i++) {\n            network2.nodes[i].index = i;\n        }\n        // Assign nodes from parents to offspring\n        for (var i = 0; i < offspringSize; i++) {\n            var chosenNode = void 0;\n            var chosenNodeType = null;\n            // decide what type of node is needed first check for input and output nodes and fill up with hidden nodes\n            if (i < inputSize) { // pick input node\n                chosenNodeType = NodeType_1.NodeType.INPUT;\n                var sourceNetwork = Utils_1.randBoolean() ? network1 : network2;\n                var inputNumber = -1;\n                var j = -1;\n                while (inputNumber < i) {\n                    if (j++ >= sourceNetwork.nodes.length) {\n                        throw RangeError('something is wrong with the size of the input');\n                    }\n                    if (sourceNetwork.nodes[j].isInputNode()) {\n                        inputNumber++;\n                    }\n                }\n                chosenNode = sourceNetwork.nodes[j];\n            }\n            else if (i < inputSize + outputSize) { // pick output node\n                chosenNodeType = NodeType_1.NodeType.OUTPUT;\n                var sourceNetwork = Utils_1.randBoolean() ? network1 : network2;\n                var outputNumber = -1;\n                var j = -1;\n                while (outputNumber < i - inputSize) {\n                    j++;\n                    if (j >= sourceNetwork.nodes.length) {\n                        throw RangeError('something is wrong with the size of the output');\n                    }\n                    if (sourceNetwork.nodes[j].isOutputNode()) {\n                        outputNumber++;\n                    }\n                }\n                chosenNode = sourceNetwork.nodes[j];\n            }\n            else { // pick hidden node\n                chosenNodeType = NodeType_1.NodeType.HIDDEN;\n                var sourceNetwork = void 0;\n                if (i >= network1.nodes.length) {\n                    sourceNetwork = network2;\n                }\n                else if (i >= network2.nodes.length) {\n                    sourceNetwork = network1;\n                }\n                else {\n                    sourceNetwork = Utils_1.randBoolean() ? network1 : network2;\n                }\n                chosenNode = Utils_1.pickRandom(sourceNetwork.nodes);\n            }\n            var newNode = new Node_1.Node(chosenNodeType);\n            newNode.bias = chosenNode.bias;\n            newNode.squash = chosenNode.squash;\n            offspring.nodes.push(newNode);\n        }\n        // Create arrays of connection genes\n        var n1connections = [];\n        var n2connections = [];\n        // Add the connections of network 1\n        network1.connections.forEach(function (connection) {\n            n1connections[Connection_1.Connection.innovationID(connection.from.index, connection.to.index)] = connection.toJSON();\n        });\n        // Add the connections of network 2\n        network2.connections.forEach(function (connection) {\n            n2connections[Connection_1.Connection.innovationID(connection.from.index, connection.to.index)] = connection.toJSON();\n        });\n        // Split common conn genes from disjoint or excess conn genes\n        var connections = [];\n        var keys1 = Object.keys(n1connections);\n        var keys2 = Object.keys(n2connections);\n        for (var i = keys1.length - 1; i >= 0; i--) {\n            if (n2connections[parseInt(keys1[i])] !== undefined) {\n                connections.push(Utils_1.randBoolean() ? n1connections[parseInt(keys1[i])] : n2connections[parseInt(keys1[i])]);\n                n2connections[parseInt(keys1[i])] = undefined;\n            }\n            else if (score1 >= score2 || equal) {\n                connections.push(n1connections[parseInt(keys1[i])]);\n            }\n        }\n        // Excess/disjoint gene\n        if (score2 >= score1 || equal) {\n            keys2\n                .map(function (key) { return parseInt(key); }) // convert to numbers\n                .map(function (key) { return n2connections[key]; }) // get the connection\n                .filter(function (conn) { return conn !== undefined; }) // filter out undefined connections\n                .forEach(function (conn) { return connections.push(conn); }); // add the filtered connections\n        }\n        // Add common conn genes uniformly\n        connections.forEach(function (connectionJSON) {\n            if (connectionJSON !== undefined && connectionJSON.toIndex < offspringSize && connectionJSON.fromIndex < offspringSize) {\n                var from = offspring.nodes[connectionJSON.fromIndex];\n                var to = offspring.nodes[connectionJSON.toIndex];\n                var connection = offspring.connect(from, to, connectionJSON.weight);\n                if (connectionJSON.gateNodeIndex !== null && connectionJSON.gateNodeIndex < offspringSize) {\n                    offspring.addGate(offspring.nodes[connectionJSON.gateNodeIndex], connection);\n                }\n            }\n        });\n        return offspring;\n    };\n    /**\n     * Returns a copy of Network.\n     *\n     * @returns {Network} Returns an identical network\n     */\n    Network.prototype.copy = function () {\n        return Network.fromJSON(this.toJSON());\n    };\n    /**\n     * Connects a Node to another Node or Group in the network\n     *\n     * @param {Node} from The source Node\n     * @param {Node} to The destination Node or Group\n     * @param {number} [weight=0] An initial weight for the connections to be formed\n     *\n     * @returns {Connection[]} An array of the formed connections\n     */\n    Network.prototype.connect = function (from, to, weight) {\n        if (weight === void 0) { weight = 0; }\n        var connection = from.connect(to, weight); // run node-level connect\n        this.connections.add(connection); // add it to the array\n        return connection;\n    };\n    /**\n     * Activates the network\n     *\n     * It will activate all the nodes in activation order and produce an output.\n     *\n     * @param {number[]} [input] Input values to activate nodes with\n     * @param options\n     * @returns {number[]} Squashed output values\n     */\n    Network.prototype.activate = function (input, options) {\n        if (options === void 0) { options = {}; }\n        if (input.length !== this.inputSize) {\n            throw new RangeError(\"Input size of dataset is different to network input size!\");\n        }\n        // get default value if no value is given\n        options.dropoutRate = Utils_1.getOrDefault(options.dropoutRate, 0);\n        options.trace = Utils_1.getOrDefault(options.trace, true);\n        this.nodes\n            .filter(function (node) { return node.isInputNode(); }) // only input nodes\n            .forEach(function (node, index) { return node.activate(input[index], options.trace); }); // activate them with the input\n        this.nodes\n            .filter(function (node) { return node.isHiddenNode(); }) // only hidden nodes\n            .forEach(function (node) {\n            if (options.dropoutRate) {\n                node.mask = Math.random() >= options.dropoutRate ? 1 : 0;\n            }\n            node.activate(undefined, options.trace); // activate them\n        });\n        return this.nodes\n            .filter(function (node) { return node.isOutputNode(); }) // only output nodes\n            .map(function (node) { return node.activate(undefined, options.trace); }); // map them to there activation value will give the network's output\n    };\n    /**\n     * Backpropagate the network\n     *\n     * This function allows you to teach the network. If you want to do more complex training, use the `network.train()` function.\n     *\n     * @param {number[]} target Ideal values of the previous activate. Will use the difference to improve the weights\n     * @param options More option for propagation\n     */\n    Network.prototype.propagate = function (target, options) {\n        if (options === void 0) { options = {}; }\n        // get default value if value isn't given\n        options.rate = Utils_1.getOrDefault(options.rate, 0.3);\n        options.momentum = Utils_1.getOrDefault(options.momentum, 0);\n        options.update = Utils_1.getOrDefault(options.update, false);\n        if (target.length !== this.outputSize) {\n            throw new Error(\"Output target length should match network output length\");\n        }\n        // Backpropagation: output -> hidden -> input\n        // propagate through the output nodes\n        this.nodes\n            .filter(function (node) { return node.isOutputNode(); }) // only output nodes\n            .forEach(function (node, index) { return node.propagate(target[index], options); }); // propagate\n        // propagate backwards through the hidden nodes\n        for (var i = this.nodes.length - 1; i >= 0; i--) {\n            if (this.nodes[i].isHiddenNode()) { // only hidden nodes\n                this.nodes[i].propagate(undefined, options);\n            }\n        }\n        // propagate through the input nodes\n        this.nodes\n            .filter(function (node) { return node.isInputNode(); }) // only input nodes\n            .forEach(function (node) { return node.propagate(undefined, options); }); // propagate\n    };\n    /**\n     * Clear the context of the network\n     */\n    Network.prototype.clear = function () {\n        this.nodes.forEach(function (node) { return node.clear(); });\n    };\n    /**\n     * Removes the connection of the `from` node to the `to` node\n     *\n     * @param {Node} from Source node\n     * @param {Node} to Destination node\n     */\n    Network.prototype.disconnect = function (from, to) {\n        var _this = this;\n        // remove the connection network-level\n        this.connections.forEach(function (conn) {\n            if (conn.from === from && conn.to === to) {\n                if (conn.gateNode !== null) {\n                    _this.removeGate(conn); // remove possible gate\n                }\n                _this.connections.delete(conn); // remove connection from array\n            }\n        });\n        // disconnect node-level\n        return from.disconnect(to);\n    };\n    /**\n     * Makes a network node gate a connection\n     *\n     * @param {Node} node Gating node\n     * @param {Connection} connection Connection to gate with node\n     */\n    Network.prototype.addGate = function (node, connection) {\n        if (this.nodes.indexOf(node) === -1) {\n            throw new ReferenceError(\"This node is not part of the network!\");\n        }\n        else if (connection.gateNode != null) {\n            return;\n        }\n        node.addGate(connection);\n        this.gates.push(connection);\n    };\n    /**\n     * Remove the gate of a connection.\n     *\n     * @param {Connection} connection Connection to remove gate from\n     */\n    Network.prototype.removeGate = function (connection) {\n        if (!this.gates.includes(connection)) {\n            throw new Error(\"This connection is not gated!\");\n        }\n        Utils_1.removeFromArray(this.gates, connection);\n        if (connection.gateNode != null) {\n            connection.gateNode.removeGate(connection);\n        }\n    };\n    /**\n     * Removes a node from a network, all its connections will be redirected. If it gates a connection, the gate will be removed.\n     *\n     * @param {Node} node Node to remove from the network\n     * @param keepGates\n     */\n    Network.prototype.removeNode = function (node, keepGates) {\n        var _this = this;\n        if (keepGates === void 0) { keepGates = new Mutation_1.SubNodeMutation().keepGates; }\n        if (!this.nodes.includes(node)) {\n            throw new ReferenceError(\"This node does not exist in the network!\");\n        }\n        this.disconnect(node, node); // remove self connection\n        var inputs = []; // keep track\n        var gates = []; // keep track\n        var outputs = []; // keep track\n        var connections = []; // keep track\n        // read all inputs from node and keep track of the nodes that gate the incoming connection\n        node.incoming.forEach(function (connection) {\n            if (keepGates && connection.gateNode !== null && connection.gateNode !== node) {\n                gates.push(connection.gateNode);\n            }\n            inputs.push(connection.from);\n            _this.disconnect(connection.from, node);\n        });\n        // read all outputs from node and keep track of the nodes that gate the outgoing connection\n        node.outgoing.forEach(function (connection) {\n            if (keepGates && connection.gateNode !== null && connection.gateNode !== node) {\n                gates.push(connection.gateNode);\n            }\n            outputs.push(connection.to);\n            _this.disconnect(node, connection.to);\n        });\n        // add all connections the node has\n        inputs.forEach(function (input) {\n            outputs.forEach(function (output) {\n                if (!input.isProjectingTo(output)) {\n                    connections.push(_this.connect(input, output));\n                }\n            });\n        });\n        // as long as there are gates and connections\n        while (gates.length > 0 && connections.length > 0) {\n            var gate = gates.shift(); // take a gate node and remove it from the array\n            if (gate === undefined) {\n                continue;\n            }\n            var connection = Utils_1.pickRandom(connections); // take a random connection\n            this.addGate(gate, connection); // gate the connection with the gate node\n            Utils_1.removeFromArray(connections, connection); // remove the connection from the array\n        }\n        // remove every gate the node has\n        node.gated.forEach(this.removeGate);\n        Utils_1.removeFromArray(this.nodes, node); // remove the node from the nodes array\n    };\n    /**\n     * Mutates the network with the given method.\n     *\n     * @param {Mutation} method [Mutation method](mutation)\n     * @param {object} options\n     * @param {number} [options.maxNodes]\n     * @param {number} [options.maxConnections]\n     * @param {number} [options.maxGates] Maximum amount of Gates a network can grow to\n     */\n    Network.prototype.mutate = function (method, options) {\n        method.mutate(this, options);\n    };\n    /**\n     * Selects a random mutation method and returns a mutated copy of the network. Warning! Mutates network directly.\n     *\n     * @param {Mutation[]} [allowedMethods=methods.mutation.ALL] An array of [Mutation methods](mutation) to automatically pick from\n     * @param {object} options\n     * @param {number} [options.maxNodes] Maximum amount of [Nodes](node) a network can grow to\n     * @param {number} [options.maxConnections] Maximum amount of [Connections](connection) a network can grow to\n     * @param {number} [options.maxGates] Maximum amount of Gates a network can grow to\n     */\n    Network.prototype.mutateRandom = function (allowedMethods, options) {\n        if (allowedMethods === void 0) { allowedMethods = Mutation_1.ALL_MUTATIONS; }\n        if (options === void 0) { options = {}; }\n        if (allowedMethods.length === 0) {\n            return;\n        }\n        // mutate the network with a random allowed mutation\n        this.mutate(Utils_1.pickRandom(allowedMethods), options);\n    };\n    /**\n     * Train the given data to this network\n     *\n     * @param {TrainOptions} options Options used to train network\n     *\n     * @returns {{error:{number},iterations:{number},time:{number}}} A summary object of the network's performance\n     */\n    Network.prototype.train = function (options) {\n        var _a;\n        if (!options.dataset || options.dataset[0].input.length !== this.inputSize || options.dataset[0].output.length !== this.outputSize) {\n            throw new Error(\"Dataset input/output size should be same as network input/output size!\");\n        }\n        // Use the default values, if no value is given\n        options.iterations = Utils_1.getOrDefault(options.iterations, -1);\n        options.error = Utils_1.getOrDefault(options.error, -1);\n        options.loss = Utils_1.getOrDefault(options.loss, Loss_1.MSELoss);\n        options.dropout = Utils_1.getOrDefault(options.dropout, 0);\n        options.momentum = Utils_1.getOrDefault(options.momentum, 0);\n        options.batchSize = Math.min(options.dataset.length, Utils_1.getOrDefault(options.batchSize, options.dataset.length));\n        var baseRate = Utils_1.getOrDefault(options.rate, 0.3);\n        options.ratePolicy = Utils_1.getOrDefault(options.ratePolicy, new Rate_1.FixedRate(baseRate));\n        options.log = Utils_1.getOrDefault(options.log, NaN);\n        var start = Date.now();\n        if (options.iterations <= 0 && options.error <= 0) {\n            throw new Error(\"At least one of the following options must be specified: error, iterations\");\n        }\n        // Split into trainingSet and testSet if cross validation is enabled\n        var trainingSetSize;\n        var trainingSet;\n        var testSet;\n        if (options.crossValidateTestSize && options.crossValidateTestSize > 0) {\n            trainingSetSize = Math.ceil((1 - options.crossValidateTestSize) * options.dataset.length);\n            trainingSet = options.dataset.slice(0, trainingSetSize);\n            testSet = options.dataset.slice(trainingSetSize);\n        }\n        else {\n            trainingSet = options.dataset;\n            testSet = [];\n        }\n        var currentTrainingRate;\n        var iterationCount = 0;\n        var error = 1;\n        // train until the target error is reached or the target iterations are reached\n        while (error > options.error && (options.iterations <= 0 || iterationCount < options.iterations)) {\n            iterationCount++;\n            // update the rate according to the rate policy\n            currentTrainingRate = options.ratePolicy.calc(iterationCount);\n            // train a single epoch\n            var trainError = this.trainEpoch(__assign(__assign({}, options), { dataset: trainingSet, trainingRate: currentTrainingRate }));\n            if (!Number.isFinite(trainError)) {\n                throw new RangeError();\n            }\n            if (options.clear) {\n                this.clear();\n            }\n            // Run test with the testSet, if cross validation is enabled\n            if (options.crossValidateTestSize) {\n                error = this.test(testSet, options.loss);\n                if (options.clear) {\n                    this.clear();\n                }\n            }\n            else {\n                error = trainError;\n            }\n            if ((_a = options.shuffle) !== null && _a !== void 0 ? _a : false) {\n                Utils_1.shuffle(options.dataset);\n            }\n            if (options.log > 0 && iterationCount % options.log === 0) {\n                console.log(\"iteration number\", iterationCount, \"error\", error, \"training rate\", currentTrainingRate);\n            }\n            if (options.schedule && iterationCount % options.schedule.iterations === 0) {\n                options.schedule.function(error, iterationCount);\n            }\n        }\n        if (options.clear) {\n            this.clear();\n        }\n        return {\n            error: error,\n            iterations: iterationCount,\n            time: Date.now() - start\n        };\n    };\n    /**\n     * Tests a set and returns the error and elapsed time\n     *\n     * @param {Array<{input:number[],output:number[]}>} dataset A set of input values and ideal output values to test the network against\n     * @param {lossType} [loss=MSELoss] The [loss function](https://en.wikipedia.org/wiki/Loss_function) used to determine network error\n     *\n     * @returns {number} A summary object of the network's performance\n     */\n    Network.prototype.test = function (dataset, loss) {\n        if (loss === void 0) { loss = Loss_1.MSELoss; }\n        var error = 0;\n        for (var _i = 0, dataset_1 = dataset; _i < dataset_1.length; _i++) {\n            var entry = dataset_1[_i];\n            var input = entry.input;\n            var target = entry.output;\n            var output = this.activate(input, { trace: false });\n            error += loss(target, output);\n        }\n        return error / dataset.length;\n    };\n    /**\n     * Convert the network to a json object\n     *\n     * @returns {NetworkJSON} The network represented as a json object\n     */\n    Network.prototype.toJSON = function () {\n        var json = {\n            nodes: [],\n            connections: [],\n            inputSize: this.inputSize,\n            outputSize: this.outputSize,\n        };\n        // set node indices\n        for (var i = 0; i < this.nodes.length; i++) {\n            this.nodes[i].index = i;\n        }\n        // convert all nodes to json and add the to the json object\n        this.nodes.forEach(function (node) {\n            json.nodes.push(node.toJSON());\n            if (node.selfConnection.weight !== 0) {\n                // if there is a self connection\n                // add it to the json object\n                json.connections.push(node.selfConnection.toJSON());\n            }\n        });\n        this.connections.forEach(function (conn) {\n            json.connections.push(conn.toJSON());\n        });\n        return json;\n    };\n    /**\n     * Evolves the network to reach a lower error on a dataset using the [NEAT algorithm](http://nn.cs.utexas.edu/downloads/papers/stanley.ec02.pdf)\n     *\n     * If both `iterations` and `error` options are unset, evolve will default to `iterations` as an end condition.\n     *\n     * @param {object} [options] Configuration options\n     *\n     * @returns {{error:{number},iterations:{number},time:{number}}} A summary object of the network's performance. <br /> Properties include: `error` - error of the best genome, `iterations` - generations used to evolve networks, `time` - clock time elapsed while evolving\n     */\n    Network.prototype.evolve = function (options) {\n        var _a, _b, _c, _d, _e;\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var targetError, start, workerPool, serializedDataSet_1, lossIndex_1, neat, error, bestFitness, bestGenome, fittest;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        if (!options.fitnessFunction && options.dataset && (options.dataset[0].input.length !== this.inputSize || options.dataset[0].output.length !== this.outputSize)) {\n                            throw new Error(\"Dataset input/output size should be same as network input/output size!\");\n                        }\n                        targetError = 0;\n                        if (typeof options.iterations === \"undefined\" && typeof options.error === \"undefined\") {\n                            options.iterations = 1000;\n                            targetError = 0.05;\n                        }\n                        else if (options.iterations) {\n                            targetError = -1; // run until iterations\n                        }\n                        else if (options.error) {\n                            targetError = options.error;\n                            options.iterations = 0; // run until error\n                        }\n                        // set options to default if necessary\n                        options.growth = Utils_1.getOrDefault(options.growth, 0.0001);\n                        options.loss = Utils_1.getOrDefault(options.loss, Loss_1.MSELoss);\n                        options.maxNodes = Utils_1.getOrDefault(options.maxNodes, Infinity);\n                        options.maxConnections = Utils_1.getOrDefault(options.maxConnections, Infinity);\n                        options.maxGates = Utils_1.getOrDefault(options.maxGates, Infinity);\n                        options.input = this.inputSize;\n                        options.output = this.outputSize;\n                        start = Date.now();\n                        if (!options.fitnessFunction) {\n                            serializedDataSet_1 = JSON.stringify(options.dataset);\n                            lossIndex_1 = Object.values(Loss_1.ALL_LOSSES).indexOf((_a = options.loss) !== null && _a !== void 0 ? _a : Loss_1.MSELoss);\n                            // init a pool of workers\n                            workerPool = dist_1.Pool(function () { return threads_1.spawn(new threads_1.Worker(\"../multithreading/Worker\")); }, (_b = options.threads) !== null && _b !== void 0 ? _b : os_1.default.cpus().length);\n                            options.fitnessFunction = function (population) {\n                                return __awaiter(this, void 0, void 0, function () {\n                                    var _loop_1, _i, population_1, genome;\n                                    var _this = this;\n                                    return __generator(this, function (_a) {\n                                        switch (_a.label) {\n                                            case 0:\n                                                _loop_1 = function (genome) {\n                                                    // add a task to the workerPool's queue\n                                                    workerPool.queue(function (test) { return __awaiter(_this, void 0, void 0, function () {\n                                                        var _a;\n                                                        var _b;\n                                                        return __generator(this, function (_c) {\n                                                            switch (_c.label) {\n                                                                case 0:\n                                                                    if (genome === undefined) {\n                                                                        throw new ReferenceError();\n                                                                    }\n                                                                    // test the genome\n                                                                    _a = genome;\n                                                                    return [4 /*yield*/, test(serializedDataSet_1, JSON.stringify(genome.toJSON()), lossIndex_1)];\n                                                                case 1:\n                                                                    // test the genome\n                                                                    _a.score = -(_c.sent());\n                                                                    if (!Number.isFinite(genome.score)) {\n                                                                        throw new RangeError();\n                                                                    }\n                                                                    // subtract growth value\n                                                                    genome.score -= ((_b = options.growth) !== null && _b !== void 0 ? _b : 0.0001) * (genome.nodes.length\n                                                                        - genome.inputSize\n                                                                        - genome.outputSize\n                                                                        + genome.connections.size\n                                                                        + genome.gates.length);\n                                                                    return [2 /*return*/];\n                                                            }\n                                                        });\n                                                    }); });\n                                                };\n                                                for (_i = 0, population_1 = population; _i < population_1.length; _i++) {\n                                                    genome = population_1[_i];\n                                                    _loop_1(genome);\n                                                }\n                                                return [4 /*yield*/, workerPool.completed()];\n                                            case 1:\n                                                _a.sent(); // wait until every task is done\n                                                return [2 /*return*/];\n                                        }\n                                    });\n                                });\n                            };\n                        }\n                        options.template = this; // set this network as template for first generation\n                        neat = new NEAT_1.NEAT(options);\n                        _f.label = 1;\n                    case 1: return [4 /*yield*/, neat.evolve()];\n                    case 2:\n                        fittest = _f.sent();\n                        if (!fittest.score) {\n                            throw new ReferenceError();\n                        }\n                        // add the growth value back to get the real error\n                        error = fittest.score + options.growth * (fittest.nodes.length\n                            + fittest.connections.size\n                            + fittest.gates.length\n                            - fittest.inputSize\n                            - fittest.outputSize);\n                        if (!bestFitness || fittest.score > bestFitness) {\n                            bestFitness = fittest.score;\n                            bestGenome = fittest;\n                        }\n                        if (((_c = options.log) !== null && _c !== void 0 ? _c : 0) > 0 && neat.generation % ((_d = options.log) !== null && _d !== void 0 ? _d : 0) === 0) {\n                            console.log(\"iteration\", neat.generation, \"fitness\", fittest.score, \"error\", -error);\n                        }\n                        if (options.schedule && neat.generation % options.schedule.iterations === 0) {\n                            options.schedule.function(fittest.score, -error, neat.generation);\n                        }\n                        _f.label = 3;\n                    case 3:\n                        if (error < -targetError && (options.iterations === 0 || neat.generation < ((_e = options.iterations) !== null && _e !== void 0 ? _e : 0))) return [3 /*break*/, 1];\n                        _f.label = 4;\n                    case 4:\n                        if (bestGenome !== undefined) {\n                            // set this network to the fittest from NEAT\n                            this.nodes = bestGenome.nodes;\n                            this.connections = bestGenome.connections;\n                            this.gates = bestGenome.gates;\n                            if (options.clear) {\n                                this.clear();\n                            }\n                        }\n                        if (!workerPool) return [3 /*break*/, 6];\n                        return [4 /*yield*/, workerPool.terminate()];\n                    case 5:\n                        _f.sent(); // stop all processes\n                        _f.label = 6;\n                    case 6: return [2 /*return*/, {\n                            error: -error,\n                            iterations: neat.generation,\n                            time: Date.now() - start,\n                        }];\n                }\n            });\n        });\n    };\n    /**\n     * Performs one training epoch and returns the error - this is a private function used in `self.train`\n     *\n     * @private\n     *\n     * @returns {number}\n     */\n    Network.prototype.trainEpoch = function (options) {\n        var _a, _b, _c;\n        var errorSum = 0;\n        for (var i = 0; i < options.dataset.length; i++) {\n            var input = options.dataset[i].input;\n            var correctOutput = options.dataset[i].output;\n            var update = (i + 1) % ((_a = options.batchSize) !== null && _a !== void 0 ? _a : options.dataset.length) === 0 || i + 1 === options.dataset.length;\n            var output = this.activate(input, { dropoutRate: (_b = options.dropoutRate) !== null && _b !== void 0 ? _b : 0.5 });\n            this.propagate(correctOutput, { rate: options.trainingRate, momentum: options.momentum, update: update });\n            errorSum += ((_c = options.loss) !== null && _c !== void 0 ? _c : Loss_1.MSELoss)(correctOutput, output);\n        }\n        return errorSum / options.dataset.length;\n    };\n    return Network;\n}());\nexports.Network = Network;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Architect = void 0;\nvar InputLayer_1 = require(\"./Layers/CoreLayers/InputLayer\");\nvar OutputLayer_1 = require(\"./Layers/CoreLayers/OutputLayer\");\nvar Layer_1 = require(\"./Layers/Layer\");\nvar Network_1 = require(\"./Network\");\n/**\n * Architect constructs multilayer networks with various types of layers.\n */\nvar Architect = /** @class */ (function () {\n    function Architect() {\n        this.layers = [];\n    }\n    /**\n     * Adds a layer to the architect.\n     *\n     * @param layer The layer\n     * @param incomingConnectionType The incoming connection to this layer\n     * @returns this object to function as builder class\n     */\n    Architect.prototype.addLayer = function (layer, incomingConnectionType) {\n        var connectionType = incomingConnectionType !== null && incomingConnectionType !== void 0 ? incomingConnectionType : layer.getDefaultIncomingConnectionType();\n        if (!layer.connectionTypeisAllowed(connectionType)) {\n            throw new ReferenceError(\"Connection type \" + connectionType + \" is not allowed at layer \" + layer.constructor.name);\n        }\n        this.layers.push({\n            layer: layer,\n            incomingConnectionType: connectionType\n        });\n        return this; // function as builder class\n    };\n    /**\n     * Build the network from the layers added to the architect.\n     *\n     * @returns the constructed network\n     */\n    Architect.prototype.buildModel = function () {\n        var _a, _b, _c;\n        if (!(this.layers[0].layer instanceof InputLayer_1.InputLayer)) {\n            throw new ReferenceError(\"First layer has to be a InputLayer! Currently is: \" + this.layers[0].layer.constructor.name);\n        }\n        if (!(this.layers[this.layers.length - 1].layer instanceof OutputLayer_1.OutputLayer)) {\n            throw new ReferenceError(\"Last layer has to be a OutputLayer! Currently is: \" + this.layers[this.layers.length - 1].layer.constructor.name);\n        }\n        var inputSize = this.layers[0].layer.nodes.length;\n        var outputSize = this.layers[this.layers.length - 1].layer.nodes.length;\n        var network = new Network_1.Network(inputSize, outputSize);\n        network.nodes = [];\n        network.connections.clear();\n        for (var i = 0; i < this.layers.length - 1; i++) {\n            Layer_1.Layer.connect(this.layers[i].layer, this.layers[i + 1].layer, this.layers[i + 1].incomingConnectionType).forEach(function (conn) { return network.connections.add(conn); });\n            (_a = network.nodes).push.apply(_a, this.layers[i].layer.nodes);\n            this.layers[i].layer.connections.forEach(function (conn) { return network.connections.add(conn); });\n            (_b = network.gates).push.apply(_b, this.layers[i].layer.gates);\n        }\n        (_c = network.nodes).push.apply(_c, this.layers[this.layers.length - 1].layer.nodes);\n        return network;\n    };\n    return Architect;\n}());\nexports.Architect = Architect;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DenseLayer = void 0;\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\nvar NodeType_1 = require(\"../../../enums/NodeType\");\nvar Activation_1 = require(\"../../../methods/Activation\");\nvar Node_1 = require(\"../../Node\");\nvar Layer_1 = require(\"../Layer\");\n/**\n * Dense layer\n */\nvar DenseLayer = /** @class */ (function (_super) {\n    __extends(DenseLayer, _super);\n    function DenseLayer(outputSize, options) {\n        var _a;\n        if (options === void 0) { options = {}; }\n        var _b;\n        var _this = _super.call(this, outputSize) || this;\n        var activation = (_b = options.activationType) !== null && _b !== void 0 ? _b : Activation_1.LogisticActivation;\n        for (var i = 0; i < outputSize; i++) {\n            _this.inputNodes.add(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setActivationType(activation));\n        }\n        _this.outputNodes = _this.inputNodes;\n        (_a = _this.nodes).push.apply(_a, Array.from(_this.inputNodes));\n        return _this;\n    }\n    /**\n     * Checks if a given connection type is allowed on this layer.\n     *\n     * @param type the type to check\n     *\n     * @return Is this connection type allowed?\n     */\n    DenseLayer.prototype.connectionTypeisAllowed = function (type) {\n        return true;\n    };\n    /**\n     * Gets the default connection type for a incoming connection to this layer.\n     *\n     * @returns the default incoming connection\n     */\n    DenseLayer.prototype.getDefaultIncomingConnectionType = function () {\n        return ConnectionType_1.ConnectionType.ALL_TO_ALL;\n    };\n    return DenseLayer;\n}(Layer_1.Layer));\nexports.DenseLayer = DenseLayer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DropoutNode = void 0;\nvar Utils_1 = require(\"../../methods/Utils\");\nvar ConstantNode_1 = require(\"./ConstantNode\");\n/**\n * Dropout node\n */\nvar DropoutNode = /** @class */ (function (_super) {\n    __extends(DropoutNode, _super);\n    function DropoutNode(probability) {\n        var _this = _super.call(this) || this;\n        _this.probability = probability;\n        _this.droppedOut = false;\n        return _this;\n    }\n    /**\n     * Actives the node.\n     *\n     * When a neuron activates, it computes its state from all its input connections and 'squashes' it using its activation function, and returns the output (activation).\n     *\n     * You can also provide the activation (a float between 0 and 1) as a parameter, which is useful for neurons in the input layer.\n     *\n     * @returns A neuron's output value\n     */\n    DropoutNode.prototype.activate = function () {\n        var _this = this;\n        if (this.incoming.size !== 1) {\n            throw new RangeError(\"Dropout node should have exactly one incoming connection!\");\n        }\n        var incomingConnection = Array.from(this.incoming)[0];\n        // https://stats.stackexchange.com/a/219240\n        if (Utils_1.randDouble(0, 1) < this.probability) {\n            // DROPOUT\n            this.droppedOut = true;\n            this.state = 0;\n        }\n        else {\n            this.droppedOut = false;\n            this.state = incomingConnection.from.activation * incomingConnection.weight * incomingConnection.gain;\n            this.state *= 1 / (1 - this.probability);\n        }\n        this.activation = this.squash(this.state, false) * this.mask;\n        // Adjust gain\n        this.gated.forEach(function (conn) { return conn.gain = _this.activation; });\n        return this.activation;\n    };\n    /**\n     * Backpropagate the error (a.k.a. learn).\n     *\n     * After an activation, you can teach the node what should have been the correct output (a.k.a. train). This is done by backpropagating. [Momentum](https://www.willamette.edu/~gorr/classes/cs449/momrate.html) adds a fraction of the previous weight update to the current one. When the gradient keeps pointing in the same direction, this will increase the size of the steps taken towards the minimum.\n     *\n     * If you combine a high learning rate with a lot of momentum, you will rush past the minimum (of the error function) with huge steps. It is therefore often necessary to reduce the global learning rate µ when using a lot of momentum (m close to 1).\n     *\n     * @param target The target value (i.e. \"the value the network SHOULD have given\")\n     * @param options More options for propagation\n     */\n    DropoutNode.prototype.propagate = function (target, options) {\n        if (options === void 0) { options = {}; }\n        options.momentum = Utils_1.getOrDefault(options.momentum, 0);\n        options.rate = Utils_1.getOrDefault(options.rate, 0.3);\n        options.update = Utils_1.getOrDefault(options.update, true);\n        var connectionsStates = Array.from(this.outgoing).map(function (conn) { return conn.to.errorResponsibility * conn.weight * conn.gain; });\n        this.errorResponsibility = this.errorProjected = Utils_1.sum(connectionsStates) / (1 - this.probability);\n        if (this.incoming.size !== 1) {\n            throw new RangeError(\"Dropout node should have exactly one incoming connection!\");\n        }\n        var incomingConnection = Array.from(this.incoming)[0];\n        // calculate gradient\n        if (!this.droppedOut) {\n            var gradient = this.errorProjected * incomingConnection.eligibility;\n            for (var i = 0; i < incomingConnection.xTraceNodes.length; i++) {\n                gradient += incomingConnection.xTraceNodes[i].errorResponsibility * incomingConnection.xTraceValues[i];\n            }\n            if (options.update) {\n                incomingConnection.deltaWeightsTotal += options.rate * gradient * this.mask + options.momentum * incomingConnection.deltaWeightsPrevious;\n                incomingConnection.weight += incomingConnection.deltaWeightsTotal;\n                incomingConnection.deltaWeightsPrevious = incomingConnection.deltaWeightsTotal;\n                incomingConnection.deltaWeightsTotal = 0;\n            }\n        }\n    };\n    /**\n     * Create a constant node from json object.\n     *\n     * @param json the json object representing the node\n     *\n     * @returns the created node\n     */\n    DropoutNode.prototype.fromJSON = function (json) {\n        _super.prototype.fromJSON.call(this, json);\n        this.probability = json.probability;\n        return this;\n    };\n    /**\n     * Convert this node into a json object.\n     *\n     * @returns the json object representing this node\n     */\n    DropoutNode.prototype.toJSON = function () {\n        return Object.assign(_super.prototype.toJSON.call(this), {\n            probability: this.probability\n        });\n    };\n    return DropoutNode;\n}(ConstantNode_1.ConstantNode));\nexports.DropoutNode = DropoutNode;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DropoutLayer = void 0;\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\nvar Activation_1 = require(\"../../../methods/Activation\");\nvar DropoutNode_1 = require(\"../../Nodes/DropoutNode\");\nvar Layer_1 = require(\"../Layer\");\n/**\n * Dropout layer\n */\nvar DropoutLayer = /** @class */ (function (_super) {\n    __extends(DropoutLayer, _super);\n    function DropoutLayer(outputSize, options) {\n        var _a;\n        if (options === void 0) { options = {}; }\n        var _b, _c;\n        var _this = _super.call(this, outputSize) || this;\n        var activation = (_b = options.activation) !== null && _b !== void 0 ? _b : Activation_1.IdentityActivation;\n        var probability = (_c = options.probability) !== null && _c !== void 0 ? _c : 0.1;\n        for (var i = 0; i < outputSize; i++) {\n            _this.inputNodes.add(new DropoutNode_1.DropoutNode(probability).setActivationType(activation));\n        }\n        _this.outputNodes = _this.inputNodes;\n        (_a = _this.nodes).push.apply(_a, Array.from(_this.inputNodes));\n        return _this;\n    }\n    /**\n     * Gets the default connection type for a incoming connection to this layer.\n     *\n     * @returns the default incoming connection\n     */\n    DropoutLayer.prototype.getDefaultIncomingConnectionType = function () {\n        return ConnectionType_1.ConnectionType.ONE_TO_ONE;\n    };\n    /**\n     * Checks if a given connection type is allowed on this layer.\n     *\n     * @param type the type to check\n     *\n     * @return Is this connection type allowed?\n     */\n    DropoutLayer.prototype.connectionTypeisAllowed = function (type) {\n        return type === ConnectionType_1.ConnectionType.ONE_TO_ONE;\n    };\n    return DropoutLayer;\n}(Layer_1.Layer));\nexports.DropoutLayer = DropoutLayer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PoolNode = void 0;\nvar NodeType_1 = require(\"../../enums/NodeType\");\nvar Utils_1 = require(\"../../methods/Utils\");\nvar ConstantNode_1 = require(\"./ConstantNode\");\n/**\n * Pool node\n */\nvar PoolNode = /** @class */ (function (_super) {\n    __extends(PoolNode, _super);\n    function PoolNode(poolingType) {\n        if (poolingType === void 0) { poolingType = NodeType_1.PoolNodeType.MAX_POOLING; }\n        var _this = _super.call(this) || this;\n        _this.poolingType = poolingType;\n        _this.receivingNode = null;\n        return _this;\n    }\n    /**\n     * Create a constant node from json object.\n     *\n     * @param json the json object representing the node\n     *\n     * @returns the created node\n     */\n    PoolNode.prototype.fromJSON = function (json) {\n        _super.prototype.fromJSON.call(this, json);\n        this.poolingType = json.poolType;\n        return this;\n    };\n    /**\n     * Actives the node.\n     *\n     * When a neuron activates, it computes its state from all its input connections and 'squashes' it using its activation function, and returns the output (activation).\n     *\n     * You can also provide the activation (a float between 0 and 1) as a parameter, which is useful for neurons in the input layer.\n     *\n     * @returns A neuron's output value\n     */\n    PoolNode.prototype.activate = function () {\n        var _this = this;\n        var connections = Array.from(this.incoming);\n        var incomingStates = connections.map(function (conn) { return conn.from.activation * conn.weight * conn.gain; });\n        if (this.poolingType === NodeType_1.PoolNodeType.MAX_POOLING) {\n            var index = Utils_1.maxValueIndex(incomingStates);\n            this.receivingNode = connections[index].from;\n            this.state = incomingStates[index];\n        }\n        else if (this.poolingType === NodeType_1.PoolNodeType.AVG_POOLING) {\n            this.state = Utils_1.avg(incomingStates);\n        }\n        else if (this.poolingType === NodeType_1.PoolNodeType.MIN_POOLING) {\n            var index = Utils_1.minValueIndex(incomingStates);\n            this.receivingNode = connections[index].from;\n            this.state = incomingStates[index];\n        }\n        else {\n            throw new ReferenceError(\"No valid pooling type! Type: \" + this.poolingType);\n        }\n        this.activation = this.squash(this.state, false) * this.mask;\n        if (this.poolingType === NodeType_1.PoolNodeType.AVG_POOLING) {\n            this.derivativeState = this.squash(this.state, true);\n        }\n        // Adjust gain\n        this.gated.forEach(function (conn) { return conn.gain = _this.activation; });\n        return this.activation;\n    };\n    /**\n     * Backpropagate the error (a.k.a. learn).\n     *\n     * After an activation, you can teach the node what should have been the correct output (a.k.a. train). This is done by backpropagating. [Momentum](https://www.willamette.edu/~gorr/classes/cs449/momrate.html) adds a fraction of the previous weight update to the current one. When the gradient keeps pointing in the same direction, this will increase the size of the steps taken towards the minimum.\n     *\n     * If you combine a high learning rate with a lot of momentum, you will rush past the minimum (of the error function) with huge steps. It is therefore often necessary to reduce the global learning rate µ when using a lot of momentum (m close to 1).\n     *\n     * @param target The target value (i.e. \"the value the network SHOULD have given\")\n     * @param options More options for propagation\n     */\n    PoolNode.prototype.propagate = function (target, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        options.momentum = Utils_1.getOrDefault(options.momentum, 0);\n        options.rate = Utils_1.getOrDefault(options.rate, 0.3);\n        options.update = Utils_1.getOrDefault(options.update, true);\n        var connectionsStates = Array.from(this.outgoing).map(function (conn) { return conn.to.errorResponsibility * conn.weight * conn.gain; });\n        this.errorResponsibility = this.errorProjected = Utils_1.sum(connectionsStates) * this.derivativeState;\n        if (this.poolingType === NodeType_1.PoolNodeType.AVG_POOLING) {\n            this.incoming.forEach(function (connection) {\n                var _a, _b;\n                // calculate gradient\n                var gradient = _this.errorProjected * connection.eligibility;\n                for (var i = 0; i < connection.xTraceNodes.length; i++) {\n                    gradient += connection.xTraceNodes[i].errorResponsibility * connection.xTraceValues[i];\n                }\n                connection.deltaWeightsTotal += ((_a = options.rate) !== null && _a !== void 0 ? _a : 0.3) * gradient * _this.mask;\n                if (options.update) {\n                    connection.deltaWeightsTotal += ((_b = options.momentum) !== null && _b !== void 0 ? _b : 0) * connection.deltaWeightsPrevious;\n                    connection.weight += connection.deltaWeightsTotal;\n                    connection.deltaWeightsPrevious = connection.deltaWeightsTotal;\n                    connection.deltaWeightsTotal = 0;\n                }\n            });\n        }\n        else {\n            // TODO: don't think that this is correct\n            // Passing only the connections that were used for getting the min or max\n            this.incoming.forEach(function (conn) {\n                conn.weight = _this.receivingNode === conn.from ? 1 : 0;\n                conn.gain = _this.receivingNode === conn.from ? 1 : 0;\n            });\n        }\n    };\n    /**\n     * Convert this node into a json object.\n     *\n     * @returns the json object representing this node\n     */\n    PoolNode.prototype.toJSON = function () {\n        return Object.assign(_super.prototype.toJSON.call(this), {\n            poolType: this.poolingType\n        });\n    };\n    return PoolNode;\n}(ConstantNode_1.ConstantNode));\nexports.PoolNode = PoolNode;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PoolingLayer = void 0;\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\nvar Layer_1 = require(\"../Layer\");\n/**\n * Parent class for all pooling layers\n */\nvar PoolingLayer = /** @class */ (function (_super) {\n    __extends(PoolingLayer, _super);\n    function PoolingLayer(outputSize) {\n        return _super.call(this, outputSize) || this;\n    }\n    /**\n     * Gets the default connection type for a incoming connection to this layer.\n     *\n     * @returns the default incoming connection\n     */\n    PoolingLayer.prototype.getDefaultIncomingConnectionType = function () {\n        return ConnectionType_1.ConnectionType.POOLING;\n    };\n    /**\n     * Checks if a given connection type is allowed on this layer.\n     *\n     * @param type the type to check\n     *\n     * @return Is this connection type allowed?\n     */\n    PoolingLayer.prototype.connectionTypeisAllowed = function (type) {\n        return true;\n    };\n    return PoolingLayer;\n}(Layer_1.Layer));\nexports.PoolingLayer = PoolingLayer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AvgPooling1DLayer = void 0;\nvar NodeType_1 = require(\"../../../enums/NodeType\");\nvar Activation_1 = require(\"../../../methods/Activation\");\nvar PoolNode_1 = require(\"../../Nodes/PoolNode\");\nvar PoolingLayer_1 = require(\"./PoolingLayer\");\n/**\n * Average pooling layer 1D\n */\nvar AvgPooling1DLayer = /** @class */ (function (_super) {\n    __extends(AvgPooling1DLayer, _super);\n    function AvgPooling1DLayer(outputSize, options) {\n        var _a;\n        if (options === void 0) { options = {}; }\n        var _b;\n        var _this = _super.call(this, outputSize) || this;\n        var activationType = (_b = options.activation) !== null && _b !== void 0 ? _b : Activation_1.IdentityActivation;\n        for (var i = 0; i < outputSize; i++) {\n            _this.inputNodes.add(new PoolNode_1.PoolNode(NodeType_1.PoolNodeType.AVG_POOLING).setActivationType(activationType));\n        }\n        _this.outputNodes = _this.inputNodes;\n        (_a = _this.nodes).push.apply(_a, Array.from(_this.inputNodes));\n        return _this;\n    }\n    return AvgPooling1DLayer;\n}(PoolingLayer_1.PoolingLayer));\nexports.AvgPooling1DLayer = AvgPooling1DLayer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GlobalAvgPooling1DLayer = void 0;\nvar AvgPooling1DLayer_1 = require(\"./AvgPooling1DLayer\");\n/**\n * Global average pooling layer 1D\n */\nvar GlobalAvgPooling1DLayer = /** @class */ (function (_super) {\n    __extends(GlobalAvgPooling1DLayer, _super);\n    function GlobalAvgPooling1DLayer(outputSize, options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, 1, options) || this;\n    }\n    return GlobalAvgPooling1DLayer;\n}(AvgPooling1DLayer_1.AvgPooling1DLayer));\nexports.GlobalAvgPooling1DLayer = GlobalAvgPooling1DLayer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MaxPooling1DLayer = void 0;\nvar NodeType_1 = require(\"../../../enums/NodeType\");\nvar Activation_1 = require(\"../../../methods/Activation\");\nvar PoolNode_1 = require(\"../../Nodes/PoolNode\");\nvar PoolingLayer_1 = require(\"./PoolingLayer\");\n/**\n * Maximum pooling layer 1D\n */\nvar MaxPooling1DLayer = /** @class */ (function (_super) {\n    __extends(MaxPooling1DLayer, _super);\n    function MaxPooling1DLayer(outputSize, options) {\n        var _a;\n        if (options === void 0) { options = {}; }\n        var _b;\n        var _this = _super.call(this, outputSize) || this;\n        var activationType = (_b = options.activation) !== null && _b !== void 0 ? _b : Activation_1.IdentityActivation;\n        for (var i = 0; i < outputSize; i++) {\n            _this.inputNodes.add(new PoolNode_1.PoolNode(NodeType_1.PoolNodeType.MAX_POOLING).setActivationType(activationType));\n        }\n        _this.outputNodes = _this.inputNodes;\n        (_a = _this.nodes).push.apply(_a, Array.from(_this.inputNodes));\n        return _this;\n    }\n    return MaxPooling1DLayer;\n}(PoolingLayer_1.PoolingLayer));\nexports.MaxPooling1DLayer = MaxPooling1DLayer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GlobalMaxPooling1DLayer = void 0;\nvar MaxPooling1DLayer_1 = require(\"./MaxPooling1DLayer\");\n/**\n * Global maximum pooling layer 1D\n */\nvar GlobalMaxPooling1DLayer = /** @class */ (function (_super) {\n    __extends(GlobalMaxPooling1DLayer, _super);\n    function GlobalMaxPooling1DLayer(outputSize, options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, 1, options) || this;\n    }\n    return GlobalMaxPooling1DLayer;\n}(MaxPooling1DLayer_1.MaxPooling1DLayer));\nexports.GlobalMaxPooling1DLayer = GlobalMaxPooling1DLayer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinPooling1DLayer = void 0;\nvar NodeType_1 = require(\"../../../enums/NodeType\");\nvar Activation_1 = require(\"../../../methods/Activation\");\nvar PoolNode_1 = require(\"../../Nodes/PoolNode\");\nvar PoolingLayer_1 = require(\"./PoolingLayer\");\n/**\n * Minimum pooling layer 1D\n */\nvar MinPooling1DLayer = /** @class */ (function (_super) {\n    __extends(MinPooling1DLayer, _super);\n    function MinPooling1DLayer(outputSize, options) {\n        var _a;\n        if (options === void 0) { options = {}; }\n        var _b;\n        var _this = _super.call(this, outputSize) || this;\n        var activationType = (_b = options.activation) !== null && _b !== void 0 ? _b : Activation_1.IdentityActivation;\n        for (var i = 0; i < outputSize; i++) {\n            _this.inputNodes.add(new PoolNode_1.PoolNode(NodeType_1.PoolNodeType.MIN_POOLING).setActivationType(activationType));\n        }\n        _this.outputNodes = _this.inputNodes;\n        (_a = _this.nodes).push.apply(_a, Array.from(_this.inputNodes));\n        return _this;\n    }\n    return MinPooling1DLayer;\n}(PoolingLayer_1.PoolingLayer));\nexports.MinPooling1DLayer = MinPooling1DLayer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GlobalMinPooling1DLayer = void 0;\nvar MinPooling1DLayer_1 = require(\"./MinPooling1DLayer\");\n/**\n * Global minimum pooling layer 1D\n */\nvar GlobalMinPooling1DLayer = /** @class */ (function (_super) {\n    __extends(GlobalMinPooling1DLayer, _super);\n    function GlobalMinPooling1DLayer(outputSize, options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, 1, options) || this;\n    }\n    return GlobalMinPooling1DLayer;\n}(MinPooling1DLayer_1.MinPooling1DLayer));\nexports.GlobalMinPooling1DLayer = GlobalMinPooling1DLayer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GRULayer = void 0;\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\nvar GatingType_1 = require(\"../../../enums/GatingType\");\nvar NodeType_1 = require(\"../../../enums/NodeType\");\nvar Activation_1 = require(\"../../../methods/Activation\");\nvar Node_1 = require(\"../../Node\");\nvar Layer_1 = require(\"../Layer\");\n/**\n * GRU layer\n */\nvar GRULayer = /** @class */ (function (_super) {\n    __extends(GRULayer, _super);\n    function GRULayer(outputSize, options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v;\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, outputSize) || this;\n        var updateGate = [];\n        var inverseUpdateGate = [];\n        var resetGate = [];\n        var memoryCell = [];\n        var previousOutput = [];\n        for (var i = 0; i < outputSize; i++) {\n            _this.inputNodes.add(new Node_1.Node(NodeType_1.NodeType.HIDDEN));\n            updateGate.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setBias(1));\n            inverseUpdateGate.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setBias(0).setActivationType(Activation_1.LogisticActivation));\n            resetGate.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setBias(0));\n            memoryCell.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setActivationType(Activation_1.TanhActivation));\n            previousOutput.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setBias(0).setActivationType(Activation_1.LogisticActivation));\n            _this.outputNodes.add(new Node_1.Node(NodeType_1.NodeType.HIDDEN));\n        }\n        (_a = _this.connections).push.apply(_a, Layer_1.Layer.connect(_this.inputNodes, updateGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\n        (_b = _this.connections).push.apply(_b, Layer_1.Layer.connect(_this.inputNodes, resetGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\n        (_c = _this.connections).push.apply(_c, Layer_1.Layer.connect(_this.inputNodes, memoryCell, ConnectionType_1.ConnectionType.ALL_TO_ALL));\n        (_d = _this.connections).push.apply(_d, Layer_1.Layer.connect(previousOutput, updateGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\n        (_e = _this.connections).push.apply(_e, Layer_1.Layer.connect(updateGate, inverseUpdateGate, ConnectionType_1.ConnectionType.ONE_TO_ONE, 1));\n        (_f = _this.connections).push.apply(_f, Layer_1.Layer.connect(previousOutput, resetGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\n        var reset = Layer_1.Layer.connect(previousOutput, memoryCell, ConnectionType_1.ConnectionType.ALL_TO_ALL);\n        (_g = _this.connections).push.apply(_g, reset);\n        (_h = _this.gates).push.apply(_h, Layer_1.Layer.gate(resetGate, reset, GatingType_1.GatingType.OUTPUT));\n        var update = Layer_1.Layer.connect(previousOutput, _this.outputNodes, ConnectionType_1.ConnectionType.ALL_TO_ALL);\n        var inverseUpdate = Layer_1.Layer.connect(memoryCell, _this.outputNodes, ConnectionType_1.ConnectionType.ALL_TO_ALL);\n        (_j = _this.connections).push.apply(_j, update);\n        (_k = _this.connections).push.apply(_k, inverseUpdate);\n        (_l = _this.gates).push.apply(_l, Layer_1.Layer.gate(updateGate, update, GatingType_1.GatingType.OUTPUT));\n        (_m = _this.gates).push.apply(_m, Layer_1.Layer.gate(inverseUpdateGate, inverseUpdate, GatingType_1.GatingType.OUTPUT));\n        (_o = _this.connections).push.apply(_o, Layer_1.Layer.connect(_this.outputNodes, previousOutput, ConnectionType_1.ConnectionType.ONE_TO_ONE, 1));\n        (_p = _this.nodes).push.apply(_p, Array.from(_this.inputNodes));\n        (_q = _this.nodes).push.apply(_q, updateGate);\n        (_r = _this.nodes).push.apply(_r, inverseUpdateGate);\n        (_s = _this.nodes).push.apply(_s, resetGate);\n        (_t = _this.nodes).push.apply(_t, memoryCell);\n        (_u = _this.nodes).push.apply(_u, Array.from(_this.outputNodes));\n        (_v = _this.nodes).push.apply(_v, previousOutput);\n        _this.outputNodes.forEach(function (node) { var _a; return node.squash = (_a = options.activation) !== null && _a !== void 0 ? _a : Activation_1.LogisticActivation; });\n        return _this;\n    }\n    /**\n     * Checks if a given connection type is allowed on this layer.\n     *\n     * @param type the type to check\n     *\n     * @return Is this connection type allowed?\n     */\n    GRULayer.prototype.connectionTypeisAllowed = function (type) {\n        return true;\n    };\n    /**\n     * Gets the default connection type for a incoming connection to this layer.\n     *\n     * @returns the default incoming connection\n     */\n    GRULayer.prototype.getDefaultIncomingConnectionType = function () {\n        return ConnectionType_1.ConnectionType.ALL_TO_ALL;\n    };\n    return GRULayer;\n}(Layer_1.Layer));\nexports.GRULayer = GRULayer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LSTMLayer = void 0;\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\nvar GatingType_1 = require(\"../../../enums/GatingType\");\nvar NodeType_1 = require(\"../../../enums/NodeType\");\nvar Activation_1 = require(\"../../../methods/Activation\");\nvar Node_1 = require(\"../../Node\");\nvar Layer_1 = require(\"../Layer\");\n/**\n * LSTM layer\n */\nvar LSTMLayer = /** @class */ (function (_super) {\n    __extends(LSTMLayer, _super);\n    function LSTMLayer(outputSize, options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, outputSize) || this;\n        var inputGate = [];\n        var forgetGate = [];\n        var memoryCell = [];\n        var outputGate = [];\n        for (var i = 0; i < outputSize; i++) {\n            _this.inputNodes.add(new Node_1.Node(NodeType_1.NodeType.HIDDEN));\n            inputGate.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setBias(1));\n            forgetGate.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setBias(1).setActivationType(Activation_1.LogisticActivation));\n            memoryCell.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN));\n            outputGate.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setBias(1));\n            _this.outputNodes.add(new Node_1.Node(NodeType_1.NodeType.HIDDEN));\n        }\n        (_a = _this.connections).push.apply(_a, Layer_1.Layer.connect(memoryCell, inputGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\n        (_b = _this.connections).push.apply(_b, Layer_1.Layer.connect(memoryCell, forgetGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\n        (_c = _this.connections).push.apply(_c, Layer_1.Layer.connect(memoryCell, outputGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\n        var forgetGateConnections = Layer_1.Layer.connect(memoryCell, memoryCell, ConnectionType_1.ConnectionType.ONE_TO_ONE);\n        var outputGateConnections = Layer_1.Layer.connect(memoryCell, _this.outputNodes, ConnectionType_1.ConnectionType.ALL_TO_ALL);\n        (_d = _this.connections).push.apply(_d, forgetGateConnections);\n        (_e = _this.connections).push.apply(_e, outputGateConnections);\n        (_f = _this.connections).push.apply(_f, Layer_1.Layer.connect(_this.inputNodes, memoryCell, ConnectionType_1.ConnectionType.ALL_TO_ALL));\n        (_g = _this.connections).push.apply(_g, Layer_1.Layer.connect(_this.inputNodes, outputGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\n        (_h = _this.connections).push.apply(_h, Layer_1.Layer.connect(_this.inputNodes, forgetGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\n        var inputGateConnections = Layer_1.Layer.connect(_this.inputNodes, inputGate, ConnectionType_1.ConnectionType.ALL_TO_ALL);\n        (_j = _this.connections).push.apply(_j, inputGateConnections);\n        (_k = _this.gates).push.apply(_k, Layer_1.Layer.gate(forgetGate, forgetGateConnections, GatingType_1.GatingType.SELF));\n        (_l = _this.gates).push.apply(_l, Layer_1.Layer.gate(outputGate, outputGateConnections, GatingType_1.GatingType.OUTPUT));\n        (_m = _this.gates).push.apply(_m, Layer_1.Layer.gate(inputGate, inputGateConnections, GatingType_1.GatingType.INPUT));\n        (_o = _this.nodes).push.apply(_o, Array.from(_this.inputNodes));\n        (_p = _this.nodes).push.apply(_p, inputGate);\n        (_q = _this.nodes).push.apply(_q, forgetGate);\n        (_r = _this.nodes).push.apply(_r, memoryCell);\n        (_s = _this.nodes).push.apply(_s, outputGate);\n        (_t = _this.nodes).push.apply(_t, Array.from(_this.outputNodes));\n        _this.outputNodes.forEach(function (node) { var _a; return node.squash = (_a = options.activation) !== null && _a !== void 0 ? _a : Activation_1.TanhActivation; });\n        return _this;\n    }\n    /**\n     * Checks if a given connection type is allowed on this layer.\n     *\n     * @param type the type to check\n     *\n     * @return Is this connection type allowed?\n     */\n    LSTMLayer.prototype.connectionTypeisAllowed = function (type) {\n        return true;\n    };\n    /**\n     * Gets the default connection type for a incoming connection to this layer.\n     *\n     * @returns the default incoming connection\n     */\n    LSTMLayer.prototype.getDefaultIncomingConnectionType = function () {\n        return ConnectionType_1.ConnectionType.ALL_TO_ALL;\n    };\n    return LSTMLayer;\n}(Layer_1.Layer));\nexports.LSTMLayer = LSTMLayer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MemoryLayer = void 0;\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\nvar NodeType_1 = require(\"../../../enums/NodeType\");\nvar Activation_1 = require(\"../../../methods/Activation\");\nvar Node_1 = require(\"../../Node\");\nvar Layer_1 = require(\"../Layer\");\n/**\n * Memory layer\n */\nvar MemoryLayer = /** @class */ (function (_super) {\n    __extends(MemoryLayer, _super);\n    function MemoryLayer(outputSize, options) {\n        var _a, _b, _c;\n        if (options === void 0) { options = {}; }\n        var _d;\n        var _this = _super.call(this, outputSize) || this;\n        for (var i = 0; i < outputSize; i++) {\n            _this.inputNodes.add(new Node_1.Node(NodeType_1.NodeType.HIDDEN));\n        }\n        var prevNodes = Array.from(_this.inputNodes);\n        var nodes = [];\n        for (var i = 0; i < ((_d = options.memorySize) !== null && _d !== void 0 ? _d : 1); i++) {\n            var block = [];\n            for (var j = 0; j < outputSize; j++) {\n                var node = new Node_1.Node(NodeType_1.NodeType.HIDDEN);\n                node.squash = Activation_1.IdentityActivation;\n                node.bias = 0;\n                block.push(node);\n            }\n            (_a = _this.connections).push.apply(_a, Layer_1.Layer.connect(prevNodes, block, ConnectionType_1.ConnectionType.ONE_TO_ONE));\n            nodes.push.apply(nodes, block);\n            prevNodes = block;\n        }\n        (_b = _this.nodes).push.apply(_b, Array.from(_this.inputNodes));\n        (_c = _this.nodes).push.apply(_c, (nodes.reverse()));\n        prevNodes.forEach(function (node) { return _this.outputNodes.add(node); });\n        _this.outputNodes.forEach(function (node) { var _a; return node.squash = (_a = options.activation) !== null && _a !== void 0 ? _a : Activation_1.LogisticActivation; });\n        return _this;\n    }\n    /**\n     * Checks if a given connection type is allowed on this layer.\n     *\n     * @param type the type to check\n     *\n     * @return Is this connection type allowed?\n     */\n    MemoryLayer.prototype.connectionTypeisAllowed = function (type) {\n        return true;\n    };\n    /**\n     * Gets the default connection type for a incoming connection to this layer.\n     *\n     * @returns the default incoming connection\n     */\n    MemoryLayer.prototype.getDefaultIncomingConnectionType = function () {\n        return ConnectionType_1.ConnectionType.ALL_TO_ALL;\n    };\n    return MemoryLayer;\n}(Layer_1.Layer));\nexports.MemoryLayer = MemoryLayer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateGaussian = exports.avg = exports.sum = exports.min = exports.minValueIndex = exports.maxValueIndex = exports.max = exports.shuffle = exports.getOrDefault = exports.removeFromArray = exports.randBoolean = exports.randDouble = exports.randInt = exports.pickRandom = exports.TournamentSelection = exports.PowerSelection = exports.FitnessProportionateSelection = exports.Selection = exports.InverseRate = exports.ExponentialRate = exports.StepRate = exports.FixedRate = exports.Rate = exports.SwapNodesMutation = exports.SubBackConnectionMutation = exports.AddBackConnectionMutation = exports.SubSelfConnectionMutation = exports.AddSelfConnectionMutation = exports.SubGateMutation = exports.AddGateMutation = exports.ModActivationMutation = exports.ModBiasMutation = exports.ModWeightMutation = exports.SubConnectionMutation = exports.AddConnectionMutation = exports.SubNodeMutation = exports.AddNodeMutation = exports.Mutation = exports.ONLY_STRUCTURE = exports.NO_STRUCTURE_MUTATIONS = exports.FEEDFORWARD_MUTATIONS = exports.ALL_MUTATIONS = exports.HINGELoss = exports.MSLELoss = exports.WAPELoss = exports.MAPELoss = exports.MAELoss = exports.BinaryLoss = exports.MBELoss = exports.MSELoss = exports.ALL_LOSSES = exports.MISHActivation = exports.SELUActivation = exports.InverseActivation = exports.AbsoluteActivation = exports.HardTanhActivation = exports.BipolarSigmoidActivation = exports.BipolarActivation = exports.BentIdentityActivation = exports.GaussianActivation = exports.SinusoidActivation = exports.SoftSignActivation = exports.RELUActivation = exports.StepActivation = exports.IdentityActivation = exports.TanhActivation = exports.LogisticActivation = exports.ALL_ACTIVATIONS = exports.NoiseNodeType = exports.PoolNodeType = exports.NodeType = exports.GatingType = exports.ConnectionType = exports.Node = exports.Network = exports.Connection = exports.Architect = exports.PoolNode = exports.NoiseNode = exports.DropoutNode = exports.ConstantNode = exports.Layer = exports.MemoryLayer = exports.LSTMLayer = exports.GRULayer = exports.PoolingLayer = exports.GlobalMaxPooling1DLayer = exports.GlobalMinPooling1DLayer = exports.GlobalAvgPooling1DLayer = exports.MaxPooling1DLayer = exports.MinPooling1DLayer = exports.AvgPooling1DLayer = exports.NoiseLayer = exports.OutputLayer = exports.InputLayer = exports.DropoutLayer = exports.DenseLayer = void 0;\nvar Architect_1 = require(\"../src/architecture/Architect\");\nObject.defineProperty(exports, \"Architect\", { enumerable: true, get: function () { return Architect_1.Architect; } });\nvar Connection_1 = require(\"../src/architecture/Connection\");\nObject.defineProperty(exports, \"Connection\", { enumerable: true, get: function () { return Connection_1.Connection; } });\nvar DenseLayer_1 = require(\"../src/architecture/Layers/CoreLayers/DenseLayer\");\nObject.defineProperty(exports, \"DenseLayer\", { enumerable: true, get: function () { return DenseLayer_1.DenseLayer; } });\nvar DropoutLayer_1 = require(\"../src/architecture/Layers/CoreLayers/DropoutLayer\");\nObject.defineProperty(exports, \"DropoutLayer\", { enumerable: true, get: function () { return DropoutLayer_1.DropoutLayer; } });\nvar InputLayer_1 = require(\"../src/architecture/Layers/CoreLayers/InputLayer\");\nObject.defineProperty(exports, \"InputLayer\", { enumerable: true, get: function () { return InputLayer_1.InputLayer; } });\nvar OutputLayer_1 = require(\"../src/architecture/Layers/CoreLayers/OutputLayer\");\nObject.defineProperty(exports, \"OutputLayer\", { enumerable: true, get: function () { return OutputLayer_1.OutputLayer; } });\nvar Layer_1 = require(\"../src/architecture/Layers/Layer\");\nObject.defineProperty(exports, \"Layer\", { enumerable: true, get: function () { return Layer_1.Layer; } });\nvar NoiseLayer_1 = require(\"../src/architecture/Layers/NoiseLayers/NoiseLayer\");\nObject.defineProperty(exports, \"NoiseLayer\", { enumerable: true, get: function () { return NoiseLayer_1.NoiseLayer; } });\nvar AvgPooling1DLayer_1 = require(\"../src/architecture/Layers/PoolingLayers/AvgPooling1DLayer\");\nObject.defineProperty(exports, \"AvgPooling1DLayer\", { enumerable: true, get: function () { return AvgPooling1DLayer_1.AvgPooling1DLayer; } });\nvar GlobalAvgPooling1DLayer_1 = require(\"../src/architecture/Layers/PoolingLayers/GlobalAvgPooling1DLayer\");\nObject.defineProperty(exports, \"GlobalAvgPooling1DLayer\", { enumerable: true, get: function () { return GlobalAvgPooling1DLayer_1.GlobalAvgPooling1DLayer; } });\nvar GlobalMaxPooling1DLayer_1 = require(\"../src/architecture/Layers/PoolingLayers/GlobalMaxPooling1DLayer\");\nObject.defineProperty(exports, \"GlobalMaxPooling1DLayer\", { enumerable: true, get: function () { return GlobalMaxPooling1DLayer_1.GlobalMaxPooling1DLayer; } });\nvar GlobalMinPooling1DLayer_1 = require(\"../src/architecture/Layers/PoolingLayers/GlobalMinPooling1DLayer\");\nObject.defineProperty(exports, \"GlobalMinPooling1DLayer\", { enumerable: true, get: function () { return GlobalMinPooling1DLayer_1.GlobalMinPooling1DLayer; } });\nvar MaxPooling1DLayer_1 = require(\"../src/architecture/Layers/PoolingLayers/MaxPooling1DLayer\");\nObject.defineProperty(exports, \"MaxPooling1DLayer\", { enumerable: true, get: function () { return MaxPooling1DLayer_1.MaxPooling1DLayer; } });\nvar MinPooling1DLayer_1 = require(\"../src/architecture/Layers/PoolingLayers/MinPooling1DLayer\");\nObject.defineProperty(exports, \"MinPooling1DLayer\", { enumerable: true, get: function () { return MinPooling1DLayer_1.MinPooling1DLayer; } });\nvar PoolingLayer_1 = require(\"../src/architecture/Layers/PoolingLayers/PoolingLayer\");\nObject.defineProperty(exports, \"PoolingLayer\", { enumerable: true, get: function () { return PoolingLayer_1.PoolingLayer; } });\nvar GRULayer_1 = require(\"../src/architecture/Layers/RecurrentLayers/GRULayer\");\nObject.defineProperty(exports, \"GRULayer\", { enumerable: true, get: function () { return GRULayer_1.GRULayer; } });\nvar LSTMLayer_1 = require(\"../src/architecture/Layers/RecurrentLayers/LSTMLayer\");\nObject.defineProperty(exports, \"LSTMLayer\", { enumerable: true, get: function () { return LSTMLayer_1.LSTMLayer; } });\nvar MemoryLayer_1 = require(\"../src/architecture/Layers/RecurrentLayers/MemoryLayer\");\nObject.defineProperty(exports, \"MemoryLayer\", { enumerable: true, get: function () { return MemoryLayer_1.MemoryLayer; } });\nvar Network_1 = require(\"../src/architecture/Network\");\nObject.defineProperty(exports, \"Network\", { enumerable: true, get: function () { return Network_1.Network; } });\nvar Node_1 = require(\"../src/architecture/Node\");\nObject.defineProperty(exports, \"Node\", { enumerable: true, get: function () { return Node_1.Node; } });\nvar ConstantNode_1 = require(\"../src/architecture/Nodes/ConstantNode\");\nObject.defineProperty(exports, \"ConstantNode\", { enumerable: true, get: function () { return ConstantNode_1.ConstantNode; } });\nvar DropoutNode_1 = require(\"../src/architecture/Nodes/DropoutNode\");\nObject.defineProperty(exports, \"DropoutNode\", { enumerable: true, get: function () { return DropoutNode_1.DropoutNode; } });\nvar NoiseNode_1 = require(\"../src/architecture/Nodes/NoiseNode\");\nObject.defineProperty(exports, \"NoiseNode\", { enumerable: true, get: function () { return NoiseNode_1.NoiseNode; } });\nvar PoolNode_1 = require(\"../src/architecture/Nodes/PoolNode\");\nObject.defineProperty(exports, \"PoolNode\", { enumerable: true, get: function () { return PoolNode_1.PoolNode; } });\nvar ConnectionType_1 = require(\"../src/enums/ConnectionType\");\nObject.defineProperty(exports, \"ConnectionType\", { enumerable: true, get: function () { return ConnectionType_1.ConnectionType; } });\nvar GatingType_1 = require(\"../src/enums/GatingType\");\nObject.defineProperty(exports, \"GatingType\", { enumerable: true, get: function () { return GatingType_1.GatingType; } });\nvar NodeType_1 = require(\"../src/enums/NodeType\");\nObject.defineProperty(exports, \"NodeType\", { enumerable: true, get: function () { return NodeType_1.NodeType; } });\nObject.defineProperty(exports, \"NoiseNodeType\", { enumerable: true, get: function () { return NodeType_1.NoiseNodeType; } });\nObject.defineProperty(exports, \"PoolNodeType\", { enumerable: true, get: function () { return NodeType_1.PoolNodeType; } });\nvar Activation_1 = require(\"../src/methods/Activation\");\nObject.defineProperty(exports, \"AbsoluteActivation\", { enumerable: true, get: function () { return Activation_1.AbsoluteActivation; } });\nObject.defineProperty(exports, \"ALL_ACTIVATIONS\", { enumerable: true, get: function () { return Activation_1.ALL_ACTIVATIONS; } });\nObject.defineProperty(exports, \"BentIdentityActivation\", { enumerable: true, get: function () { return Activation_1.BentIdentityActivation; } });\nObject.defineProperty(exports, \"BipolarActivation\", { enumerable: true, get: function () { return Activation_1.BipolarActivation; } });\nObject.defineProperty(exports, \"BipolarSigmoidActivation\", { enumerable: true, get: function () { return Activation_1.BipolarSigmoidActivation; } });\nObject.defineProperty(exports, \"GaussianActivation\", { enumerable: true, get: function () { return Activation_1.GaussianActivation; } });\nObject.defineProperty(exports, \"HardTanhActivation\", { enumerable: true, get: function () { return Activation_1.HardTanhActivation; } });\nObject.defineProperty(exports, \"IdentityActivation\", { enumerable: true, get: function () { return Activation_1.IdentityActivation; } });\nObject.defineProperty(exports, \"InverseActivation\", { enumerable: true, get: function () { return Activation_1.InverseActivation; } });\nObject.defineProperty(exports, \"LogisticActivation\", { enumerable: true, get: function () { return Activation_1.LogisticActivation; } });\nObject.defineProperty(exports, \"MISHActivation\", { enumerable: true, get: function () { return Activation_1.MISHActivation; } });\nObject.defineProperty(exports, \"RELUActivation\", { enumerable: true, get: function () { return Activation_1.RELUActivation; } });\nObject.defineProperty(exports, \"SELUActivation\", { enumerable: true, get: function () { return Activation_1.SELUActivation; } });\nObject.defineProperty(exports, \"SinusoidActivation\", { enumerable: true, get: function () { return Activation_1.SinusoidActivation; } });\nObject.defineProperty(exports, \"SoftSignActivation\", { enumerable: true, get: function () { return Activation_1.SoftSignActivation; } });\nObject.defineProperty(exports, \"StepActivation\", { enumerable: true, get: function () { return Activation_1.StepActivation; } });\nObject.defineProperty(exports, \"TanhActivation\", { enumerable: true, get: function () { return Activation_1.TanhActivation; } });\nvar Loss_1 = require(\"../src/methods/Loss\");\nObject.defineProperty(exports, \"ALL_LOSSES\", { enumerable: true, get: function () { return Loss_1.ALL_LOSSES; } });\nObject.defineProperty(exports, \"BinaryLoss\", { enumerable: true, get: function () { return Loss_1.BinaryLoss; } });\nObject.defineProperty(exports, \"HINGELoss\", { enumerable: true, get: function () { return Loss_1.HINGELoss; } });\nObject.defineProperty(exports, \"MAELoss\", { enumerable: true, get: function () { return Loss_1.MAELoss; } });\nObject.defineProperty(exports, \"MAPELoss\", { enumerable: true, get: function () { return Loss_1.MAPELoss; } });\nObject.defineProperty(exports, \"MBELoss\", { enumerable: true, get: function () { return Loss_1.MBELoss; } });\nObject.defineProperty(exports, \"MSELoss\", { enumerable: true, get: function () { return Loss_1.MSELoss; } });\nObject.defineProperty(exports, \"MSLELoss\", { enumerable: true, get: function () { return Loss_1.MSLELoss; } });\nObject.defineProperty(exports, \"WAPELoss\", { enumerable: true, get: function () { return Loss_1.WAPELoss; } });\nvar Mutation_1 = require(\"../src/methods/Mutation\");\nObject.defineProperty(exports, \"AddBackConnectionMutation\", { enumerable: true, get: function () { return Mutation_1.AddBackConnectionMutation; } });\nObject.defineProperty(exports, \"AddConnectionMutation\", { enumerable: true, get: function () { return Mutation_1.AddConnectionMutation; } });\nObject.defineProperty(exports, \"AddGateMutation\", { enumerable: true, get: function () { return Mutation_1.AddGateMutation; } });\nObject.defineProperty(exports, \"AddNodeMutation\", { enumerable: true, get: function () { return Mutation_1.AddNodeMutation; } });\nObject.defineProperty(exports, \"AddSelfConnectionMutation\", { enumerable: true, get: function () { return Mutation_1.AddSelfConnectionMutation; } });\nObject.defineProperty(exports, \"ALL_MUTATIONS\", { enumerable: true, get: function () { return Mutation_1.ALL_MUTATIONS; } });\nObject.defineProperty(exports, \"FEEDFORWARD_MUTATIONS\", { enumerable: true, get: function () { return Mutation_1.FEEDFORWARD_MUTATIONS; } });\nObject.defineProperty(exports, \"ModActivationMutation\", { enumerable: true, get: function () { return Mutation_1.ModActivationMutation; } });\nObject.defineProperty(exports, \"ModBiasMutation\", { enumerable: true, get: function () { return Mutation_1.ModBiasMutation; } });\nObject.defineProperty(exports, \"ModWeightMutation\", { enumerable: true, get: function () { return Mutation_1.ModWeightMutation; } });\nObject.defineProperty(exports, \"Mutation\", { enumerable: true, get: function () { return Mutation_1.Mutation; } });\nObject.defineProperty(exports, \"NO_STRUCTURE_MUTATIONS\", { enumerable: true, get: function () { return Mutation_1.NO_STRUCTURE_MUTATIONS; } });\nObject.defineProperty(exports, \"ONLY_STRUCTURE\", { enumerable: true, get: function () { return Mutation_1.ONLY_STRUCTURE; } });\nObject.defineProperty(exports, \"SubBackConnectionMutation\", { enumerable: true, get: function () { return Mutation_1.SubBackConnectionMutation; } });\nObject.defineProperty(exports, \"SubConnectionMutation\", { enumerable: true, get: function () { return Mutation_1.SubConnectionMutation; } });\nObject.defineProperty(exports, \"SubGateMutation\", { enumerable: true, get: function () { return Mutation_1.SubGateMutation; } });\nObject.defineProperty(exports, \"SubNodeMutation\", { enumerable: true, get: function () { return Mutation_1.SubNodeMutation; } });\nObject.defineProperty(exports, \"SubSelfConnectionMutation\", { enumerable: true, get: function () { return Mutation_1.SubSelfConnectionMutation; } });\nObject.defineProperty(exports, \"SwapNodesMutation\", { enumerable: true, get: function () { return Mutation_1.SwapNodesMutation; } });\nvar Rate_1 = require(\"../src/methods/Rate\");\nObject.defineProperty(exports, \"ExponentialRate\", { enumerable: true, get: function () { return Rate_1.ExponentialRate; } });\nObject.defineProperty(exports, \"FixedRate\", { enumerable: true, get: function () { return Rate_1.FixedRate; } });\nObject.defineProperty(exports, \"InverseRate\", { enumerable: true, get: function () { return Rate_1.InverseRate; } });\nObject.defineProperty(exports, \"Rate\", { enumerable: true, get: function () { return Rate_1.Rate; } });\nObject.defineProperty(exports, \"StepRate\", { enumerable: true, get: function () { return Rate_1.StepRate; } });\nvar Selection_1 = require(\"../src/methods/Selection\");\nObject.defineProperty(exports, \"FitnessProportionateSelection\", { enumerable: true, get: function () { return Selection_1.FitnessProportionateSelection; } });\nObject.defineProperty(exports, \"PowerSelection\", { enumerable: true, get: function () { return Selection_1.PowerSelection; } });\nObject.defineProperty(exports, \"Selection\", { enumerable: true, get: function () { return Selection_1.Selection; } });\nObject.defineProperty(exports, \"TournamentSelection\", { enumerable: true, get: function () { return Selection_1.TournamentSelection; } });\nvar Utils_1 = require(\"../src/methods/Utils\");\nObject.defineProperty(exports, \"avg\", { enumerable: true, get: function () { return Utils_1.avg; } });\nObject.defineProperty(exports, \"generateGaussian\", { enumerable: true, get: function () { return Utils_1.generateGaussian; } });\nObject.defineProperty(exports, \"getOrDefault\", { enumerable: true, get: function () { return Utils_1.getOrDefault; } });\nObject.defineProperty(exports, \"max\", { enumerable: true, get: function () { return Utils_1.max; } });\nObject.defineProperty(exports, \"maxValueIndex\", { enumerable: true, get: function () { return Utils_1.maxValueIndex; } });\nObject.defineProperty(exports, \"min\", { enumerable: true, get: function () { return Utils_1.min; } });\nObject.defineProperty(exports, \"minValueIndex\", { enumerable: true, get: function () { return Utils_1.minValueIndex; } });\nObject.defineProperty(exports, \"pickRandom\", { enumerable: true, get: function () { return Utils_1.pickRandom; } });\nObject.defineProperty(exports, \"randBoolean\", { enumerable: true, get: function () { return Utils_1.randBoolean; } });\nObject.defineProperty(exports, \"randDouble\", { enumerable: true, get: function () { return Utils_1.randDouble; } });\nObject.defineProperty(exports, \"randInt\", { enumerable: true, get: function () { return Utils_1.randInt; } });\nObject.defineProperty(exports, \"removeFromArray\", { enumerable: true, get: function () { return Utils_1.removeFromArray; } });\nObject.defineProperty(exports, \"shuffle\", { enumerable: true, get: function () { return Utils_1.shuffle; } });\nObject.defineProperty(exports, \"sum\", { enumerable: true, get: function () { return Utils_1.sum; } });\n"]}