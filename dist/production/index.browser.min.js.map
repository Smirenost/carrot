{"version":3,"sources":["../src/enums/ActivationType.js","../src/enums/ConnectionType.js","../src/enums/NodeType.js","../src/methods/Activation.js","../src/methods/Utils.js","../src/methods/Mutation.js","../src/architecture/Connection.js","../src/architecture/Node.js","../src/enums/GatingType.js","../src/architecture/Layers/Layer.js","../src/architecture/Layers/CoreLayers/DenseLayer.js","../src/architecture/Nodes/ConstantNode.js","../src/architecture/Nodes/DropoutNode.js","../src/architecture/Layers/CoreLayers/DropoutLayer.js","../src/architecture/Nodes/NoiseNode.js","../src/architecture/Layers/NoiseLayers/NoiseLayer.js","../src/architecture/Layers/CoreLayers/OutputLayer.js","../src/architecture/Layers/CoreLayers/InputLayer.js","../src/architecture/Nodes/PoolNode.js","../src/architecture/Layers/PoolingLayers/PoolingLayer.js","../src/architecture/Layers/PoolingLayers/AvgPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/MinPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/MaxPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/GlobalAvgPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/GlobalMaxPooling1DLayer.js","../src/architecture/Layers/PoolingLayers/GlobalMinPooling1DLayer.js","../src/architecture/Layers/RecurrentLayers/GRULayer.js","../src/architecture/Layers/RecurrentLayers/LSTMLayer.js","../src/architecture/Layers/RecurrentLayers/MemoryLayer.js","../../node_modules/threads/dist-esm/serializers.js","../../node_modules/threads/dist-esm/common.js","../../node_modules/threads/dist-esm/master/get-bundle-url.browser.js","../../node_modules/threads/dist-esm/master/implementation.browser.js","../../node_modules/ms/index.js","../../node_modules/threads/node_modules/debug/src/common.js","../../node_modules/process/browser.js","../../node_modules/threads/node_modules/debug/src/browser.js","../../node_modules/observable-fns/dist.esm/_scheduler.js","../../node_modules/observable-fns/dist.esm/_symbols.js","../../node_modules/observable-fns/dist.esm/observable.js","../../node_modules/observable-fns/dist.esm/unsubscribe.js","../../node_modules/observable-fns/dist.esm/filter.js","../../node_modules/observable-fns/dist.esm/_util.js","../../node_modules/observable-fns/dist.esm/flatMap.js","../../node_modules/observable-fns/dist.esm/interval.js","../../node_modules/observable-fns/dist.esm/map.js","../../node_modules/observable-fns/dist.esm/merge.js","../../node_modules/observable-fns/dist.esm/subject.js","../../node_modules/observable-fns/dist.esm/multicast.js","../../node_modules/observable-fns/dist.esm/scan.js","../../node_modules/observable-fns/dist.esm/index.js","../../node_modules/threads/dist-esm/ponyfills.js","../../node_modules/threads/dist-esm/master/pool-types.js","../../node_modules/threads/dist-esm/symbols.js","../../node_modules/threads/dist-esm/master/thread.js","../../node_modules/threads/dist-esm/master/pool.js","../../node_modules/threads/dist-esm/promise.js","../../node_modules/threads/dist-esm/types/master.js","../../node_modules/threads/dist-esm/observable-promise.js","../../node_modules/threads/dist-esm/transferable.js","../../node_modules/threads/dist-esm/types/messages.js","../../node_modules/threads/dist-esm/master/invocation-proxy.js","../../node_modules/threads/dist-esm/master/spawn.js","../../node_modules/threads/dist-esm/master/index.js","../../node_modules/symbol-observable/es/ponyfill.js","../../node_modules/symbol-observable/es/index.js","../../node_modules/is-observable/index.js","../../node_modules/threads/dist-esm/worker/implementation.browser.js","../../node_modules/threads/dist-esm/worker/index.js","../../node_modules/threads/dist-esm/index.js","../../node_modules/threads/dist/serializers.js","../../node_modules/threads/dist/common.js","../../node_modules/threads/dist/master/get-bundle-url.browser.js","../../node_modules/threads/dist/master/implementation.browser.js","../../node_modules/threads/dist/ponyfills.js","../../node_modules/threads/dist/master/pool-types.js","../../node_modules/threads/dist/symbols.js","../../node_modules/threads/dist/master/thread.js","../../node_modules/threads/dist/master/pool.js","../../node_modules/threads/dist/promise.js","../../node_modules/threads/dist/types/master.js","../../node_modules/threads/dist/observable-promise.js","../../node_modules/threads/dist/transferable.js","../../node_modules/threads/dist/types/messages.js","../../node_modules/threads/dist/master/invocation-proxy.js","../../node_modules/threads/dist/master/spawn.js","../../node_modules/threads/dist/master/index.js","../../node_modules/threads/dist/worker/implementation.browser.js","../../node_modules/threads/dist/worker/index.js","../../node_modules/threads/dist/index.js","../../node_modules/threads/dist/master/register.js","../../node_modules/threads/register.js","../src/methods/Loss.js","../src/methods/Rate.js","../src/methods/Selection.js","../src/NEAT.js","../src/architecture/Network.js","../src/architecture/Architect.js","index.js"],"names":["Object","defineProperty","exports","value","ActivationType","ConnectionType","NoiseNodeType","PoolNodeType","NodeType","MISHActivation","SELUActivation","InverseActivation","AbsoluteActivation","HardTanhActivation","BipolarSigmoidActivation","BipolarActivation","BentIdentityActivation","GaussianActivation","SinusoidActivation","SoftSignActivation","RELUActivation","StepActivation","IdentityActivation","TanhActivation","LogisticActivation","Activation","ALL_ACTIVATIONS","ActivationType_1","require","type","NO_ACTIVATION","getActivation","activationType","ReferenceError","prototype","calc","x","derivative","Math","exp","tanh","abs","sin","cos","sqrt","max","min","alpha","scale","ex","w","d","log","generateGaussian","avg","sum","minValueIndex","maxValueIndex","shuffle","getOrDefault","removeFromArray","randBoolean","randDouble","randInt","pickRandom","arr","length","RangeError","floor","random","elem","index","indexOf","splice","defaultValue","array","counter","temp","maxValue","Infinity","_i","array_1","i","minValue","array_2","array_3","mean","deviation","numSamples","__extends","extendStatics","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","create","SwapNodesMutation","SubBackConnectionMutation","AddBackConnectionMutation","SubSelfConnectionMutation","AddSelfConnectionMutation","SubGateMutation","AddGateMutation","ModActivationMutation","ModBiasMutation","ModWeightMutation","SubConnectionMutation","AddConnectionMutation","SubNodeMutation","AddNodeMutation","Mutation","ONLY_STRUCTURE","NO_STRUCTURE_MUTATIONS","FEEDFORWARD_MUTATIONS","ALL_MUTATIONS","Node_1","NodeType_1","Utils_1","_super","randomActivation","_this","call","mutate","network","options","undefined","maxNodes","nodes","node","Node","HIDDEN","mutateActivation","connection","connections","from","to","disconnect","minBound","inputSize","newConnection1","connect","newConnection2","weight","gateNode","addGate","keepGates","possible","filter","isHiddenNode","removeNode","apply","arguments","maxConnections","outputSize","j","isProjectingTo","push","pair","conn","outgoing","incoming","randomConnection","isInputNode","mutateBias","mutateOutput","allowedActivations","selfConnection","maxGates","gates","removeGate","node1_1","node2","biasTemp","bias","squashTemp","squash","Connection","gain","eligibility","deltaWeightsPrevious","deltaWeightsTotal","xTraceNodes","xTraceValues","innovationID","a","toJSON","fromIndex","toIndex","gateNodeIndex","Activation_1","Mutation_1","Connection_1","activation","derivativeState","state","old","mask","deltaBiasPrevious","deltaBiasTotal","gated","errorResponsibility","errorProjected","errorGated","NaN","fromJSON","json","_a","_b","_c","_d","clear","method","newActivationType","isProjectedBy","map","includes","target","twoSided","Error","propagate","momentum","rate","update","Number","isFinite","influence","_e","gradient","activate","input","trace","forEach","nodes_1","influences_1","INPUT","isOutputNode","OUTPUT","setBias","setActivationType","GatingType","Layer","ConnectionType_1","GatingType_1","inputNodes","Set","outputNodes","connectionType","ALL_TO_ALL","NO_CONNECTION","fromNodes","toNodes","fromNode","toNode","ONE_TO_ONE","POOLING","ratio_1","gate","gateType","gatedConnections","_loop_1","SELF","_loop_2","DenseLayer","Layer_1","add","connectionTypeisAllowed","getDefaultIncomingConnectionType","ConstantNode","DropoutNode","ConstantNode_1","probability","droppedOut","incomingConnection","connectionsStates","assign","DropoutLayer","DropoutNode_1","NoiseNode","noiseType","GAUSSIAN_NOISE","incomingStates","gaussian","NoiseLayer","NoiseNode_1","OutputLayer","InputLayer","NoiseLayer_1","noise","noiseLayer","PoolNode","poolingType","MAX_POOLING","receivingIndex","poolType","AVG_POOLING","MIN_POOLING","PoolingLayer","AvgPooling1DLayer","PoolNode_1","PoolingLayer_1","MinPooling1DLayer","MaxPooling1DLayer","GlobalAvgPooling1DLayer","AvgPooling1DLayer_1","GlobalMaxPooling1DLayer","MaxPooling1DLayer_1","GlobalMinPooling1DLayer","MinPooling1DLayer_1","GRULayer","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","updateGate","inverseUpdateGate","resetGate","memoryCell","previousOutput","reset","inverseUpdate","LSTMLayer","inputGate","forgetGate","outputGate","forgetGateConnections","outputGateConnections","inputGateConnections","MemoryLayer","prevNodes","memorySize","block","reverse","extendSerializer","extend","implementation","fallbackDeserializer","deserialize","bind","fallbackSerializer","serialize","message","DefaultErrorSerializer","name","stack","error","__error_marker","isSerializedError","thing","DefaultSerializer","registeredSerializer","registerSerializer","serializer","bundleURL","getBundleURLCached","getBundleURL","err","matches","match","getBaseURL","url","replace","defaultPoolSize","navigator","hardwareConcurrency","isAbsoluteURL","test","createSourceBlobURL","code","blob","Blob","URL","createObjectURL","selectWorkerImplementation","Worker","_baseURL","JSON","stringify","cachedSetTimeout","cachedClearTimeout","process","module","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","Item","noop","nextTick","args","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","useColors","window","__nwjs","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","RegExp","$1","formatArgs","namespace","humanize","diff","c","color","lastC","save","namespaces","storage","setItem","removeItem","load","r","getItem","localstorage","localStorage","colors","formatters","v","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","AsyncSerialScheduler","observer","_baseObserver","_pendingPromises","complete","all","catch","schedule","task","prevPromisesCompletion","values","promise","delete","hasSymbols","Symbol","hasSymbol","Boolean","getSymbol","registerObservableSymbol","observable","asyncIterator","for","Observable","SymbolIterator","SymbolObservable","SymbolSpecies","getMethod","obj","key","TypeError","getSpecies","ctor","isObservable","hostReportError","enqueue","fn","cleanupSubscription","subscription","cleanup","_cleanup","unsubscribe","closeSubscription","_observer","_queue","_state","flushSubscription","item","notifySubscription","m","onNotify","Subscription","subscriber","subscriptionObserver","SubscriptionObserver","closed","_subscription","_subscriber","subscribe","nextOrObserver","onError","onComplete","pipe","first","mappers","intermediate","mapper","tap","tapObserver","start","propagatedValue","reduce","seed","C","hasSeed","hasValue","acc","sources","startNext","flatMap","subscriptions","outer","normalizedValue","inner","innerValue","completeIfDone","s","observableMethod","iteratorMethod","isArray","of","items","symbol","configurable","scheduler","isAsyncIterator","isIterator","iterator","__asyncValues","o","__values","verb","n","settle","e_1","mapped","mapped_1_1","mapped_1","element","e_1_1","return","output","interval","period","handle","setInterval","clearInterval","merge","observables","completed","unsubscribeAll","MulticastSubject","_observers","multicast","coldObservable","subject","Subject","sourceSubscription","subscriberCount","scan","accumulator","accumulated","prevAcc","allSettled","onFulfill","status","onReject","reason","itemPromise","PoolEventType","$errors","$events","$terminate","$transferable","$worker","fail","Thread","errors","thread","events","terminate","adopt","nextPoolID","createArray","size","delay","ms","flattened","slugify","text","trim","spawnWorkers","spawnWorker","count","init","runningTasks","WorkerPool","optionsOrSize","eventSubject","initErrors","isClosing","nextTaskID","taskQueue","debug","String","workers","eventObservable","worker","initialized","findIdlingWorker","concurrency","find","runPoolTask","workerID","id","taskStart","taskID","returnValue","taskCompleted","taskFailed","runPromise","someRunPromise","scheduleWork","availableWorker","nextTask","shift","taskQueueDrained","taskCompletion","eventSubscription","event","terminated","settled","allowResolvingImmediately","getCurrentlyRunningTasks","taskFailures","failureSubscription","settlementPromise","earlyExitPromise","race","taskFunction","maxQueuedJobs","taskCompletionDotThen","cancel","someTask","taskCanceled","taskQueued","force","remainingQueue","PoolConstructor","EventType","Pool","doNothing","createPromiseWithResolver","alreadyResolved","resolvedTo","resolver","WorkerEventType","returnInput","runDeferred","isThenable","ObservablePromise","originalObserver","self","onCompletion","onNext","initHasRun","fulfillmentCallbacks","rejectionCallbacks","firstValueSet","firstValue","rejection","onRejected","onFulfilled","onFulfilledRaw","onRejectedRaw","onRejectedCalled","rejectionCallback","anotherError","finally","onCompleted","handler","isTransferable","isTransferDescriptor","Transfer","payload","transferables","send","MasterMessageType","WorkerMessageType","debugMessages","nextJobUID","dedupe","isJobErrorMessage","data","isJobResultMessage","isJobStartMessage","running","createObservableForJob","jobUID","asyncType","messageHandler","uid","resultType","removeEventListener","addEventListener","prepareArguments","rawArgs","arg","createProxyFunction","runMessage","postMessage","createProxyModule","methodNames","proxy","methodName","debugSpawn","debugThreadUtils","isInitMessage","isUncaughtErrorMessage","initMessageTimeout","withTimeout","timeoutInMs","errorMessage","timeoutHandle","receiveInitMessage","createEventObservable","workerTermination","messageEvent","workerEvent","rejectionHandler","errorEvent","internalError","terminationEvent","termination","createTerminator","setPrivateThreadProps","raw","workerEvents","workerErrors","spawn","initMessage","exposed","methods","symbolObservablePonyfill","root","global","Function","symbolObservable","default","isWorkerRuntime","postMessageToMaster","transferList","subscribeToMasterMessages","onMessage","exposeCalled","isMasterJobRunMessage","isZenObservable","deconstructTransfer","postFunctionInitMessage","postModuleInitMessage","postJobErrorMessage","rawError","postJobResultMessage","resultValue","resultMessage","postJobStartMessage","startMessage","postUncaughtErrorMessage","uncaughtError","subError","runFunction","syncResult","expose","Implementation","messageData","keys","__importDefault","mod","__esModule","debug_1","observable_fns_1","common_1","promise_1","symbols_1","master_1","invocation_proxy_1","HINGELoss","MSLELoss","WAPELoss","MAPELoss","MAELoss","BinaryLoss","MBELoss","MSELoss","CrossEntropyLoss","Loss","ALL_LOSSES","targets","outputs","pow","round","InverseRate","ExponentialRate","StepRate","FixedRate","Rate","baseRate","iteration","gamma","stepSize","power","TournamentSelection","PowerSelection","FitnessProportionateSelection","Selection","select","population","totalFitness","minimalFitness","population_1","genome","score","population_2","individuals","sort","__generator","body","_","label","sent","t","trys","ops","f","y","g","op","pop","NEAT","Network_1","Selection_1","fitnessFunction","dataset","generation","equal","populationSize","elitism","provenance","mutationRate","mutationAmount","selection","mutations","activations","template","Network","copy","filterGenome","pickGenome","adjustGenome","mutateRandom","allowed","evolve","elitists","newPopulation","fittest","evaluate","fill","getOffspring","parent1","parent2","crossOver","getFittest","getAverage","val","threads_1","dist_1","Loss_1","Rate_1","NEAT_1","nodeJSON","jsonConnection","network1","network2","offspring","score1","score2","offspringSize","chosenNode","chosenNodeType","sourceNetwork","inputNumber","outputNumber","newNode","n1connections","n2connections","keys1","keys2","connectionJSON","dropoutRate","inputs","allowedMethods","train","iterations","loss","dropout","batchSize","ratePolicy","Date","now","trainingSetSize","trainingSet","testSet","crossValidateTestSize","ceil","slice","currentTrainingRate","iterationCount","trainError","trainEpoch","function","time","trainingRate","errorSum","correctOutput","dataset_1","entry","connJSON","targetError","workerPool","serializedDataSet_1","neat","bestFitness","bestGenome","fitness","growth","threads","Architect","InputLayer_1","OutputLayer_1","layers","addLayer","layer","incomingConnectionType","buildModel","DenseLayer_1","enumerable","get","DropoutLayer_1","GlobalAvgPooling1DLayer_1","GlobalMaxPooling1DLayer_1","GlobalMinPooling1DLayer_1","GRULayer_1","LSTMLayer_1","MemoryLayer_1","Architect_1"],"mappings":"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","file":"index.browser.min.js","sourceRoot":"..\\..\\build\\scripts","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ActivationType = void 0;\r\n/**\r\n * The activation type.\r\n */\r\nvar ActivationType;\r\n(function (ActivationType) {\r\n    /**\r\n     * No activation used for exceptions.\r\n     */\r\n    ActivationType[ActivationType[\"NO_ACTIVATION\"] = 0] = \"NO_ACTIVATION\";\r\n    /**\r\n     * Logistic activation.\r\n     */\r\n    ActivationType[ActivationType[\"LogisticActivation\"] = 1] = \"LogisticActivation\";\r\n    /**\r\n     * Tanh activation.\r\n     */\r\n    ActivationType[ActivationType[\"TanhActivation\"] = 2] = \"TanhActivation\";\r\n    /**\r\n     * Identity activation.\r\n     */\r\n    ActivationType[ActivationType[\"IdentityActivation\"] = 3] = \"IdentityActivation\";\r\n    /**\r\n     * Step activation.\r\n     */\r\n    ActivationType[ActivationType[\"StepActivation\"] = 4] = \"StepActivation\";\r\n    /**\r\n     * RELU activation.\r\n     */\r\n    ActivationType[ActivationType[\"RELUActivation\"] = 5] = \"RELUActivation\";\r\n    /**\r\n     * SoftSign activation.\r\n     */\r\n    ActivationType[ActivationType[\"SoftSignActivation\"] = 6] = \"SoftSignActivation\";\r\n    /**\r\n     * Sinusoid activation.\r\n     */\r\n    ActivationType[ActivationType[\"SinusoidActivation\"] = 7] = \"SinusoidActivation\";\r\n    /**\r\n     * Gaussian activation.\r\n     */\r\n    ActivationType[ActivationType[\"GaussianActivation\"] = 8] = \"GaussianActivation\";\r\n    /**\r\n     * BentIdentity activation.\r\n     */\r\n    ActivationType[ActivationType[\"BentIdentityActivation\"] = 9] = \"BentIdentityActivation\";\r\n    /**\r\n     * Bipolar activation.\r\n     */\r\n    ActivationType[ActivationType[\"BipolarActivation\"] = 10] = \"BipolarActivation\";\r\n    /**\r\n     * BipolarSigmoid activation.\r\n     */\r\n    ActivationType[ActivationType[\"BipolarSigmoidActivation\"] = 11] = \"BipolarSigmoidActivation\";\r\n    /**\r\n     * HardTanh activation.\r\n     */\r\n    ActivationType[ActivationType[\"HardTanhActivation\"] = 12] = \"HardTanhActivation\";\r\n    /**\r\n     * Absolute activation.\r\n     */\r\n    ActivationType[ActivationType[\"AbsoluteActivation\"] = 13] = \"AbsoluteActivation\";\r\n    /**\r\n     * Inverse activation.\r\n     */\r\n    ActivationType[ActivationType[\"InverseActivation\"] = 14] = \"InverseActivation\";\r\n    /**\r\n     * SELU activation.\r\n     */\r\n    ActivationType[ActivationType[\"SELUActivation\"] = 15] = \"SELUActivation\";\r\n    /**\r\n     * MISH activation.\r\n     */\r\n    ActivationType[ActivationType[\"MISHActivation\"] = 16] = \"MISHActivation\";\r\n})(ActivationType = exports.ActivationType || (exports.ActivationType = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ConnectionType = void 0;\r\n/**\r\n * The type of a connection.\r\n */\r\nvar ConnectionType;\r\n(function (ConnectionType) {\r\n    /**\r\n     * No connection used for exceptions.\r\n     */\r\n    ConnectionType[ConnectionType[\"NO_CONNECTION\"] = 0] = \"NO_CONNECTION\";\r\n    /**\r\n     * Connect all input to all output nodes\r\n     */\r\n    ConnectionType[ConnectionType[\"ALL_TO_ALL\"] = 1] = \"ALL_TO_ALL\";\r\n    /**\r\n     * Connect one input to one output node\r\n     */\r\n    ConnectionType[ConnectionType[\"ONE_TO_ONE\"] = 2] = \"ONE_TO_ONE\";\r\n    /**\r\n     * Connect with pooling\r\n     */\r\n    ConnectionType[ConnectionType[\"POOLING\"] = 3] = \"POOLING\";\r\n})(ConnectionType = exports.ConnectionType || (exports.ConnectionType = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NoiseNodeType = exports.PoolNodeType = exports.NodeType = void 0;\r\n/**\r\n * The type of node.\r\n */\r\nvar NodeType;\r\n(function (NodeType) {\r\n    /**\r\n     * Node is an input node.\r\n     */\r\n    NodeType[NodeType[\"INPUT\"] = 0] = \"INPUT\";\r\n    /**\r\n     * Node is a hidden node.\r\n     */\r\n    NodeType[NodeType[\"HIDDEN\"] = 1] = \"HIDDEN\";\r\n    /**\r\n     * Node is a output node.\r\n     */\r\n    NodeType[NodeType[\"OUTPUT\"] = 2] = \"OUTPUT\";\r\n})(NodeType = exports.NodeType || (exports.NodeType = {}));\r\n/**\r\n * The type of pool node.\r\n */\r\nvar PoolNodeType;\r\n(function (PoolNodeType) {\r\n    /**\r\n     * Maximum pooling node.\r\n     */\r\n    PoolNodeType[PoolNodeType[\"MAX_POOLING\"] = 0] = \"MAX_POOLING\";\r\n    /**\r\n     * Average pooling node.\r\n     */\r\n    PoolNodeType[PoolNodeType[\"AVG_POOLING\"] = 1] = \"AVG_POOLING\";\r\n    /**\r\n     * Minimum pooling node.\r\n     */\r\n    PoolNodeType[PoolNodeType[\"MIN_POOLING\"] = 2] = \"MIN_POOLING\";\r\n})(PoolNodeType = exports.PoolNodeType || (exports.PoolNodeType = {}));\r\n/**\r\n * The type of noise node.\r\n */\r\nvar NoiseNodeType;\r\n(function (NoiseNodeType) {\r\n    /**\r\n     * Gaussian noise node\r\n     */\r\n    NoiseNodeType[NoiseNodeType[\"GAUSSIAN_NOISE\"] = 0] = \"GAUSSIAN_NOISE\";\r\n})(NoiseNodeType = exports.NoiseNodeType || (exports.NoiseNodeType = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MISHActivation = exports.SELUActivation = exports.InverseActivation = exports.AbsoluteActivation = exports.HardTanhActivation = exports.BipolarSigmoidActivation = exports.BipolarActivation = exports.BentIdentityActivation = exports.GaussianActivation = exports.SinusoidActivation = exports.SoftSignActivation = exports.RELUActivation = exports.StepActivation = exports.IdentityActivation = exports.TanhActivation = exports.LogisticActivation = exports.Activation = exports.ALL_ACTIVATIONS = void 0;\r\nvar ActivationType_1 = require(\"../enums/ActivationType\");\r\n/**\r\n * Activation functions\r\n *\r\n * Activation functions determine what activation value neurons should get. Depending on your network's environment, choosing a suitable activation function can have a positive impact on the learning ability of the network.\r\n *\r\n * @see [Activation Function on Wikipedia](https://en.wikipedia.org/wiki/Activation_function)\r\n * @see [Beginners Guide to Activation Functions](https://towardsdatascience.com/secret-sauce-behind-the-beauty-of-deep-learning-beginners-guide-to-activation-functions-a8e23a57d046)\r\n * @see [Understanding activation functions in neural networks](https://medium.com/the-theory-of-everything/understanding-activation-functions-in-neural-networks-9491262884e0)\r\n * @see [List of activation functions in neural networks with pros/cons](https://stats.stackexchange.com/questions/115258/comprehensive-list-of-activation-functions-in-neural-networks-with-pros-cons)\r\n *\r\n */\r\nvar Activation = /** @class */ (function () {\r\n    function Activation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.NO_ACTIVATION;\r\n    }\r\n    /**\r\n     * Converts a ActivationType to Activation, by creating a new object.\r\n     * @param activationType the activation type to create a new object for\r\n     */\r\n    Activation.getActivation = function (activationType) {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        switch (activationType) {\r\n            case ActivationType_1.ActivationType.LogisticActivation:\r\n                return new LogisticActivation();\r\n            case ActivationType_1.ActivationType.TanhActivation:\r\n                return new TanhActivation();\r\n            case ActivationType_1.ActivationType.IdentityActivation:\r\n                return new IdentityActivation();\r\n            case ActivationType_1.ActivationType.StepActivation:\r\n                return new StepActivation();\r\n            case ActivationType_1.ActivationType.RELUActivation:\r\n                return new RELUActivation();\r\n            case ActivationType_1.ActivationType.SoftSignActivation:\r\n                return new SoftSignActivation();\r\n            case ActivationType_1.ActivationType.SinusoidActivation:\r\n                return new LogisticActivation();\r\n            case ActivationType_1.ActivationType.GaussianActivation:\r\n                return new GaussianActivation();\r\n            case ActivationType_1.ActivationType.BentIdentityActivation:\r\n                return new BentIdentityActivation();\r\n            case ActivationType_1.ActivationType.BipolarActivation:\r\n                return new BipolarActivation();\r\n            case ActivationType_1.ActivationType.BipolarSigmoidActivation:\r\n                return new BipolarSigmoidActivation();\r\n            case ActivationType_1.ActivationType.HardTanhActivation:\r\n                return new HardTanhActivation();\r\n            case ActivationType_1.ActivationType.AbsoluteActivation:\r\n                return new AbsoluteActivation();\r\n            case ActivationType_1.ActivationType.InverseActivation:\r\n                return new InverseActivation();\r\n            case ActivationType_1.ActivationType.SELUActivation:\r\n                return new SELUActivation();\r\n            case ActivationType_1.ActivationType.MISHActivation:\r\n                return new MISHActivation();\r\n        }\r\n        throw new ReferenceError(activationType + \" is not the name of any available activations! These are all available activations: \" + ALL_ACTIVATIONS);\r\n    };\r\n    return Activation;\r\n}());\r\nexports.Activation = Activation;\r\n/**\r\n * [Logistic function.](https://en.wikipedia.org/wiki/Logistic_function)\r\n *\r\n * @param x Input value(s) to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar LogisticActivation = /** @class */ (function () {\r\n    function LogisticActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.LogisticActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    LogisticActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return 1 / (1 + Math.exp(-x));\r\n        }\r\n        else {\r\n            return this.calc(x, false) * (1 - this.calc(x, false));\r\n        }\r\n    };\r\n    return LogisticActivation;\r\n}());\r\nexports.LogisticActivation = LogisticActivation;\r\n/**\r\n * [TanH function.](https://en.wikipedia.org/wiki/Hyperbolic_function#Hyperbolic_tangent)\r\n *\r\n * @param x Input value to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar TanhActivation = /** @class */ (function () {\r\n    function TanhActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.TanhActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    TanhActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return Math.tanh(x);\r\n        }\r\n        else {\r\n            return 1 - this.calc(x, false) * this.calc(x, false);\r\n        }\r\n    };\r\n    return TanhActivation;\r\n}());\r\nexports.TanhActivation = TanhActivation;\r\n/**\r\n * [Identity function.](https://en.wikipedia.org/wiki/Identity_function)\r\n *\r\n * Returns input as output, used for [memory neurons](Layer#.Memory).\r\n *\r\n * @param x Input values to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar IdentityActivation = /** @class */ (function () {\r\n    function IdentityActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.IdentityActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    IdentityActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return x;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    return IdentityActivation;\r\n}());\r\nexports.IdentityActivation = IdentityActivation;\r\n/**\r\n * [Step function.](https://en.wikipedia.org/wiki/Heaviside_step_function)\r\n *\r\n * @param x Input values to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar StepActivation = /** @class */ (function () {\r\n    function StepActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.StepActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    StepActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return x < 0 ? 0 : 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    return StepActivation;\r\n}());\r\nexports.StepActivation = StepActivation;\r\n/**\r\n * [ReLU function.]{@link https://en.wikipedia.org/wiki/Rectifier_(neural_networks)}\r\n *\r\n * @param x Input values to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar RELUActivation = /** @class */ (function () {\r\n    function RELUActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.RELUActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    RELUActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return x <= 0 ? 0 : x;\r\n        }\r\n        else {\r\n            return x <= 0 ? 0 : 1;\r\n        }\r\n    };\r\n    return RELUActivation;\r\n}());\r\nexports.RELUActivation = RELUActivation;\r\n/**\r\n * [SoftSign function.](https://en.wikipedia.org/wiki/Activation_function#Comparison_of_activation_functions)\r\n *\r\n * @param x Input values to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar SoftSignActivation = /** @class */ (function () {\r\n    function SoftSignActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.SoftSignActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    SoftSignActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return x / (1 + Math.abs(x));\r\n        }\r\n        else {\r\n            return x / ((1 + Math.abs(x)) * (1 + Math.abs(x)));\r\n        }\r\n    };\r\n    return SoftSignActivation;\r\n}());\r\nexports.SoftSignActivation = SoftSignActivation;\r\n/**\r\n * [Sinusoid function.](https://en.wikipedia.org/wiki/Sine_wave)\r\n *\r\n * @param x Input values to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar SinusoidActivation = /** @class */ (function () {\r\n    function SinusoidActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.SinusoidActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    SinusoidActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return Math.sin(x);\r\n        }\r\n        else {\r\n            return Math.cos(x);\r\n        }\r\n    };\r\n    return SinusoidActivation;\r\n}());\r\nexports.SinusoidActivation = SinusoidActivation;\r\n/**\r\n * [Gaussian function.](https://en.wikipedia.org/wiki/Gaussian_function)\r\n *\r\n * @param x Input values to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar GaussianActivation = /** @class */ (function () {\r\n    function GaussianActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.GaussianActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    GaussianActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return Math.exp(-x * x);\r\n        }\r\n        else {\r\n            return -2 * x * this.calc(x, false);\r\n        }\r\n    };\r\n    return GaussianActivation;\r\n}());\r\nexports.GaussianActivation = GaussianActivation;\r\n/**\r\n * [Bent identity function.](https://en.wikipedia.org/wiki/Activation_function#Comparison_of_activation_functions)\r\n *\r\n * @param x Input values to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar BentIdentityActivation = /** @class */ (function () {\r\n    function BentIdentityActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.BentIdentityActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    BentIdentityActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return (Math.sqrt(x * x + 1) - 1) / 2 + x;\r\n        }\r\n        else {\r\n            return x / (2 * Math.sqrt(x * x + 1)) + 1;\r\n        }\r\n    };\r\n    return BentIdentityActivation;\r\n}());\r\nexports.BentIdentityActivation = BentIdentityActivation;\r\n/**\r\n * [Bipolar function](https://wagenaartje.github.io/neataptic/docs/methods/activation/), if x > 0 then returns 1, otherwise returns -1\r\n *\r\n * @param x Input value to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar BipolarActivation = /** @class */ (function () {\r\n    function BipolarActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.BipolarActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    BipolarActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return x > 0 ? 1 : -1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    return BipolarActivation;\r\n}());\r\nexports.BipolarActivation = BipolarActivation;\r\n/**\r\n * [Bipolar sigmoid function.](https://wagenaartje.github.io/neataptic/docs/methods/activation/)\r\n *\r\n * @param  x Input values to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar BipolarSigmoidActivation = /** @class */ (function () {\r\n    function BipolarSigmoidActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.BipolarSigmoidActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    BipolarSigmoidActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return 2 / (1 + Math.exp(-x)) - 1;\r\n        }\r\n        else {\r\n            return (2 * Math.exp(-x)) / ((1 + Math.exp(-x)) * (1 + Math.exp(-x)));\r\n        }\r\n    };\r\n    return BipolarSigmoidActivation;\r\n}());\r\nexports.BipolarSigmoidActivation = BipolarSigmoidActivation;\r\n/**\r\n * [Hard tanh function.](https://wagenaartje.github.io/neataptic/docs/methods/activation/)\r\n *\r\n * @param x Input values to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar HardTanhActivation = /** @class */ (function () {\r\n    function HardTanhActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.HardTanhActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    HardTanhActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return Math.max(-1, Math.min(1, x));\r\n        }\r\n        else {\r\n            return Math.abs(x) < 1 ? 1 : 0;\r\n        }\r\n    };\r\n    return HardTanhActivation;\r\n}());\r\nexports.HardTanhActivation = HardTanhActivation;\r\n/**\r\n * [Absolute function.](https://wagenaartje.github.io/neataptic/docs/methods/activation/)\r\n *\r\n * Avoid using this activation function on a node with a self connection\r\n *\r\n * @param x Input values to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar AbsoluteActivation = /** @class */ (function () {\r\n    function AbsoluteActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.AbsoluteActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    AbsoluteActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return Math.abs(x);\r\n        }\r\n        else {\r\n            return x < 0 ? -1 : 1;\r\n        }\r\n    };\r\n    return AbsoluteActivation;\r\n}());\r\nexports.AbsoluteActivation = AbsoluteActivation;\r\n/**\r\n * [Inverse function.](https://wagenaartje.github.io/neataptic/docs/methods/activation/)\r\n *\r\n * @param x Input values to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar InverseActivation = /** @class */ (function () {\r\n    function InverseActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.InverseActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    InverseActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return 1 - x;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    };\r\n    return InverseActivation;\r\n}());\r\nexports.InverseActivation = InverseActivation;\r\n/**\r\n * [Scaled exponential linear unit.](https://towardsdatascience.com/selu-make-fnns-great-again-snn-8d61526802a9)\r\n *\r\n * Exponential linear units try to make the mean activations closer to zero which speeds up learning. It has been shown that ELUs can obtain higher classification accuracy than ReLUs. α is a hyper-parameter here and to be tuned and the constraint is α ≥ 0(zero).\r\n *\r\n * @see {@link https://arxiv.org/pdf/1706.02515.pdf|Self-Normalizing Neural Networks}\r\n *\r\n * @param x Input value to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar SELUActivation = /** @class */ (function () {\r\n    function SELUActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.SELUActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    SELUActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        var alpha = 1.6732632423543772848170429916717; // this is bad\r\n        var scale = 1.0507009873554804934193349852946; // this is bad\r\n        if (!derivative) {\r\n            if (x > 0) {\r\n                return x * scale;\r\n            }\r\n            else {\r\n                return alpha * Math.exp(x) - alpha * scale;\r\n            }\r\n        }\r\n        else {\r\n            if (x > 0) {\r\n                return scale;\r\n            }\r\n            else {\r\n                return alpha * Math.exp(x) * scale;\r\n            }\r\n        }\r\n    };\r\n    return SELUActivation;\r\n}());\r\nexports.SELUActivation = SELUActivation;\r\n/**\r\n * MISH: Self Regularized Non-Monotonic Activation Function\r\n *\r\n * @see {@link https://github.com/digantamisra98/Mish Neural Networks}\r\n *\r\n * @param x Input value to activation function\r\n * @param derivative Flag to select derivative function\r\n */\r\nvar MISHActivation = /** @class */ (function () {\r\n    function MISHActivation() {\r\n        /**\r\n         * The type of activation.\r\n         */\r\n        this.type = ActivationType_1.ActivationType.MISHActivation;\r\n    }\r\n    /**\r\n     * Calculates the activation value.\r\n     *\r\n     * @param x the input value\r\n     * @param derivative Use derivative function?\r\n     *\r\n     * @returns the squashed input value\r\n     */\r\n    MISHActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        var ex = Math.exp(x);\r\n        if (derivative) {\r\n            var w = ex * ex * ex + 4 * (ex * ex + x * ex + x + 1) + 6 * ex;\r\n            var d = 2 * ex + ex * ex + 2;\r\n            return ex * w / (d * d);\r\n        }\r\n        else {\r\n            return x * Math.tanh(Math.log(1 + ex));\r\n        }\r\n    };\r\n    return MISHActivation;\r\n}());\r\nexports.MISHActivation = MISHActivation;\r\nvar ALL_ACTIVATIONS = [\r\n    ActivationType_1.ActivationType.LogisticActivation,\r\n    ActivationType_1.ActivationType.TanhActivation,\r\n    ActivationType_1.ActivationType.IdentityActivation,\r\n    ActivationType_1.ActivationType.StepActivation,\r\n    ActivationType_1.ActivationType.RELUActivation,\r\n    ActivationType_1.ActivationType.SoftSignActivation,\r\n    ActivationType_1.ActivationType.SinusoidActivation,\r\n    ActivationType_1.ActivationType.GaussianActivation,\r\n    ActivationType_1.ActivationType.BentIdentityActivation,\r\n    ActivationType_1.ActivationType.BipolarActivation,\r\n    ActivationType_1.ActivationType.BipolarSigmoidActivation,\r\n    ActivationType_1.ActivationType.HardTanhActivation,\r\n    ActivationType_1.ActivationType.AbsoluteActivation,\r\n    ActivationType_1.ActivationType.InverseActivation,\r\n    ActivationType_1.ActivationType.SELUActivation,\r\n    ActivationType_1.ActivationType.MISHActivation\r\n];\r\nexports.ALL_ACTIVATIONS = ALL_ACTIVATIONS;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.generateGaussian = exports.avg = exports.sum = exports.min = exports.minValueIndex = exports.maxValueIndex = exports.max = exports.shuffle = exports.getOrDefault = exports.removeFromArray = exports.randBoolean = exports.randDouble = exports.randInt = exports.pickRandom = void 0;\r\n/**\r\n * Returns an random element from the given array.\r\n *\r\n * @param arr the array to pick from\r\n * @returns the random picked element\r\n */\r\nfunction pickRandom(arr) {\r\n    if (arr.length === 0) {\r\n        throw new RangeError(\"Cannot pick from an empty array\");\r\n    }\r\n    return arr[randInt(0, arr.length)];\r\n}\r\nexports.pickRandom = pickRandom;\r\n/**\r\n * Returns a random integer in the range [min,max)\r\n *\r\n * @param min bound\r\n * @param max bound\r\n * @returns random integer in [min,max)\r\n */\r\nfunction randInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\nexports.randInt = randInt;\r\n/**\r\n * Returns a random double in the range [min,max)\r\n *\r\n * @param min bound\r\n * @param max bound\r\n * @returns random double in [min,max)\r\n */\r\nfunction randDouble(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\nexports.randDouble = randDouble;\r\n/**\r\n * Returns a random boolean\r\n *\r\n * @returns random boolean\r\n */\r\nfunction randBoolean() {\r\n    return Math.random() >= 0.5;\r\n}\r\nexports.randBoolean = randBoolean;\r\n/**\r\n * Removes an element from an array.\r\n *\r\n * @param arr the array\r\n * @param elem the element which will be removed\r\n * @returns false -> element does not exists on array; true -> element removed from array\r\n */\r\nfunction removeFromArray(arr, elem) {\r\n    var index = arr.indexOf(elem);\r\n    if (index === -1) {\r\n        return false;\r\n    }\r\n    else {\r\n        arr.splice(index, 1);\r\n        return true;\r\n    }\r\n}\r\nexports.removeFromArray = removeFromArray;\r\n/**\r\n * Checks a given value. If value is undefined return the default value.\r\n *\r\n * @param value to check\r\n * @param defaultValue to return if value is undefined\r\n * @returns value if defined otherwise defaultValue\r\n */\r\nfunction getOrDefault(value, defaultValue) {\r\n    return value !== null && value !== void 0 ? value : defaultValue;\r\n}\r\nexports.getOrDefault = getOrDefault;\r\n/**\r\n * Shuffles an array\r\n * @param array the array\r\n * @returns the shuffled array\r\n */\r\nfunction shuffle(array) {\r\n    var counter = array.length;\r\n    // While there are elements in the array\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        var index = randInt(0, counter);\r\n        // Decrease counter by 1\r\n        counter--;\r\n        // And swap the last element with it\r\n        var temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n    return array;\r\n}\r\nexports.shuffle = shuffle;\r\n/**\r\n * Finds the maximum value of an number array\r\n *\r\n * @param array\r\n */\r\nfunction max(array) {\r\n    var maxValue = -Infinity;\r\n    for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\r\n        var value = array_1[_i];\r\n        if (value > maxValue) {\r\n            maxValue = value;\r\n        }\r\n    }\r\n    return maxValue;\r\n}\r\nexports.max = max;\r\n/**\r\n * Finds the maximum value index of an number array\r\n *\r\n * @param array\r\n */\r\nfunction maxValueIndex(array) {\r\n    var maxValue = array[0];\r\n    var maxValueIndex = 0;\r\n    for (var i = 0; i < array.length; i++) {\r\n        if (array[i] > maxValue) {\r\n            maxValue = array[i];\r\n            maxValueIndex = i;\r\n        }\r\n    }\r\n    return maxValueIndex;\r\n}\r\nexports.maxValueIndex = maxValueIndex;\r\n/**\r\n * Finds the minimum value index of an number array\r\n *\r\n * @param array\r\n */\r\nfunction minValueIndex(array) {\r\n    var minValue = array[0];\r\n    var minValueIndex = 0;\r\n    for (var i = 0; i < array.length; i++) {\r\n        if (array[i] < minValue) {\r\n            minValue = array[i];\r\n            minValueIndex = i;\r\n        }\r\n    }\r\n    return minValueIndex;\r\n}\r\nexports.minValueIndex = minValueIndex;\r\n/**\r\n * Finds the minimum value of an number array\r\n *\r\n * @param array\r\n */\r\nfunction min(array) {\r\n    var minValue = Infinity;\r\n    for (var _i = 0, array_2 = array; _i < array_2.length; _i++) {\r\n        var value = array_2[_i];\r\n        if (value < minValue) {\r\n            minValue = value;\r\n        }\r\n    }\r\n    return minValue;\r\n}\r\nexports.min = min;\r\n/**\r\n * Calculates the average value of an array\r\n *\r\n * @param array\r\n */\r\nfunction avg(array) {\r\n    return sum(array) / array.length;\r\n}\r\nexports.avg = avg;\r\n/**\r\n * Calculates the sum of all values of an array\r\n *\r\n * @param array\r\n */\r\nfunction sum(array) {\r\n    var sum = 0;\r\n    for (var _i = 0, array_3 = array; _i < array_3.length; _i++) {\r\n        var value = array_3[_i];\r\n        sum += value;\r\n    }\r\n    return sum;\r\n}\r\nexports.sum = sum;\r\n/**\r\n * Generates a random number with the gaussian distribution.\r\n *\r\n * @see https://en.wikipedia.org/wiki/Normal_distribution\r\n *\r\n * @param mean the mean value\r\n * @param deviation the standard deviation\r\n */\r\nfunction generateGaussian(mean, deviation) {\r\n    if (mean === void 0) { mean = 0; }\r\n    if (deviation === void 0) { deviation = 2; }\r\n    var sum = 0;\r\n    var numSamples = 10;\r\n    for (var i = 0; i < numSamples; i++) {\r\n        sum += Math.random();\r\n    }\r\n    return deviation * sum / numSamples + mean - 0.5 * deviation;\r\n}\r\nexports.generateGaussian = generateGaussian;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SwapNodesMutation = exports.SubBackConnectionMutation = exports.AddBackConnectionMutation = exports.SubSelfConnectionMutation = exports.AddSelfConnectionMutation = exports.SubGateMutation = exports.AddGateMutation = exports.ModActivationMutation = exports.ModBiasMutation = exports.ModWeightMutation = exports.SubConnectionMutation = exports.AddConnectionMutation = exports.SubNodeMutation = exports.AddNodeMutation = exports.Mutation = exports.ONLY_STRUCTURE = exports.NO_STRUCTURE_MUTATIONS = exports.FEEDFORWARD_MUTATIONS = exports.ALL_MUTATIONS = void 0;\r\nvar Node_1 = require(\"../architecture/Node\");\r\nvar NodeType_1 = require(\"../enums/NodeType\");\r\nvar Utils_1 = require(\"./Utils\");\r\n/**\r\n *\r\n * Genetic algorithm mutation methods. Creates variations (mutations) in neural networks which are then selected for better performance.\r\n *\r\n * @see {@link https://en.wikipedia.org/wiki/mutation_(genetic_algorithm)|Mutation (genetic algorithms) on Wikipedia}\r\n * @see {@link https://en.wikipedia.org/wiki/Genetic_algorithm#Selection|Selection (genetic algorithms) on Wikipedia}\r\n *\r\n */\r\nvar Mutation = /** @class */ (function () {\r\n    function Mutation() {\r\n    }\r\n    return Mutation;\r\n}());\r\nexports.Mutation = Mutation;\r\n/**\r\n * Add node mutation.\r\n *\r\n * Adds a hidden node to the network.\r\n *\r\n * @prop {boolean} randomActivation=true If enabled, sets a random activation function on the newly created node\r\n */\r\nvar AddNodeMutation = /** @class */ (function (_super) {\r\n    __extends(AddNodeMutation, _super);\r\n    /**\r\n     * Constructs a AddNodeMutation object\r\n     * @param randomActivation Should choose a random activation for a new node?\r\n     */\r\n    function AddNodeMutation(randomActivation) {\r\n        if (randomActivation === void 0) { randomActivation = true; }\r\n        var _this = _super.call(this) || this;\r\n        _this.randomActivation = randomActivation;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Mutates the network.\r\n     *\r\n     * @param network The network which gets mutated\r\n     * @param options\r\n     */\r\n    AddNodeMutation.prototype.mutate = function (network, options) {\r\n        // check if max nodes is already reached\r\n        if (options !== undefined && options.maxNodes !== undefined && network.nodes.length >= options.maxNodes) {\r\n            return;\r\n        }\r\n        // create a new hidden node\r\n        var node = new Node_1.Node(NodeType_1.NodeType.HIDDEN);\r\n        if (this.randomActivation) {\r\n            node.mutateActivation(); // choose random activation\r\n        }\r\n        // take a random connection\r\n        var connection = Utils_1.pickRandom(network.connections);\r\n        var from = connection.from;\r\n        var to = connection.to;\r\n        network.disconnect(from, to); // disconnect it\r\n        // put the node in between the connection\r\n        var minBound = Math.max(network.inputSize, 1 + network.nodes.indexOf(from));\r\n        network.nodes.splice(minBound, 0, node);\r\n        var newConnection1 = network.connect(from, node, 1);\r\n        var newConnection2 = network.connect(node, to, connection.weight);\r\n        if (connection.gateNode != null) {\r\n            // if connection had a gate node\r\n            // choose randomly which new connection should get this gate node\r\n            if (Utils_1.randBoolean()) {\r\n                network.addGate(connection.gateNode, newConnection1);\r\n            }\r\n            else {\r\n                network.addGate(connection.gateNode, newConnection2);\r\n            }\r\n        }\r\n    };\r\n    return AddNodeMutation;\r\n}(Mutation));\r\nexports.AddNodeMutation = AddNodeMutation;\r\n/**\r\n * Sub node mutation.\r\n *\r\n * Removes a random node from the network.\r\n *\r\n * @prop keepGates=true Ensures replacement node has gated connections if the removed node did.\r\n */\r\nvar SubNodeMutation = /** @class */ (function (_super) {\r\n    __extends(SubNodeMutation, _super);\r\n    function SubNodeMutation(keepGates) {\r\n        if (keepGates === void 0) { keepGates = true; }\r\n        var _this = _super.call(this) || this;\r\n        _this.keepGates = keepGates;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Mutates the network.\r\n     *\r\n     * @param network The network which gets mutated\r\n     */\r\n    SubNodeMutation.prototype.mutate = function (network) {\r\n        var possible = network.nodes.filter(function (node) { return node !== undefined && node.isHiddenNode(); }); // hidden nodes\r\n        if (possible.length > 0) {\r\n            network.removeNode(Utils_1.pickRandom(possible), this.keepGates); // remove a random node from the filtered array\r\n        }\r\n    };\r\n    return SubNodeMutation;\r\n}(Mutation));\r\nexports.SubNodeMutation = SubNodeMutation;\r\n/**\r\n * Add connections mutation.\r\n *\r\n * Adds a connection to the network.\r\n */\r\nvar AddConnectionMutation = /** @class */ (function (_super) {\r\n    __extends(AddConnectionMutation, _super);\r\n    function AddConnectionMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Mutates the network.\r\n     *\r\n     * @param network The network which gets mutated\r\n     * @param options\r\n     */\r\n    AddConnectionMutation.prototype.mutate = function (network, options) {\r\n        // check if max connections is already reached\r\n        if (options !== undefined && options.maxConnections !== undefined && network.connections.length >= options.maxConnections) {\r\n            return;\r\n        }\r\n        var possible = [];\r\n        for (var i = 0; i < network.nodes.length - network.outputSize; i++) {\r\n            var from = network.nodes[i];\r\n            for (var j = Math.max(i + 1, network.inputSize); j < network.nodes.length; j++) {\r\n                var to = network.nodes[j];\r\n                if (!from.isProjectingTo(to)) {\r\n                    possible.push([from, to]);\r\n                }\r\n            }\r\n        }\r\n        if (possible.length > 0) {\r\n            var pair = Utils_1.pickRandom(possible);\r\n            network.connect(pair[0], pair[1]);\r\n        }\r\n    };\r\n    return AddConnectionMutation;\r\n}(Mutation));\r\nexports.AddConnectionMutation = AddConnectionMutation;\r\n/**\r\n * Sub connection mutation.\r\n *\r\n * Removes a random connection from the network.\r\n */\r\nvar SubConnectionMutation = /** @class */ (function (_super) {\r\n    __extends(SubConnectionMutation, _super);\r\n    function SubConnectionMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Mutates the network.\r\n     *\r\n     * @param network The network which gets mutated\r\n     */\r\n    SubConnectionMutation.prototype.mutate = function (network) {\r\n        var possible = network.connections\r\n            .filter(function (conn) { return conn.from.outgoing.length > 1; }) // do not deactivate a neuron\r\n            .filter(function (conn) { return conn.to.incoming.length > 1; }) // do not deactivate a neuron\r\n            .filter(function (conn) { return network.nodes.indexOf(conn.to) > network.nodes.indexOf(conn.from); }); // look for forward pointing connections\r\n        if (possible.length > 0) {\r\n            var randomConnection = Utils_1.pickRandom(possible); // pick a random connection from the filtered array\r\n            network.disconnect(randomConnection.from, randomConnection.to); // remove the connection from the network\r\n        }\r\n    };\r\n    return SubConnectionMutation;\r\n}(Mutation));\r\nexports.SubConnectionMutation = SubConnectionMutation;\r\n/**\r\n * Mod weight mutation.\r\n *\r\n * Modifies the weight of a random connection.\r\n *\r\n * @prop {number} min=-1 lower bound for weight modification\r\n * @prop {number} max=1 higher bound for weight modification\r\n */\r\nvar ModWeightMutation = /** @class */ (function (_super) {\r\n    __extends(ModWeightMutation, _super);\r\n    /**\r\n     * Constructs a ModWeightMutation object\r\n     * @param min The minimum weight.\r\n     * @param max The maximum weight.\r\n     */\r\n    function ModWeightMutation(min, max) {\r\n        if (min === void 0) { min = -1; }\r\n        if (max === void 0) { max = 1; }\r\n        var _this = _super.call(this) || this;\r\n        _this.min = min;\r\n        _this.max = max;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Mutates the network.\r\n     *\r\n     * @param network The network which gets mutated\r\n     */\r\n    ModWeightMutation.prototype.mutate = function (network) {\r\n        // pick random connection and mutate it's weight\r\n        Utils_1.pickRandom(network.connections).weight += Utils_1.randDouble(this.min, this.max);\r\n    };\r\n    return ModWeightMutation;\r\n}(Mutation));\r\nexports.ModWeightMutation = ModWeightMutation;\r\n/**\r\n * Mod bias mutation.\r\n *\r\n * Modifies the bias value of a random hidden or output node\r\n *\r\n * @prop {number} min=-1 lower bound for modification of a neuron's bias\r\n * @prop {number} max=1 higher bound for modification of a neuron's bias\r\n */\r\nvar ModBiasMutation = /** @class */ (function (_super) {\r\n    __extends(ModBiasMutation, _super);\r\n    /**\r\n     * Constructs a ModBiasMutation object\r\n     * @param min The minimum bias.\r\n     * @param max The maximum bias.\r\n     */\r\n    function ModBiasMutation(min, max) {\r\n        if (min === void 0) { min = -1; }\r\n        if (max === void 0) { max = 1; }\r\n        var _this = _super.call(this) || this;\r\n        _this.min = min;\r\n        _this.max = max;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Mutates the network.\r\n     *\r\n     * @param network The network which gets mutated\r\n     */\r\n    ModBiasMutation.prototype.mutate = function (network) {\r\n        Utils_1.pickRandom(network.nodes.filter(function (node) { return !node.isInputNode(); })) // pick random hidden or output node\r\n            .mutateBias(this); // mutate it's bias\r\n    };\r\n    return ModBiasMutation;\r\n}(Mutation));\r\nexports.ModBiasMutation = ModBiasMutation;\r\n/**\r\n * Mod activation mutation.\r\n *\r\n * Modifies the activation function of a random node\r\n *\r\n * @prop {boolean} mutateOutput=false Change activation function of network output neurons. Enable this to let the network experiment with its output.\r\n */\r\nvar ModActivationMutation = /** @class */ (function (_super) {\r\n    __extends(ModActivationMutation, _super);\r\n    /**\r\n     * Constructs a ModActivationMutation object\r\n     * @param mutateOutput Can the output be mutated?\r\n     */\r\n    function ModActivationMutation(mutateOutput) {\r\n        if (mutateOutput === void 0) { mutateOutput = false; }\r\n        var _this = _super.call(this) || this;\r\n        _this.mutateOutput = mutateOutput;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Mutates the network.\r\n     *\r\n     * @param network The network which gets mutated\r\n     * @param options\r\n     */\r\n    ModActivationMutation.prototype.mutate = function (network, options) {\r\n        var possible = this.mutateOutput\r\n            ? network.nodes.filter(function (node) { return !node.isInputNode(); }) // hidden and output nodes\r\n            : network.nodes.filter(function (node) { return node.isHiddenNode(); }); // hidden nodes\r\n        if (possible.length > 0) {\r\n            Utils_1.pickRandom(possible).mutateActivation(options === null || options === void 0 ? void 0 : options.allowedActivations); // mutate the activation of the node\r\n        }\r\n    };\r\n    return ModActivationMutation;\r\n}(Mutation));\r\nexports.ModActivationMutation = ModActivationMutation;\r\n/**\r\n * Add self connection.\r\n *\r\n * Adds a connection from a node to itself.\r\n */\r\nvar AddSelfConnectionMutation = /** @class */ (function (_super) {\r\n    __extends(AddSelfConnectionMutation, _super);\r\n    function AddSelfConnectionMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Mutates the network.\r\n     *\r\n     * @param network The network which gets mutated\r\n     */\r\n    AddSelfConnectionMutation.prototype.mutate = function (network) {\r\n        var possible = network.nodes\r\n            .filter(function (node) { return !node.isInputNode(); }) // no input nodes\r\n            .filter(function (node) { return node.selfConnection.weight === 0; }); // only nodes that doesn't have an self connection already\r\n        if (possible.length > 0) {\r\n            var node = Utils_1.pickRandom(possible); // pick a random node from the filtered array\r\n            network.connect(node, node); // connection the node to itself\r\n        }\r\n    };\r\n    return AddSelfConnectionMutation;\r\n}(Mutation));\r\nexports.AddSelfConnectionMutation = AddSelfConnectionMutation;\r\n/**\r\n * Sub self connection.\r\n *\r\n * Removes a connection from a node to itself.\r\n */\r\nvar SubSelfConnectionMutation = /** @class */ (function (_super) {\r\n    __extends(SubSelfConnectionMutation, _super);\r\n    function SubSelfConnectionMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Mutates the network.\r\n     *\r\n     * @param network The network which gets mutated\r\n     */\r\n    SubSelfConnectionMutation.prototype.mutate = function (network) {\r\n        var possible = network.connections.filter(function (conn) { return conn.from === conn.to; });\r\n        if (possible.length > 0) {\r\n            var randomConnection = Utils_1.pickRandom(possible);\r\n            network.disconnect(randomConnection.from, randomConnection.to);\r\n        }\r\n    };\r\n    return SubSelfConnectionMutation;\r\n}(Mutation));\r\nexports.SubSelfConnectionMutation = SubSelfConnectionMutation;\r\n/**\r\n * Add gate mutation.\r\n *\r\n * Adds a gate to the network.\r\n */\r\nvar AddGateMutation = /** @class */ (function (_super) {\r\n    __extends(AddGateMutation, _super);\r\n    function AddGateMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Mutates the network.\r\n     *\r\n     * @param network The network which gets mutated\r\n     * @param options\r\n     */\r\n    AddGateMutation.prototype.mutate = function (network, options) {\r\n        // check if max gates isn't reached already\r\n        if (options !== undefined && options.maxGates !== undefined && network.gates.length >= options.maxGates) {\r\n            return;\r\n        }\r\n        // use only connections that aren't already gated\r\n        var possible = network.connections.filter(function (conn) { return conn.gateNode === null; });\r\n        if (possible.length > 0) {\r\n            var node = Utils_1.pickRandom(network.nodes.filter(function (node) { return !node.isInputNode(); })); // hidden or output node\r\n            var connection = Utils_1.pickRandom(possible); // random connection from filtered array\r\n            network.addGate(node, connection); // use the node to gate the connection\r\n        }\r\n    };\r\n    return AddGateMutation;\r\n}(Mutation));\r\nexports.AddGateMutation = AddGateMutation;\r\n/**\r\n * Sub gate mutation.\r\n *\r\n * Removes a gate from the network.\r\n */\r\nvar SubGateMutation = /** @class */ (function (_super) {\r\n    __extends(SubGateMutation, _super);\r\n    function SubGateMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Mutates the network.\r\n     *\r\n     * @param network The network which gets mutated\r\n     */\r\n    SubGateMutation.prototype.mutate = function (network) {\r\n        if (network.gates.length > 0) {\r\n            network.removeGate(Utils_1.pickRandom(network.gates));\r\n        }\r\n    };\r\n    return SubGateMutation;\r\n}(Mutation));\r\nexports.SubGateMutation = SubGateMutation;\r\n/**\r\n * Add back connection mutation.\r\n *\r\n * Adds a backward pointing connection to the network.\r\n */\r\nvar AddBackConnectionMutation = /** @class */ (function (_super) {\r\n    __extends(AddBackConnectionMutation, _super);\r\n    function AddBackConnectionMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Mutates the network.\r\n     *\r\n     * @param network The network which gets mutated\r\n     */\r\n    AddBackConnectionMutation.prototype.mutate = function (network) {\r\n        var possible = [];\r\n        for (var i = network.inputSize; i < network.nodes.length; i++) {\r\n            var from = network.nodes[i];\r\n            for (var j = network.inputSize; j < i; j++) {\r\n                var to = network.nodes[j];\r\n                if (!from.isProjectingTo(to)) {\r\n                    possible.push([from, to]);\r\n                }\r\n            }\r\n        }\r\n        if (possible.length > 0) {\r\n            var pair = Utils_1.pickRandom(possible);\r\n            network.connect(pair[0], pair[1]);\r\n        }\r\n    };\r\n    return AddBackConnectionMutation;\r\n}(Mutation));\r\nexports.AddBackConnectionMutation = AddBackConnectionMutation;\r\n/**\r\n * Sub back connection mutation.\r\n *\r\n * Removes a backward pointing connection to the network.\r\n */\r\nvar SubBackConnectionMutation = /** @class */ (function (_super) {\r\n    __extends(SubBackConnectionMutation, _super);\r\n    function SubBackConnectionMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Mutates the network.\r\n     *\r\n     * @param network The network which gets mutated\r\n     */\r\n    SubBackConnectionMutation.prototype.mutate = function (network) {\r\n        var possible = network.connections\r\n            .filter(function (conn) { return conn.from.outgoing.length > 1; })\r\n            .filter(function (conn) { return conn.to.incoming.length > 1; })\r\n            .filter(function (conn) { return network.nodes.indexOf(conn.from) > network.nodes.indexOf(conn.to); });\r\n        if (possible.length > 0) {\r\n            var randomConnection = Utils_1.pickRandom(possible);\r\n            network.disconnect(randomConnection.from, randomConnection.to);\r\n        }\r\n    };\r\n    return SubBackConnectionMutation;\r\n}(Mutation));\r\nexports.SubBackConnectionMutation = SubBackConnectionMutation;\r\n/**\r\n * Swap nodes mutation.\r\n *\r\n * Swaps the values of two randomly picked nodes.\r\n *\r\n * @prop {boolean} mutateOutput=false Swap bias and activation function of network output neurons too. Disable this to keep output of a neural network normalized.\r\n */\r\nvar SwapNodesMutation = /** @class */ (function (_super) {\r\n    __extends(SwapNodesMutation, _super);\r\n    /**\r\n     * Constructs a SwapNodeMutation object\r\n     * @param mutateOutput Can the output be mutated?\r\n     */\r\n    function SwapNodesMutation(mutateOutput) {\r\n        if (mutateOutput === void 0) { mutateOutput = false; }\r\n        var _this = _super.call(this) || this;\r\n        _this.mutateOutput = mutateOutput;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Mutates the network.\r\n     *\r\n     * @param network The network which gets mutated\r\n     */\r\n    SwapNodesMutation.prototype.mutate = function (network) {\r\n        var possible = this.mutateOutput\r\n            ? network.nodes.filter(function (node) { return node !== undefined && !node.isInputNode(); }) // hidden or output nodes\r\n            : network.nodes.filter(function (node) { return node !== undefined && node.isHiddenNode(); }); // only hidden nodes\r\n        if (possible.length >= 2) {\r\n            // select two different nodes from the filtered array\r\n            var node1_1 = Utils_1.pickRandom(possible);\r\n            var node2 = Utils_1.pickRandom(possible.filter(function (node) { return node !== node1_1; }));\r\n            // change there parameters\r\n            var biasTemp = node1_1.bias;\r\n            var squashTemp = node1_1.squash;\r\n            node1_1.bias = node2.bias;\r\n            node1_1.squash = node2.squash;\r\n            node2.bias = biasTemp;\r\n            node2.squash = squashTemp;\r\n        }\r\n    };\r\n    return SwapNodesMutation;\r\n}(Mutation));\r\nexports.SwapNodesMutation = SwapNodesMutation;\r\n/**\r\n * Array of all mutation methods\r\n */\r\nvar ALL_MUTATIONS = [\r\n    new AddNodeMutation(),\r\n    new SubNodeMutation(),\r\n    new AddConnectionMutation(),\r\n    new SubConnectionMutation(),\r\n    new ModWeightMutation(),\r\n    new ModBiasMutation(),\r\n    new ModActivationMutation(),\r\n    new AddGateMutation(),\r\n    new SubGateMutation(),\r\n    new AddSelfConnectionMutation(),\r\n    new SubSelfConnectionMutation(),\r\n    new AddBackConnectionMutation(),\r\n    new SubBackConnectionMutation(),\r\n    new SwapNodesMutation(),\r\n];\r\nexports.ALL_MUTATIONS = ALL_MUTATIONS;\r\n/**\r\n * Array of all feed forward mutation methods\r\n */\r\nvar FEEDFORWARD_MUTATIONS = [\r\n    new AddNodeMutation(),\r\n    new SubNodeMutation(),\r\n    new AddConnectionMutation(),\r\n    new SubConnectionMutation(),\r\n    new ModWeightMutation(),\r\n    new ModBiasMutation(),\r\n    new ModActivationMutation(),\r\n    new SwapNodesMutation(),\r\n];\r\nexports.FEEDFORWARD_MUTATIONS = FEEDFORWARD_MUTATIONS;\r\nvar NO_STRUCTURE_MUTATIONS = [\r\n    new ModWeightMutation(),\r\n    new ModBiasMutation(),\r\n    new ModActivationMutation(),\r\n];\r\nexports.NO_STRUCTURE_MUTATIONS = NO_STRUCTURE_MUTATIONS;\r\nvar ONLY_STRUCTURE = [\r\n    new AddNodeMutation(),\r\n    new SubNodeMutation(),\r\n    new AddConnectionMutation(),\r\n    new SubConnectionMutation(),\r\n    new AddGateMutation(),\r\n    new SubGateMutation(),\r\n    new AddSelfConnectionMutation(),\r\n    new SubSelfConnectionMutation(),\r\n    new AddBackConnectionMutation(),\r\n    new SubBackConnectionMutation(),\r\n    new SwapNodesMutation(),\r\n];\r\nexports.ONLY_STRUCTURE = ONLY_STRUCTURE;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Connection = void 0;\r\n/**\r\n * A connection instance describes the connection between two nodes.\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    function Connection(from, to, weight, gateNode) {\r\n        this.from = from;\r\n        this.to = to;\r\n        this.weight = weight !== null && weight !== void 0 ? weight : 0;\r\n        this.gain = 1;\r\n        this.eligibility = 0;\r\n        this.deltaWeightsPrevious = 0;\r\n        this.deltaWeightsTotal = 0;\r\n        this.xTraceNodes = [];\r\n        this.xTraceValues = [];\r\n        if (gateNode) {\r\n            this.gateNode = gateNode;\r\n            gateNode.addGate(this);\r\n        }\r\n        else {\r\n            this.gateNode = null;\r\n        }\r\n    }\r\n    /**\r\n     * Returns an innovation ID\r\n     *\r\n     * @see {@link https://en.wikipedia.org/wiki/Pairing_function (Cantor pairing function)|Pairing function (Cantor pairing function)}\r\n     *\r\n     * @param a - A [natural number](https://en.wikipedia.org/wiki/Natural_number), which is an integer greater than or equal to zero\r\n     * @param b - A [natural number](https://en.wikipedia.org/wiki/Natural_number), which is an integer greater than or equal to zero\r\n     *\r\n     * @return An Integer that uniquely represents a pair of Integers\r\n     */\r\n    Connection.innovationID = function (a, b) {\r\n        return 1 / 2 * (a + b) * (a + b + 1) + b;\r\n    };\r\n    /**\r\n     * Returns the connection as a JSON\r\n     *\r\n     * @return Connection as a JSON\r\n     */\r\n    Connection.prototype.toJSON = function () {\r\n        return {\r\n            fromIndex: this.from.index,\r\n            toIndex: this.to.index,\r\n            gateNodeIndex: this.gateNode === null ? null : this.gateNode.index,\r\n            weight: this.weight\r\n        };\r\n    };\r\n    return Connection;\r\n}());\r\nexports.Connection = Connection;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Node = void 0;\r\nvar ActivationType_1 = require(\"../enums/ActivationType\");\r\nvar NodeType_1 = require(\"../enums/NodeType\");\r\nvar Activation_1 = require(\"../methods/Activation\");\r\nvar Mutation_1 = require(\"../methods/Mutation\");\r\nvar Utils_1 = require(\"../methods/Utils\");\r\nvar Connection_1 = require(\"./Connection\");\r\n/**\r\n * Creates a new neuron/node\r\n *\r\n * Neurons are the basic unit of the neural network. They can be connected together, or used to gate connections between other neurons. A Neuron can perform basically 4 operations: form connections, gate connections, activate and [propagate](https://www.youtube.com/watch?v=Ilg3gGewQ5U).\r\n *\r\n * For more information check:\r\n * - [here](https://becominghuman.ai/what-is-an-artificial-neuron-8b2e421ce42e)\r\n * - [here](https://en.wikipedia.org/wiki/Artificial_neuron)\r\n * - [here](https://wagenaartje.github.io/neataptic/docs/architecture/node/)\r\n * - [here](https://github.com/cazala/synaptic/wiki/Neural-Networks-101)\r\n * - [here](https://keras.io/backend/#bias_add)\r\n *\r\n * @prop {number} previousDeltaBias\r\n * @prop {number} totalDeltaBias\r\n * @prop {number} error.responsibility\r\n * @prop {number} error.projected\r\n * @prop {number} error.gated\r\n *\r\n */\r\nvar Node = /** @class */ (function () {\r\n    function Node(type) {\r\n        if (type === void 0) { type = NodeType_1.NodeType.HIDDEN; }\r\n        this.type = type;\r\n        this.bias = Utils_1.randDouble(-1, 1);\r\n        this.squash = new Activation_1.LogisticActivation();\r\n        this.activation = 0;\r\n        this.derivativeState = 1;\r\n        this.state = 0;\r\n        this.old = 0;\r\n        this.mask = 1;\r\n        this.deltaBiasPrevious = 0;\r\n        this.deltaBiasTotal = 0;\r\n        this.incoming = [];\r\n        this.outgoing = [];\r\n        this.gated = [];\r\n        this.selfConnection = new Connection_1.Connection(this, this, 0);\r\n        this.errorResponsibility = 0;\r\n        this.errorProjected = 0;\r\n        this.errorGated = 0;\r\n        this.index = NaN;\r\n    }\r\n    /**\r\n     * Convert a json object to a node\r\n     *\r\n     * @param json A node represented as a JSON object\r\n     *\r\n     * @returns itself\r\n     *\r\n     */\r\n    Node.prototype.fromJSON = function (json) {\r\n        var _a, _b, _c, _d;\r\n        this.bias = (_a = json.bias) !== null && _a !== void 0 ? _a : Utils_1.randDouble(-1, 1);\r\n        this.type = json.type;\r\n        this.squash = Activation_1.Activation.getActivation((_b = json.squash) !== null && _b !== void 0 ? _b : ActivationType_1.ActivationType.LogisticActivation);\r\n        this.mask = (_c = json.mask) !== null && _c !== void 0 ? _c : 1;\r\n        this.index = (_d = json.index) !== null && _d !== void 0 ? _d : NaN;\r\n        return this;\r\n    };\r\n    /**\r\n     * Clears this node's state information - _i.e. resets node and its connections to \"factory settings\"_\r\n     *\r\n     * `node.clear()` is useful for predicting time series.\r\n     *\r\n     */\r\n    Node.prototype.clear = function () {\r\n        for (var _i = 0, _a = this.incoming; _i < _a.length; _i++) {\r\n            var connection = _a[_i];\r\n            connection.eligibility = 0;\r\n            connection.xTraceNodes = [];\r\n            connection.xTraceValues = [];\r\n        }\r\n        for (var _b = 0, _c = this.gated; _b < _c.length; _b++) {\r\n            var connection = _c[_b];\r\n            connection.gain = 0;\r\n        }\r\n        this.errorResponsibility = this.errorProjected = this.errorGated = 0;\r\n        this.old = this.state = this.activation = 0;\r\n    };\r\n    /**\r\n     * Mutates the node's bias\r\n     *\r\n     * @param method The method is needed for the min and max value of the node's bias otherwise a range of [-1,1] is chosen\r\n     *\r\n     */\r\n    Node.prototype.mutateBias = function (method) {\r\n        if (method === void 0) { method = new Mutation_1.ModBiasMutation(); }\r\n        this.bias += Utils_1.randDouble(method.min, method.max); // add a random value in range [min,max)\r\n    };\r\n    /**\r\n     * Mutates the node's activation function\r\n     */\r\n    Node.prototype.mutateActivation = function (allowedActivations) {\r\n        var _this = this;\r\n        if (allowedActivations === void 0) { allowedActivations = Activation_1.ALL_ACTIVATIONS; }\r\n        // pick a random activation from allowed activations except the current activation\r\n        var possible = allowedActivations.filter(function (activation) { return activation !== _this.squash.type; });\r\n        if (possible.length > 0) {\r\n            var newActivationType = Utils_1.pickRandom(possible);\r\n            this.squash = Activation_1.Activation.getActivation(newActivationType);\r\n        }\r\n    };\r\n    /**\r\n     * Checks if the given node(s) are have outgoing connections to this node\r\n     *\r\n     * @param node Checks if `node(s)` have outgoing connections into this node\r\n     *\r\n     * @return Returns true, if every node(s) has an outgoing connection into this node\r\n     */\r\n    Node.prototype.isProjectedBy = function (node) {\r\n        if (node === this) { // self connection\r\n            return this.selfConnection.weight !== 0; // is projected, if weight of self connection is unequal 0\r\n        }\r\n        else {\r\n            return this.incoming.map(function (conn) { return conn.from; }).includes(node); // check every incoming connection for node\r\n        }\r\n    };\r\n    /**\r\n     * Checks if this node has an outgoing connection(s) into the given node(s)\r\n     *\r\n     * @param node Checks if this node has outgoing connection(s) into `node(s)`\r\n     *\r\n     * @returns Returns true, if this node has an outgoing connection into every node(s)\r\n     */\r\n    Node.prototype.isProjectingTo = function (node) {\r\n        if (node === this) { // self connection\r\n            return this.selfConnection.weight !== 0; // is projected, if weight of self connection is unequal 0\r\n        }\r\n        else {\r\n            return this.outgoing.map(function (conn) { return conn.to; }).includes(node); // check every outgoing connection for node\r\n        }\r\n    };\r\n    /**\r\n     * This node gates (influences) the given connection\r\n     *\r\n     * @param connection Connection to be gated (influenced) by a neuron\r\n     */\r\n    Node.prototype.addGate = function (connection) {\r\n        this.gated.push(connection);\r\n        connection.gateNode = this;\r\n    };\r\n    /**\r\n     * Stops this node from gating (manipulating) the given connection(s)\r\n     *\r\n     * @param connection Connections to remove gate - _i.e. remove this node from_\r\n     */\r\n    Node.prototype.removeGate = function (connection) {\r\n        Utils_1.removeFromArray(this.gated, connection);\r\n        connection.gateNode = null;\r\n        connection.gain = 1;\r\n    };\r\n    /**\r\n     * Connects this node to the given node(s)\r\n     *\r\n     * @param target Node(s) to project connection(s) to\r\n     * @param weight Initial connection(s) [weight](https://en.wikipedia.org/wiki/Synaptic_weight)\r\n     * @param twoSided If `true` connect nodes to each other\r\n     */\r\n    Node.prototype.connect = function (target, weight, twoSided) {\r\n        if (weight === void 0) { weight = 1; }\r\n        if (twoSided === void 0) { twoSided = false; }\r\n        if (target === this) { // self connection\r\n            this.selfConnection.weight = weight;\r\n            return this.selfConnection;\r\n        }\r\n        else if (this.isProjectingTo(target)) {\r\n            throw new ReferenceError(); // already connected\r\n        }\r\n        else {\r\n            var connection = new Connection_1.Connection(this, target, weight); // create new connection\r\n            // add it to the arrays\r\n            this.outgoing.push(connection);\r\n            target.incoming.push(connection);\r\n            if (twoSided) {\r\n                target.connect(this); // connect in the other direction\r\n            }\r\n            return connection;\r\n        }\r\n    };\r\n    /**\r\n     * Disconnects this node from the given node(s)\r\n     *\r\n     * @param node Node(s) to remove connection(s) to\r\n     * @param twoSided=false If `true` disconnects nodes from each other (i.e. both sides)\r\n     */\r\n    Node.prototype.disconnect = function (node, twoSided) {\r\n        if (twoSided === void 0) { twoSided = false; }\r\n        if (node === this) { // self connection\r\n            this.selfConnection.weight = 0; // set weight to 0\r\n            return this.selfConnection;\r\n        }\r\n        var connections = this.outgoing.filter(function (conn) { return conn.to === node; });\r\n        if (connections.length === 0) {\r\n            throw new Error(\"No Connection found\");\r\n        }\r\n        var connection = connections[0];\r\n        // remove it from the arrays\r\n        Utils_1.removeFromArray(this.outgoing, connection);\r\n        Utils_1.removeFromArray(connection.to.incoming, connection);\r\n        if (connection.gateNode !== undefined && connection.gateNode != null) {\r\n            connection.gateNode.removeGate(connection); // if connection is gated -> remove gate\r\n        }\r\n        if (twoSided) {\r\n            node.disconnect(this); // disconnect the other direction\r\n        }\r\n        return connection;\r\n    };\r\n    /**\r\n     * Backpropagate the error (a.k.a. learn).\r\n     *\r\n     * After an activation, you can teach the node what should have been the correct output (a.k.a. train). This is done by backpropagating. [Momentum](https://www.willamette.edu/~gorr/classes/cs449/momrate.html) adds a fraction of the previous weight update to the current one. When the gradient keeps pointing in the same direction, this will increase the size of the steps taken towards the minimum.\r\n     *\r\n     * If you combine a high learning rate with a lot of momentum, you will rush past the minimum (of the error function) with huge steps. It is therefore often necessary to reduce the global learning rate µ when using a lot of momentum (m close to 1).\r\n     *\r\n     * @param target The target value (i.e. \"the value the network SHOULD have given\")\r\n     * @param options More options for propagation\r\n     *\r\n     * @see [Regularization Neataptic](https://wagenaartje.github.io/neataptic/docs/methods/regularization/)\r\n     * @see [What is backpropagation | YouTube](https://www.youtube.com/watch?v=Ilg3gGewQ5U)\r\n     */\r\n    Node.prototype.propagate = function (target, options) {\r\n        if (options === void 0) { options = {}; }\r\n        options.momentum = Utils_1.getOrDefault(options.momentum, 0);\r\n        options.rate = Utils_1.getOrDefault(options.rate, 0.3);\r\n        options.update = Utils_1.getOrDefault(options.update, true);\r\n        if (target !== undefined && Number.isFinite(target)) {\r\n            this.errorResponsibility = this.errorProjected = target - this.activation;\r\n        }\r\n        else {\r\n            this.errorProjected = 0;\r\n            for (var _i = 0, _a = this.outgoing; _i < _a.length; _i++) {\r\n                var connection = _a[_i];\r\n                this.errorProjected += connection.to.errorResponsibility * connection.weight * connection.gain;\r\n            }\r\n            this.errorProjected *= this.derivativeState;\r\n            this.errorGated = 0;\r\n            for (var _b = 0, _c = this.gated; _b < _c.length; _b++) { // for all connections gated by this node\r\n                var connection = _c[_b];\r\n                var influence = void 0;\r\n                if (connection.to.selfConnection.gateNode === this) { // self connection is gated with this node\r\n                    influence = connection.to.old + connection.weight * connection.from.activation;\r\n                }\r\n                else {\r\n                    influence = connection.weight * connection.from.activation;\r\n                }\r\n                this.errorGated += connection.to.errorResponsibility * influence;\r\n            }\r\n            this.errorGated *= this.derivativeState;\r\n            this.errorResponsibility = this.errorProjected + this.errorGated;\r\n        }\r\n        for (var _d = 0, _e = this.incoming; _d < _e.length; _d++) {\r\n            var connection = _e[_d];\r\n            // calculate gradient\r\n            var gradient = this.errorProjected * connection.eligibility;\r\n            for (var j = 0; j < connection.xTraceNodes.length; j++) {\r\n                var node = connection.xTraceNodes[j];\r\n                gradient += node.errorResponsibility * connection.xTraceValues[j];\r\n            }\r\n            connection.deltaWeightsTotal += options.rate * gradient * this.mask;\r\n            if (options.update) {\r\n                connection.deltaWeightsTotal += options.momentum * connection.deltaWeightsPrevious;\r\n                connection.weight += connection.deltaWeightsTotal;\r\n                connection.deltaWeightsPrevious = connection.deltaWeightsTotal;\r\n                connection.deltaWeightsTotal = 0;\r\n            }\r\n        }\r\n        this.deltaBiasTotal += options.rate * this.errorResponsibility;\r\n        if (options.update) {\r\n            this.deltaBiasTotal += options.momentum * this.deltaBiasPrevious;\r\n            this.bias += this.deltaBiasTotal;\r\n            this.deltaBiasPrevious = this.deltaBiasTotal;\r\n            this.deltaBiasTotal = 0;\r\n        }\r\n    };\r\n    /**\r\n     * Actives the node.\r\n     *\r\n     * When a neuron activates, it computes its state from all its input connections and 'squashes' it using its activation function, and returns the output (activation).\r\n     *\r\n     * You can also provide the activation (a float between 0 and 1) as a parameter, which is useful for neurons in the input layer.\r\n     *\r\n     * @param [input] Environment signal (i.e. optional numerical value passed to the network as input)  - _should only be passed in input neurons_\r\n     * @param [trace] Controls whether traces are created when activation happens (a trace is meta information left behind for different uses, e.g. backpropagation).\r\n     *\r\n     * @returns A neuron's ['Squashed'](https://medium.com/the-theory-of-everything/understanding-activation-functions-in-neural-networks-9491262884e0) output value\r\n     */\r\n    Node.prototype.activate = function (input, trace) {\r\n        var _this = this;\r\n        if (trace === void 0) { trace = true; }\r\n        if (input !== undefined) {\r\n            return this.activation = input;\r\n        }\r\n        else if (this.isInputNode()) {\r\n            throw new ReferenceError(\"There is no input given to an input node!\");\r\n        }\r\n        if (trace) {\r\n            this.old = this.state;\r\n            this.state = this.selfConnection.gain * this.selfConnection.weight * this.state + this.bias;\r\n            this.incoming.forEach(function (conn) {\r\n                _this.state += conn.from.activation * conn.weight * conn.gain;\r\n            });\r\n            this.activation = this.squash.calc(this.state, false) * this.mask;\r\n            this.derivativeState = this.squash.calc(this.state, true);\r\n            // store traces\r\n            var nodes_1 = [];\r\n            var influences_1 = [];\r\n            // Adjust 'gain' (to gated connections) & Build traces\r\n            this.gated.forEach(function (connection) {\r\n                connection.gain = _this.activation;\r\n                // Build traces\r\n                var index = nodes_1.indexOf(connection.to);\r\n                if (index > -1) { // Node & influence exist\r\n                    influences_1[index] += connection.weight * connection.from.activation;\r\n                }\r\n                else { // Add node & corresponding influence\r\n                    nodes_1.push(connection.to);\r\n                    if (connection.to.selfConnection.gateNode === _this) {\r\n                        influences_1.push(connection.weight * connection.from.activation + connection.to.old);\r\n                    }\r\n                    else {\r\n                        influences_1.push(connection.weight * connection.from.activation);\r\n                    }\r\n                }\r\n            });\r\n            // Forwarding 'xTrace' (to incoming connections)\r\n            for (var _i = 0, _a = this.incoming; _i < _a.length; _i++) {\r\n                var connection = _a[_i];\r\n                connection.eligibility = this.selfConnection.gain * this.selfConnection.weight * connection.eligibility + connection.from.activation * connection.gain;\r\n                for (var i = 0; i < nodes_1.length; i++) {\r\n                    var node = nodes_1[i];\r\n                    var influence = influences_1[i];\r\n                    var index = connection.xTraceNodes.indexOf(node);\r\n                    if (index > -1) {\r\n                        connection.xTraceValues[index] = node.selfConnection.gain * node.selfConnection.weight * connection.xTraceValues[index] + this.derivativeState * connection.eligibility * influence;\r\n                    }\r\n                    else {\r\n                        connection.xTraceNodes.push(node);\r\n                        connection.xTraceValues.push(this.derivativeState * connection.eligibility * influence);\r\n                    }\r\n                }\r\n            }\r\n            return this.activation;\r\n        }\r\n        else {\r\n            if (this.isInputNode())\r\n                return this.activation = 0;\r\n            this.state = this.selfConnection.gain * this.selfConnection.weight * this.state + this.bias;\r\n            for (var _b = 0, _c = this.incoming; _b < _c.length; _b++) {\r\n                var connection = _c[_b];\r\n                this.state += connection.from.activation * connection.weight * connection.gain;\r\n            }\r\n            this.activation = this.squash.calc(this.state, false);\r\n            // Adjust gain\r\n            for (var _d = 0, _e = this.gated; _d < _e.length; _d++) {\r\n                var connection = _e[_d];\r\n                connection.gain = this.activation;\r\n            }\r\n            return this.activation;\r\n        }\r\n    };\r\n    /**\r\n     * Converts the node to a json object that can later be converted back\r\n     *\r\n     * @returns A node representing json object\r\n     */\r\n    Node.prototype.toJSON = function () {\r\n        return {\r\n            bias: this.bias,\r\n            type: this.type,\r\n            squash: this.squash.type,\r\n            mask: this.mask,\r\n            index: this.index\r\n        };\r\n    };\r\n    /**\r\n     * Is this a input Node?\r\n     */\r\n    Node.prototype.isInputNode = function () {\r\n        return this.type === NodeType_1.NodeType.INPUT;\r\n    };\r\n    /**\r\n     * Is this a hidden Node?\r\n     */\r\n    Node.prototype.isHiddenNode = function () {\r\n        return this.type === NodeType_1.NodeType.HIDDEN;\r\n    };\r\n    /**\r\n     * Is this a output Node?\r\n     */\r\n    Node.prototype.isOutputNode = function () {\r\n        return this.type === NodeType_1.NodeType.OUTPUT;\r\n    };\r\n    /**\r\n     * Set bias.\r\n     *\r\n     * @param bias the new bias value\r\n     */\r\n    Node.prototype.setBias = function (bias) {\r\n        this.bias = bias;\r\n        return this;\r\n    };\r\n    /**\r\n     * Set activation type\r\n     *\r\n     * @param activationType the new activation type\r\n     */\r\n    Node.prototype.setActivationType = function (activationType) {\r\n        this.squash = Activation_1.Activation.getActivation(activationType);\r\n        return this;\r\n    };\r\n    return Node;\r\n}());\r\nexports.Node = Node;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GatingType = void 0;\r\n/**\r\n * The type of gating.\r\n */\r\nvar GatingType;\r\n(function (GatingType) {\r\n    /**\r\n     * Gate incoming connections.\r\n     */\r\n    GatingType[GatingType[\"INPUT\"] = 0] = \"INPUT\";\r\n    /**\r\n     * Gate self connections.\r\n     */\r\n    GatingType[GatingType[\"SELF\"] = 1] = \"SELF\";\r\n    /**\r\n     * Gate outgoing connections.\r\n     */\r\n    GatingType[GatingType[\"OUTPUT\"] = 2] = \"OUTPUT\";\r\n})(GatingType = exports.GatingType || (exports.GatingType = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Layer = void 0;\r\nvar ConnectionType_1 = require(\"../../enums/ConnectionType\");\r\nvar GatingType_1 = require(\"../../enums/GatingType\");\r\n/**\r\n * Parent class for layers.\r\n */\r\nvar Layer = /** @class */ (function () {\r\n    function Layer(outputSize) {\r\n        this.outputSize = outputSize;\r\n        this.nodes = [];\r\n        this.inputNodes = new Set();\r\n        this.outputNodes = new Set();\r\n        this.connections = [];\r\n        this.gates = [];\r\n    }\r\n    /**\r\n     * Connect two Layers or sets of Nodes.\r\n     *\r\n     * @param from origin Nodes / Layer\r\n     * @param to destination Nodes / Layer\r\n     * @param connectionType The type of connection\r\n     * @param weight the initial weights for all new connections\r\n     *\r\n     * @returns all created connections\r\n     */\r\n    Layer.connect = function (from, to, connectionType, weight) {\r\n        if (connectionType === void 0) { connectionType = ConnectionType_1.ConnectionType.ALL_TO_ALL; }\r\n        if (weight === void 0) { weight = 1; }\r\n        if (connectionType === ConnectionType_1.ConnectionType.NO_CONNECTION) {\r\n            throw new ReferenceError(\"Cannot connect with 'NO_CONNECTION' connection type\");\r\n        }\r\n        var fromNodes = Array.from(from instanceof Layer ? from.outputNodes : from);\r\n        var toNodes = Array.from(to instanceof Layer ? to.inputNodes : to);\r\n        if (toNodes.length === 0) {\r\n            throw new ReferenceError(\"Target from has no input nodes!\");\r\n        }\r\n        if (fromNodes.length === 0) {\r\n            throw new ReferenceError(\"This from has no output nodes!\");\r\n        }\r\n        var connections = [];\r\n        if (connectionType === ConnectionType_1.ConnectionType.ALL_TO_ALL) {\r\n            fromNodes.forEach(function (fromNode) {\r\n                toNodes.forEach(function (toNode) {\r\n                    connections.push(fromNode.connect(toNode, weight)); // connect every \"from node\" to every \"to node\"\r\n                });\r\n            });\r\n        }\r\n        else if (connectionType === ConnectionType_1.ConnectionType.ONE_TO_ONE) {\r\n            if (fromNodes.length !== toNodes.length) {\r\n                throw new RangeError(\"Can't connect one to one! Number of output nodes from are unequal number of incoming nodes from next layer!\");\r\n            }\r\n            for (var i = 0; i < fromNodes.length; i++) {\r\n                connections.push(fromNodes[i].connect(toNodes[i], weight)); // connect every nodes with same indices\r\n            }\r\n        }\r\n        else if (connectionType === ConnectionType_1.ConnectionType.POOLING) {\r\n            // connect the same amount of input nodes to every output node\r\n            // every input node has only one connection available\r\n            var ratio_1 = toNodes.length / fromNodes.length;\r\n            connections.push.apply(connections, fromNodes.map(function (node, index) { return node.connect(toNodes[Math.floor(index * ratio_1)], weight); }));\r\n        }\r\n        return connections;\r\n    };\r\n    /**\r\n     * Gate nodes and connections.\r\n     *\r\n     * @param nodes the nodes which function as gateNodes\r\n     * @param connections the connections which will be gated\r\n     * @param gateType The type of gating\r\n     *\r\n     * @returns all gated connections\r\n     */\r\n    Layer.gate = function (nodes, connections, gateType) {\r\n        var gatedConnections = [];\r\n        switch (gateType) {\r\n            case GatingType_1.GatingType.INPUT: { // gate incoming connections\r\n                var toNodes = Array.from(new Set(connections.map(function (conn) { return conn.to; })));\r\n                var _loop_1 = function (i) {\r\n                    var node = toNodes[i];\r\n                    var gateNode = nodes[i % nodes.length];\r\n                    node.incoming\r\n                        .filter(function (conn) { return connections.includes(conn); })\r\n                        .forEach(function (conn) {\r\n                        gateNode.addGate(conn);\r\n                        gatedConnections.push(conn);\r\n                    });\r\n                };\r\n                for (var i = 0; i < toNodes.length; i++) {\r\n                    _loop_1(i);\r\n                }\r\n                break;\r\n            }\r\n            case GatingType_1.GatingType.SELF: { // gate self connections\r\n                var fromNodes = Array.from(new Set(connections.map(function (conn) { return conn.from; })));\r\n                for (var i = 0; i < fromNodes.length; i++) {\r\n                    if (connections.includes(fromNodes[i].selfConnection)) {\r\n                        nodes[i % nodes.length].addGate(fromNodes[i].selfConnection);\r\n                        gatedConnections.push(fromNodes[i].selfConnection);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case GatingType_1.GatingType.OUTPUT: { // gate outgoing connections\r\n                var fromNodes = Array.from(new Set(connections.map(function (conn) { return conn.from; })));\r\n                var _loop_2 = function (i) {\r\n                    var node = fromNodes[i];\r\n                    var gateNode = nodes[i % nodes.length];\r\n                    node.outgoing\r\n                        .filter(function (conn) { return connections.includes(conn); })\r\n                        .forEach(function (conn) {\r\n                        gateNode.addGate(conn);\r\n                        gatedConnections.push(conn);\r\n                    });\r\n                };\r\n                for (var i = 0; i < fromNodes.length; i++) {\r\n                    _loop_2(i);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return gatedConnections;\r\n    };\r\n    return Layer;\r\n}());\r\nexports.Layer = Layer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DenseLayer = void 0;\r\nvar ActivationType_1 = require(\"../../../enums/ActivationType\");\r\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\r\nvar NodeType_1 = require(\"../../../enums/NodeType\");\r\nvar Node_1 = require(\"../../Node\");\r\nvar Layer_1 = require(\"../Layer\");\r\n/**\r\n * Dense layer\r\n */\r\nvar DenseLayer = /** @class */ (function (_super) {\r\n    __extends(DenseLayer, _super);\r\n    function DenseLayer(outputSize, options) {\r\n        var _a;\r\n        if (options === void 0) { options = {}; }\r\n        var _b;\r\n        var _this = _super.call(this, outputSize) || this;\r\n        var activation = (_b = options.activationType) !== null && _b !== void 0 ? _b : ActivationType_1.ActivationType.LogisticActivation;\r\n        for (var i = 0; i < outputSize; i++) {\r\n            _this.inputNodes.add(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setActivationType(activation));\r\n        }\r\n        _this.outputNodes = _this.inputNodes;\r\n        (_a = _this.nodes).push.apply(_a, Array.from(_this.inputNodes));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Checks if a given connection type is allowed on this layer.\r\n     *\r\n     * @param type the type to check\r\n     *\r\n     * @return Is this connection type allowed?\r\n     */\r\n    DenseLayer.prototype.connectionTypeisAllowed = function (type) {\r\n        return true;\r\n    };\r\n    /**\r\n     * Gets the default connection type for a incoming connection to this layer.\r\n     *\r\n     * @returns the default incoming connection\r\n     */\r\n    DenseLayer.prototype.getDefaultIncomingConnectionType = function () {\r\n        return ConnectionType_1.ConnectionType.ALL_TO_ALL;\r\n    };\r\n    return DenseLayer;\r\n}(Layer_1.Layer));\r\nexports.DenseLayer = DenseLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ConstantNode = void 0;\r\nvar ActivationType_1 = require(\"../../enums/ActivationType\");\r\nvar NodeType_1 = require(\"../../enums/NodeType\");\r\nvar Activation_1 = require(\"../../methods/Activation\");\r\nvar Node_1 = require(\"../Node\");\r\n/**\r\n * Constant node\r\n */\r\nvar ConstantNode = /** @class */ (function (_super) {\r\n    __extends(ConstantNode, _super);\r\n    function ConstantNode() {\r\n        var _this = _super.call(this, NodeType_1.NodeType.HIDDEN) || this;\r\n        _this.bias = 1;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Create a constant node from json object.\r\n     *\r\n     * @param json the json object representing the node\r\n     *\r\n     * @returns the created node\r\n     */\r\n    ConstantNode.prototype.fromJSON = function (json) {\r\n        var _a, _b;\r\n        this.index = (_a = json.index) !== null && _a !== void 0 ? _a : -1;\r\n        this.squash = Activation_1.Activation.getActivation((_b = json.squash) !== null && _b !== void 0 ? _b : ActivationType_1.ActivationType.IdentityActivation);\r\n        return this;\r\n    };\r\n    /**\r\n     * Convert this node into a json object.\r\n     *\r\n     * @returns the json object representing this node\r\n     */\r\n    ConstantNode.prototype.toJSON = function () {\r\n        return { index: this.index, squash: this.squash.type };\r\n    };\r\n    /**\r\n     * Bias mutations aren't allowed for a constant node.\r\n     */\r\n    ConstantNode.prototype.mutateBias = function () {\r\n        throw new ReferenceError(\"Cannot mutate a pool node!\");\r\n    };\r\n    /**\r\n     * Activation mutations aren't allowed for a constant node.\r\n     */\r\n    ConstantNode.prototype.mutateActivation = function () {\r\n        throw new ReferenceError(\"Cannot mutate a pool node!\");\r\n    };\r\n    /**\r\n     * Constant nodes can't gate a connection.\r\n     */\r\n    ConstantNode.prototype.addGate = function () {\r\n        throw new ReferenceError(\"A pool node can't gate a connection!\");\r\n    };\r\n    /**\r\n     * Constant nodes can't gate a connection.\r\n     */\r\n    ConstantNode.prototype.removeGate = function () {\r\n        throw new ReferenceError(\"A pool node can't gate a connection!\");\r\n    };\r\n    /**\r\n     * Can't set the bias of a constant node.\r\n     */\r\n    ConstantNode.prototype.setBias = function () {\r\n        throw new ReferenceError(\"Cannot set the bias of a pool node!\");\r\n    };\r\n    return ConstantNode;\r\n}(Node_1.Node));\r\nexports.ConstantNode = ConstantNode;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DropoutNode = void 0;\r\nvar Utils_1 = require(\"../../methods/Utils\");\r\nvar ConstantNode_1 = require(\"./ConstantNode\");\r\n/**\r\n * Dropout node\r\n */\r\nvar DropoutNode = /** @class */ (function (_super) {\r\n    __extends(DropoutNode, _super);\r\n    function DropoutNode(probability) {\r\n        var _this = _super.call(this) || this;\r\n        _this.probability = probability;\r\n        _this.droppedOut = false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Actives the node.\r\n     *\r\n     * When a neuron activates, it computes its state from all its input connections and 'squashes' it using its activation function, and returns the output (activation).\r\n     *\r\n     * You can also provide the activation (a float between 0 and 1) as a parameter, which is useful for neurons in the input layer.\r\n     *\r\n     * @returns A neuron's output value\r\n     */\r\n    DropoutNode.prototype.activate = function () {\r\n        var _this = this;\r\n        if (this.incoming.length !== 1) {\r\n            throw new RangeError(\"Dropout node should have exactly one incoming connection!\");\r\n        }\r\n        var incomingConnection = this.incoming[0];\r\n        // https://stats.stackexchange.com/a/219240\r\n        if (Utils_1.randDouble(0, 1) < this.probability) {\r\n            // DROPOUT\r\n            this.droppedOut = true;\r\n            this.state = 0;\r\n        }\r\n        else {\r\n            this.droppedOut = false;\r\n            this.state = incomingConnection.from.activation * incomingConnection.weight * incomingConnection.gain;\r\n            this.state *= 1 / (1 - this.probability);\r\n        }\r\n        this.activation = this.squash.calc(this.state, false) * this.mask;\r\n        // Adjust gain\r\n        this.gated.forEach(function (conn) { return conn.gain = _this.activation; });\r\n        return this.activation;\r\n    };\r\n    /**\r\n     * Backpropagate the error (a.k.a. learn).\r\n     *\r\n     * After an activation, you can teach the node what should have been the correct output (a.k.a. train). This is done by backpropagating. [Momentum](https://www.willamette.edu/~gorr/classes/cs449/momrate.html) adds a fraction of the previous weight update to the current one. When the gradient keeps pointing in the same direction, this will increase the size of the steps taken towards the minimum.\r\n     *\r\n     * If you combine a high learning rate with a lot of momentum, you will rush past the minimum (of the error function) with huge steps. It is therefore often necessary to reduce the global learning rate µ when using a lot of momentum (m close to 1).\r\n     *\r\n     * @param target The target value (i.e. \"the value the network SHOULD have given\")\r\n     * @param options More options for propagation\r\n     */\r\n    DropoutNode.prototype.propagate = function (target, options) {\r\n        if (options === void 0) { options = {}; }\r\n        options.momentum = Utils_1.getOrDefault(options.momentum, 0);\r\n        options.rate = Utils_1.getOrDefault(options.rate, 0.3);\r\n        options.update = Utils_1.getOrDefault(options.update, true);\r\n        var connectionsStates = this.outgoing.map(function (conn) { return conn.to.errorResponsibility * conn.weight * conn.gain; });\r\n        this.errorResponsibility = this.errorProjected = Utils_1.sum(connectionsStates) / (1 - this.probability);\r\n        if (this.incoming.length !== 1) {\r\n            throw new RangeError(\"Dropout node should have exactly one incoming connection!\");\r\n        }\r\n        var incomingConnection = this.incoming[0];\r\n        // calculate gradient\r\n        if (!this.droppedOut) {\r\n            var gradient = this.errorProjected * incomingConnection.eligibility;\r\n            for (var i = 0; i < incomingConnection.xTraceNodes.length; i++) {\r\n                gradient += incomingConnection.xTraceNodes[i].errorResponsibility * incomingConnection.xTraceValues[i];\r\n            }\r\n            if (options.update) {\r\n                incomingConnection.deltaWeightsTotal += options.rate * gradient * this.mask + options.momentum * incomingConnection.deltaWeightsPrevious;\r\n                incomingConnection.weight += incomingConnection.deltaWeightsTotal;\r\n                incomingConnection.deltaWeightsPrevious = incomingConnection.deltaWeightsTotal;\r\n                incomingConnection.deltaWeightsTotal = 0;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Create a constant node from json object.\r\n     *\r\n     * @param json the json object representing the node\r\n     *\r\n     * @returns the created node\r\n     */\r\n    DropoutNode.prototype.fromJSON = function (json) {\r\n        _super.prototype.fromJSON.call(this, json);\r\n        this.probability = json.probability;\r\n        return this;\r\n    };\r\n    /**\r\n     * Convert this node into a json object.\r\n     *\r\n     * @returns the json object representing this node\r\n     */\r\n    DropoutNode.prototype.toJSON = function () {\r\n        return Object.assign(_super.prototype.toJSON.call(this), {\r\n            probability: this.probability\r\n        });\r\n    };\r\n    return DropoutNode;\r\n}(ConstantNode_1.ConstantNode));\r\nexports.DropoutNode = DropoutNode;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DropoutLayer = void 0;\r\nvar ActivationType_1 = require(\"../../../enums/ActivationType\");\r\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\r\nvar DropoutNode_1 = require(\"../../Nodes/DropoutNode\");\r\nvar Layer_1 = require(\"../Layer\");\r\n/**\r\n * Dropout layer\r\n */\r\nvar DropoutLayer = /** @class */ (function (_super) {\r\n    __extends(DropoutLayer, _super);\r\n    function DropoutLayer(outputSize, options) {\r\n        var _a;\r\n        if (options === void 0) { options = {}; }\r\n        var _b, _c;\r\n        var _this = _super.call(this, outputSize) || this;\r\n        var activation = (_b = options.activationType) !== null && _b !== void 0 ? _b : ActivationType_1.ActivationType.IdentityActivation;\r\n        var probability = (_c = options.probability) !== null && _c !== void 0 ? _c : 0.1;\r\n        for (var i = 0; i < outputSize; i++) {\r\n            _this.inputNodes.add(new DropoutNode_1.DropoutNode(probability).setActivationType(activation));\r\n        }\r\n        _this.outputNodes = _this.inputNodes;\r\n        (_a = _this.nodes).push.apply(_a, Array.from(_this.inputNodes));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the default connection type for a incoming connection to this layer.\r\n     *\r\n     * @returns the default incoming connection\r\n     */\r\n    DropoutLayer.prototype.getDefaultIncomingConnectionType = function () {\r\n        return ConnectionType_1.ConnectionType.ONE_TO_ONE;\r\n    };\r\n    /**\r\n     * Checks if a given connection type is allowed on this layer.\r\n     *\r\n     * @param type the type to check\r\n     *\r\n     * @return Is this connection type allowed?\r\n     */\r\n    DropoutLayer.prototype.connectionTypeisAllowed = function (type) {\r\n        return type === ConnectionType_1.ConnectionType.ONE_TO_ONE;\r\n    };\r\n    return DropoutLayer;\r\n}(Layer_1.Layer));\r\nexports.DropoutLayer = DropoutLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NoiseNode = void 0;\r\nvar NodeType_1 = require(\"../../enums/NodeType\");\r\nvar Utils_1 = require(\"../../methods/Utils\");\r\nvar ConstantNode_1 = require(\"./ConstantNode\");\r\n/**\r\n * Noise node\r\n */\r\nvar NoiseNode = /** @class */ (function (_super) {\r\n    __extends(NoiseNode, _super);\r\n    function NoiseNode(options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this) || this;\r\n        _this.noiseType = Utils_1.getOrDefault(options.noiseType, NodeType_1.NoiseNodeType.GAUSSIAN_NOISE);\r\n        _this.options = options;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Actives the node.\r\n     *\r\n     * When a neuron activates, it computes its state from all its input connections and 'squashes' it using its activation function, and returns the output (activation).\r\n     *\r\n     * You can also provide the activation (a float between 0 and 1) as a parameter, which is useful for neurons in the input layer.\r\n     *\r\n     * @returns A neuron's output value\r\n     */\r\n    NoiseNode.prototype.activate = function () {\r\n        var _a, _b, _c, _d;\r\n        this.old = this.state;\r\n        var incomingStates = this.incoming.map(function (conn) { return conn.from.activation * conn.weight * conn.gain; });\r\n        switch (this.noiseType) {\r\n            case NodeType_1.NoiseNodeType.GAUSSIAN_NOISE:\r\n                this.state = Utils_1.avg(incomingStates) + Utils_1.generateGaussian((_b = (_a = this.options.gaussian) === null || _a === void 0 ? void 0 : _a.mean) !== null && _b !== void 0 ? _b : 0, (_d = (_c = this.options.gaussian) === null || _c === void 0 ? void 0 : _c.deviation) !== null && _d !== void 0 ? _d : 2);\r\n                break;\r\n            default:\r\n                throw new ReferenceError(\"Cannot activate this noise type!\");\r\n        }\r\n        this.activation = this.squash.calc(this.state, false) * this.mask;\r\n        this.derivativeState = this.squash.calc(this.state, true);\r\n        return this.activation;\r\n    };\r\n    /**\r\n     * Backpropagate the error (a.k.a. learn).\r\n     *\r\n     * After an activation, you can teach the node what should have been the correct output (a.k.a. train). This is done by backpropagating. [Momentum](https://www.willamette.edu/~gorr/classes/cs449/momrate.html) adds a fraction of the previous weight update to the current one. When the gradient keeps pointing in the same direction, this will increase the size of the steps taken towards the minimum.\r\n     *\r\n     * If you combine a high learning rate with a lot of momentum, you will rush past the minimum (of the error function) with huge steps. It is therefore often necessary to reduce the global learning rate µ when using a lot of momentum (m close to 1).\r\n     *\r\n     * @param target The target value (i.e. \"the value the network SHOULD have given\")\r\n     * @param options More options for propagation\r\n     */\r\n    NoiseNode.prototype.propagate = function (target, options) {\r\n        if (options === void 0) { options = {}; }\r\n        options.momentum = Utils_1.getOrDefault(options.momentum, 0);\r\n        options.rate = Utils_1.getOrDefault(options.rate, 0.3);\r\n        options.update = Utils_1.getOrDefault(options.update, true);\r\n        var connectionsStates = this.outgoing.map(function (conn) { return conn.to.errorResponsibility * conn.weight * conn.gain; });\r\n        this.errorResponsibility = this.errorProjected = Utils_1.sum(connectionsStates) * this.derivativeState;\r\n        for (var _i = 0, _a = this.incoming; _i < _a.length; _i++) {\r\n            var connection = _a[_i];\r\n            // calculate gradient\r\n            var gradient = this.errorProjected * connection.eligibility;\r\n            for (var i = 0; i < connection.xTraceNodes.length; i++) {\r\n                gradient += connection.xTraceNodes[i].errorResponsibility * connection.xTraceValues[i];\r\n            }\r\n            connection.deltaWeightsTotal += options.rate * gradient * this.mask;\r\n            if (options.update) {\r\n                connection.deltaWeightsTotal += options.momentum * connection.deltaWeightsPrevious;\r\n                connection.weight += connection.deltaWeightsTotal;\r\n                connection.deltaWeightsPrevious = connection.deltaWeightsTotal;\r\n                connection.deltaWeightsTotal = 0;\r\n            }\r\n        }\r\n    };\r\n    return NoiseNode;\r\n}(ConstantNode_1.ConstantNode));\r\nexports.NoiseNode = NoiseNode;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NoiseLayer = void 0;\r\nvar ActivationType_1 = require(\"../../../enums/ActivationType\");\r\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\r\nvar NodeType_1 = require(\"../../../enums/NodeType\");\r\nvar NoiseNode_1 = require(\"../../Nodes/NoiseNode\");\r\nvar Layer_1 = require(\"../Layer\");\r\n/**\r\n * Noise layer\r\n */\r\nvar NoiseLayer = /** @class */ (function (_super) {\r\n    __extends(NoiseLayer, _super);\r\n    function NoiseLayer(outputSize, options) {\r\n        var _a;\r\n        if (options === void 0) { options = {}; }\r\n        var _b;\r\n        var _this = _super.call(this, outputSize) || this;\r\n        var activation = (_b = options.activationType) !== null && _b !== void 0 ? _b : ActivationType_1.ActivationType.IdentityActivation;\r\n        for (var i = 0; i < outputSize; i++) {\r\n            _this.inputNodes.add(new NoiseNode_1.NoiseNode({\r\n                noiseType: NodeType_1.NoiseNodeType.GAUSSIAN_NOISE,\r\n                gaussian: options\r\n            }).setActivationType(activation));\r\n        }\r\n        _this.outputNodes = _this.inputNodes;\r\n        (_a = _this.nodes).push.apply(_a, Array.from(_this.inputNodes));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the default connection type for a incoming connection to this layer.\r\n     *\r\n     * @returns the default incoming connection\r\n     */\r\n    NoiseLayer.prototype.getDefaultIncomingConnectionType = function () {\r\n        return ConnectionType_1.ConnectionType.ONE_TO_ONE;\r\n    };\r\n    /**\r\n     * Checks if a given connection type is allowed on this layer.\r\n     *\r\n     * @param type the type to check\r\n     *\r\n     * @return Is this connection type allowed?\r\n     */\r\n    NoiseLayer.prototype.connectionTypeisAllowed = function (type) {\r\n        return type === ConnectionType_1.ConnectionType.ONE_TO_ONE;\r\n    };\r\n    return NoiseLayer;\r\n}(Layer_1.Layer));\r\nexports.NoiseLayer = NoiseLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OutputLayer = void 0;\r\nvar ActivationType_1 = require(\"../../../enums/ActivationType\");\r\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\r\nvar NodeType_1 = require(\"../../../enums/NodeType\");\r\nvar Node_1 = require(\"../../Node\");\r\nvar Layer_1 = require(\"../Layer\");\r\n/**\r\n * Output layer\r\n */\r\nvar OutputLayer = /** @class */ (function (_super) {\r\n    __extends(OutputLayer, _super);\r\n    function OutputLayer(outputSize, options) {\r\n        var _a;\r\n        if (options === void 0) { options = {}; }\r\n        var _b;\r\n        var _this = _super.call(this, outputSize) || this;\r\n        var activation = (_b = options.activationType) !== null && _b !== void 0 ? _b : ActivationType_1.ActivationType.IdentityActivation;\r\n        for (var i = 0; i < outputSize; i++) {\r\n            _this.inputNodes.add(new Node_1.Node(NodeType_1.NodeType.OUTPUT).setActivationType(activation));\r\n        }\r\n        (_a = _this.nodes).push.apply(_a, Array.from(_this.inputNodes));\r\n        return _this;\r\n    }\r\n    /**\r\n     * A outgoing connection is not allowed for an output layer!\r\n     */\r\n    OutputLayer.prototype.connect = function () {\r\n        throw new ReferenceError(\"Could not connect an OutputLayer!\");\r\n    };\r\n    /**\r\n     * Checks if a given connection type is allowed on this layer.\r\n     *\r\n     * @param type the type to check\r\n     *\r\n     * @return Is this connection type allowed?\r\n     */\r\n    OutputLayer.prototype.connectionTypeisAllowed = function (type) {\r\n        return true;\r\n    };\r\n    /**\r\n     * Gets the default connection type for a incoming connection to this layer.\r\n     *\r\n     * @returns the default incoming connection\r\n     */\r\n    OutputLayer.prototype.getDefaultIncomingConnectionType = function () {\r\n        return ConnectionType_1.ConnectionType.ALL_TO_ALL;\r\n    };\r\n    return OutputLayer;\r\n}(Layer_1.Layer));\r\nexports.OutputLayer = OutputLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InputLayer = void 0;\r\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\r\nvar NodeType_1 = require(\"../../../enums/NodeType\");\r\nvar Node_1 = require(\"../../Node\");\r\nvar Layer_1 = require(\"../Layer\");\r\nvar NoiseLayer_1 = require(\"../NoiseLayers/NoiseLayer\");\r\n/**\r\n * Input layer\r\n */\r\nvar InputLayer = /** @class */ (function (_super) {\r\n    __extends(InputLayer, _super);\r\n    function InputLayer(outputSize, options) {\r\n        var _a;\r\n        if (options === void 0) { options = {}; }\r\n        var _b;\r\n        var _this = _super.call(this, outputSize) || this;\r\n        for (var i = 0; i < outputSize; i++) {\r\n            var node = new Node_1.Node(NodeType_1.NodeType.INPUT);\r\n            _this.nodes.push(node);\r\n        }\r\n        if (options.noise) {\r\n            var noiseLayer = new NoiseLayer_1.NoiseLayer((_b = options.noise) !== null && _b !== void 0 ? _b : NodeType_1.NoiseNodeType.GAUSSIAN_NOISE);\r\n            noiseLayer.outputNodes.forEach(function (node) { return _this.outputNodes.add(node); });\r\n            (_a = _this.connections).push.apply(_a, Layer_1.Layer.connect(_this.nodes, noiseLayer, noiseLayer.getDefaultIncomingConnectionType()));\r\n        }\r\n        else {\r\n            _this.nodes.forEach(function (node) { return _this.outputNodes.add(node); });\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the default connection type for a incoming connection to this layer.\r\n     *\r\n     * @returns the default incoming connection\r\n     */\r\n    InputLayer.prototype.getDefaultIncomingConnectionType = function () {\r\n        return ConnectionType_1.ConnectionType.NO_CONNECTION;\r\n    };\r\n    /**\r\n     * Checks if a given connection type is allowed on this layer.\r\n     *\r\n     * @param type the type to check\r\n     *\r\n     * @return Is this connection type allowed?\r\n     */\r\n    InputLayer.prototype.connectionTypeisAllowed = function (type) {\r\n        return type === ConnectionType_1.ConnectionType.NO_CONNECTION;\r\n    };\r\n    return InputLayer;\r\n}(Layer_1.Layer));\r\nexports.InputLayer = InputLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PoolNode = void 0;\r\nvar NodeType_1 = require(\"../../enums/NodeType\");\r\nvar Utils_1 = require(\"../../methods/Utils\");\r\nvar ConstantNode_1 = require(\"./ConstantNode\");\r\n/**\r\n * Pool node\r\n */\r\nvar PoolNode = /** @class */ (function (_super) {\r\n    __extends(PoolNode, _super);\r\n    function PoolNode(poolingType) {\r\n        if (poolingType === void 0) { poolingType = NodeType_1.PoolNodeType.MAX_POOLING; }\r\n        var _this = _super.call(this) || this;\r\n        _this.poolingType = poolingType;\r\n        _this.receivingIndex = -1;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Create a constant node from json object.\r\n     *\r\n     * @param json the json object representing the node\r\n     *\r\n     * @returns the created node\r\n     */\r\n    PoolNode.prototype.fromJSON = function (json) {\r\n        _super.prototype.fromJSON.call(this, json);\r\n        this.poolingType = json.poolType;\r\n        return this;\r\n    };\r\n    /**\r\n     * Actives the node.\r\n     *\r\n     * When a neuron activates, it computes its state from all its input connections and 'squashes' it using its activation function, and returns the output (activation).\r\n     *\r\n     * You can also provide the activation (a float between 0 and 1) as a parameter, which is useful for neurons in the input layer.\r\n     *\r\n     * @returns A neuron's output value\r\n     */\r\n    PoolNode.prototype.activate = function () {\r\n        var _this = this;\r\n        var incomingStates = this.incoming.map(function (conn) { return conn.from.activation * conn.weight * conn.gain; });\r\n        if (this.poolingType === NodeType_1.PoolNodeType.MAX_POOLING) {\r\n            this.receivingIndex = Utils_1.maxValueIndex(incomingStates);\r\n            this.state = incomingStates[this.receivingIndex];\r\n        }\r\n        else if (this.poolingType === NodeType_1.PoolNodeType.AVG_POOLING) {\r\n            this.state = Utils_1.avg(incomingStates);\r\n        }\r\n        else if (this.poolingType === NodeType_1.PoolNodeType.MIN_POOLING) {\r\n            this.receivingIndex = Utils_1.minValueIndex(incomingStates);\r\n            this.state = incomingStates[this.receivingIndex];\r\n        }\r\n        else {\r\n            throw new ReferenceError(\"No valid pooling type! Type: \" + this.poolingType);\r\n        }\r\n        this.activation = this.squash.calc(this.state, false) * this.mask;\r\n        if (this.poolingType === NodeType_1.PoolNodeType.AVG_POOLING) {\r\n            this.derivativeState = this.squash.calc(this.state, true);\r\n        }\r\n        // Adjust gain\r\n        this.gated.forEach(function (conn) { return conn.gain = _this.activation; });\r\n        return this.activation;\r\n    };\r\n    /**\r\n     * Backpropagate the error (a.k.a. learn).\r\n     *\r\n     * After an activation, you can teach the node what should have been the correct output (a.k.a. train). This is done by backpropagating. [Momentum](https://www.willamette.edu/~gorr/classes/cs449/momrate.html) adds a fraction of the previous weight update to the current one. When the gradient keeps pointing in the same direction, this will increase the size of the steps taken towards the minimum.\r\n     *\r\n     * If you combine a high learning rate with a lot of momentum, you will rush past the minimum (of the error function) with huge steps. It is therefore often necessary to reduce the global learning rate µ when using a lot of momentum (m close to 1).\r\n     *\r\n     * @param target The target value (i.e. \"the value the network SHOULD have given\")\r\n     * @param options More options for propagation\r\n     */\r\n    PoolNode.prototype.propagate = function (target, options) {\r\n        if (options === void 0) { options = {}; }\r\n        options.momentum = Utils_1.getOrDefault(options.momentum, 0);\r\n        options.rate = Utils_1.getOrDefault(options.rate, 0.3);\r\n        options.update = Utils_1.getOrDefault(options.update, true);\r\n        var connectionsStates = this.outgoing.map(function (conn) { return conn.to.errorResponsibility * conn.weight * conn.gain; });\r\n        this.errorResponsibility = this.errorProjected = Utils_1.sum(connectionsStates) * this.derivativeState;\r\n        if (this.poolingType === NodeType_1.PoolNodeType.AVG_POOLING) {\r\n            for (var _i = 0, _a = this.incoming; _i < _a.length; _i++) {\r\n                var connection = _a[_i];\r\n                // calculate gradient\r\n                var gradient = this.errorProjected * connection.eligibility;\r\n                for (var i = 0; i < connection.xTraceNodes.length; i++) {\r\n                    gradient += connection.xTraceNodes[i].errorResponsibility * connection.xTraceValues[i];\r\n                }\r\n                connection.deltaWeightsTotal += options.rate * gradient * this.mask;\r\n                if (options.update) {\r\n                    connection.deltaWeightsTotal += options.momentum * connection.deltaWeightsPrevious;\r\n                    connection.weight += connection.deltaWeightsTotal;\r\n                    connection.deltaWeightsPrevious = connection.deltaWeightsTotal;\r\n                    connection.deltaWeightsTotal = 0;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // TODO: don't think that this is correct\r\n            // Passing only the connections that were used for getting the min or max\r\n            for (var i = 0; i < this.incoming.length; i++) {\r\n                this.incoming[i].weight = this.receivingIndex === i ? 1 : 0;\r\n                this.incoming[i].gain = this.receivingIndex === i ? 1 : 0;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Convert this node into a json object.\r\n     *\r\n     * @returns the json object representing this node\r\n     */\r\n    PoolNode.prototype.toJSON = function () {\r\n        return Object.assign(_super.prototype.toJSON.call(this), {\r\n            poolType: this.poolingType\r\n        });\r\n    };\r\n    return PoolNode;\r\n}(ConstantNode_1.ConstantNode));\r\nexports.PoolNode = PoolNode;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PoolingLayer = void 0;\r\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\r\nvar Layer_1 = require(\"../Layer\");\r\n/**\r\n * Parent class for all pooling layers\r\n */\r\nvar PoolingLayer = /** @class */ (function (_super) {\r\n    __extends(PoolingLayer, _super);\r\n    function PoolingLayer(outputSize) {\r\n        return _super.call(this, outputSize) || this;\r\n    }\r\n    /**\r\n     * Gets the default connection type for a incoming connection to this layer.\r\n     *\r\n     * @returns the default incoming connection\r\n     */\r\n    PoolingLayer.prototype.getDefaultIncomingConnectionType = function () {\r\n        return ConnectionType_1.ConnectionType.POOLING;\r\n    };\r\n    /**\r\n     * Checks if a given connection type is allowed on this layer.\r\n     *\r\n     * @param type the type to check\r\n     *\r\n     * @return Is this connection type allowed?\r\n     */\r\n    PoolingLayer.prototype.connectionTypeisAllowed = function (type) {\r\n        return true;\r\n    };\r\n    return PoolingLayer;\r\n}(Layer_1.Layer));\r\nexports.PoolingLayer = PoolingLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AvgPooling1DLayer = void 0;\r\nvar ActivationType_1 = require(\"../../../enums/ActivationType\");\r\nvar NodeType_1 = require(\"../../../enums/NodeType\");\r\nvar PoolNode_1 = require(\"../../Nodes/PoolNode\");\r\nvar PoolingLayer_1 = require(\"./PoolingLayer\");\r\n/**\r\n * Average pooling layer 1D\r\n */\r\nvar AvgPooling1DLayer = /** @class */ (function (_super) {\r\n    __extends(AvgPooling1DLayer, _super);\r\n    function AvgPooling1DLayer(outputSize, options) {\r\n        var _a;\r\n        if (options === void 0) { options = {}; }\r\n        var _b;\r\n        var _this = _super.call(this, outputSize) || this;\r\n        var activationType = (_b = options.activationType) !== null && _b !== void 0 ? _b : ActivationType_1.ActivationType.IdentityActivation;\r\n        for (var i = 0; i < outputSize; i++) {\r\n            _this.inputNodes.add(new PoolNode_1.PoolNode(NodeType_1.PoolNodeType.AVG_POOLING).setActivationType(activationType));\r\n        }\r\n        _this.outputNodes = _this.inputNodes;\r\n        (_a = _this.nodes).push.apply(_a, Array.from(_this.inputNodes));\r\n        return _this;\r\n    }\r\n    return AvgPooling1DLayer;\r\n}(PoolingLayer_1.PoolingLayer));\r\nexports.AvgPooling1DLayer = AvgPooling1DLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MinPooling1DLayer = void 0;\r\nvar ActivationType_1 = require(\"../../../enums/ActivationType\");\r\nvar NodeType_1 = require(\"../../../enums/NodeType\");\r\nvar PoolNode_1 = require(\"../../Nodes/PoolNode\");\r\nvar PoolingLayer_1 = require(\"./PoolingLayer\");\r\n/**\r\n * Minimum pooling layer 1D\r\n */\r\nvar MinPooling1DLayer = /** @class */ (function (_super) {\r\n    __extends(MinPooling1DLayer, _super);\r\n    function MinPooling1DLayer(outputSize, options) {\r\n        var _a;\r\n        if (options === void 0) { options = {}; }\r\n        var _b;\r\n        var _this = _super.call(this, outputSize) || this;\r\n        var activationType = (_b = options.activationType) !== null && _b !== void 0 ? _b : ActivationType_1.ActivationType.IdentityActivation;\r\n        for (var i = 0; i < outputSize; i++) {\r\n            _this.inputNodes.add(new PoolNode_1.PoolNode(NodeType_1.PoolNodeType.MIN_POOLING).setActivationType(activationType));\r\n        }\r\n        _this.outputNodes = _this.inputNodes;\r\n        (_a = _this.nodes).push.apply(_a, Array.from(_this.inputNodes));\r\n        return _this;\r\n    }\r\n    return MinPooling1DLayer;\r\n}(PoolingLayer_1.PoolingLayer));\r\nexports.MinPooling1DLayer = MinPooling1DLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MaxPooling1DLayer = void 0;\r\nvar ActivationType_1 = require(\"../../../enums/ActivationType\");\r\nvar NodeType_1 = require(\"../../../enums/NodeType\");\r\nvar PoolNode_1 = require(\"../../Nodes/PoolNode\");\r\nvar PoolingLayer_1 = require(\"./PoolingLayer\");\r\n/**\r\n * Maximum pooling layer 1D\r\n */\r\nvar MaxPooling1DLayer = /** @class */ (function (_super) {\r\n    __extends(MaxPooling1DLayer, _super);\r\n    function MaxPooling1DLayer(outputSize, options) {\r\n        var _a;\r\n        if (options === void 0) { options = {}; }\r\n        var _b;\r\n        var _this = _super.call(this, outputSize) || this;\r\n        var activationType = (_b = options.activationType) !== null && _b !== void 0 ? _b : ActivationType_1.ActivationType.IdentityActivation;\r\n        for (var i = 0; i < outputSize; i++) {\r\n            _this.inputNodes.add(new PoolNode_1.PoolNode(NodeType_1.PoolNodeType.MAX_POOLING).setActivationType(activationType));\r\n        }\r\n        _this.outputNodes = _this.inputNodes;\r\n        (_a = _this.nodes).push.apply(_a, Array.from(_this.inputNodes));\r\n        return _this;\r\n    }\r\n    return MaxPooling1DLayer;\r\n}(PoolingLayer_1.PoolingLayer));\r\nexports.MaxPooling1DLayer = MaxPooling1DLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GlobalAvgPooling1DLayer = void 0;\r\nvar AvgPooling1DLayer_1 = require(\"./AvgPooling1DLayer\");\r\n/**\r\n * Global average pooling layer 1D\r\n */\r\nvar GlobalAvgPooling1DLayer = /** @class */ (function (_super) {\r\n    __extends(GlobalAvgPooling1DLayer, _super);\r\n    function GlobalAvgPooling1DLayer(outputSize, options) {\r\n        if (options === void 0) { options = {}; }\r\n        return _super.call(this, 1, options) || this;\r\n    }\r\n    return GlobalAvgPooling1DLayer;\r\n}(AvgPooling1DLayer_1.AvgPooling1DLayer));\r\nexports.GlobalAvgPooling1DLayer = GlobalAvgPooling1DLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GlobalMaxPooling1DLayer = void 0;\r\nvar MaxPooling1DLayer_1 = require(\"./MaxPooling1DLayer\");\r\n/**\r\n * Global maximum pooling layer 1D\r\n */\r\nvar GlobalMaxPooling1DLayer = /** @class */ (function (_super) {\r\n    __extends(GlobalMaxPooling1DLayer, _super);\r\n    function GlobalMaxPooling1DLayer(outputSize, options) {\r\n        if (options === void 0) { options = {}; }\r\n        return _super.call(this, 1, options) || this;\r\n    }\r\n    return GlobalMaxPooling1DLayer;\r\n}(MaxPooling1DLayer_1.MaxPooling1DLayer));\r\nexports.GlobalMaxPooling1DLayer = GlobalMaxPooling1DLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GlobalMinPooling1DLayer = void 0;\r\nvar MinPooling1DLayer_1 = require(\"./MinPooling1DLayer\");\r\n/**\r\n * Global minimum pooling layer 1D\r\n */\r\nvar GlobalMinPooling1DLayer = /** @class */ (function (_super) {\r\n    __extends(GlobalMinPooling1DLayer, _super);\r\n    function GlobalMinPooling1DLayer(outputSize, options) {\r\n        if (options === void 0) { options = {}; }\r\n        return _super.call(this, 1, options) || this;\r\n    }\r\n    return GlobalMinPooling1DLayer;\r\n}(MinPooling1DLayer_1.MinPooling1DLayer));\r\nexports.GlobalMinPooling1DLayer = GlobalMinPooling1DLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GRULayer = void 0;\r\nvar ActivationType_1 = require(\"../../../enums/ActivationType\");\r\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\r\nvar GatingType_1 = require(\"../../../enums/GatingType\");\r\nvar NodeType_1 = require(\"../../../enums/NodeType\");\r\nvar Activation_1 = require(\"../../../methods/Activation\");\r\nvar Node_1 = require(\"../../Node\");\r\nvar Layer_1 = require(\"../Layer\");\r\n/**\r\n * GRU layer\r\n */\r\nvar GRULayer = /** @class */ (function (_super) {\r\n    __extends(GRULayer, _super);\r\n    function GRULayer(outputSize, options) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v;\r\n        if (options === void 0) { options = {}; }\r\n        var _w;\r\n        var _this = _super.call(this, outputSize) || this;\r\n        var updateGate = [];\r\n        var inverseUpdateGate = [];\r\n        var resetGate = [];\r\n        var memoryCell = [];\r\n        var previousOutput = [];\r\n        for (var i = 0; i < outputSize; i++) {\r\n            _this.inputNodes.add(new Node_1.Node(NodeType_1.NodeType.HIDDEN));\r\n            updateGate.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setBias(1));\r\n            inverseUpdateGate.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setBias(0).setActivationType(ActivationType_1.ActivationType.LogisticActivation));\r\n            resetGate.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setBias(0));\r\n            memoryCell.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setActivationType(ActivationType_1.ActivationType.TanhActivation));\r\n            previousOutput.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setBias(0).setActivationType(ActivationType_1.ActivationType.LogisticActivation));\r\n            _this.outputNodes.add(new Node_1.Node(NodeType_1.NodeType.HIDDEN));\r\n        }\r\n        (_a = _this.connections).push.apply(_a, Layer_1.Layer.connect(_this.inputNodes, updateGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\r\n        (_b = _this.connections).push.apply(_b, Layer_1.Layer.connect(_this.inputNodes, resetGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\r\n        (_c = _this.connections).push.apply(_c, Layer_1.Layer.connect(_this.inputNodes, memoryCell, ConnectionType_1.ConnectionType.ALL_TO_ALL));\r\n        (_d = _this.connections).push.apply(_d, Layer_1.Layer.connect(previousOutput, updateGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\r\n        (_e = _this.connections).push.apply(_e, Layer_1.Layer.connect(updateGate, inverseUpdateGate, ConnectionType_1.ConnectionType.ONE_TO_ONE, 1));\r\n        (_f = _this.connections).push.apply(_f, Layer_1.Layer.connect(previousOutput, resetGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\r\n        var reset = Layer_1.Layer.connect(previousOutput, memoryCell, ConnectionType_1.ConnectionType.ALL_TO_ALL);\r\n        (_g = _this.connections).push.apply(_g, reset);\r\n        (_h = _this.gates).push.apply(_h, Layer_1.Layer.gate(resetGate, reset, GatingType_1.GatingType.OUTPUT));\r\n        var update = Layer_1.Layer.connect(previousOutput, _this.outputNodes, ConnectionType_1.ConnectionType.ALL_TO_ALL);\r\n        var inverseUpdate = Layer_1.Layer.connect(memoryCell, _this.outputNodes, ConnectionType_1.ConnectionType.ALL_TO_ALL);\r\n        (_j = _this.connections).push.apply(_j, update);\r\n        (_k = _this.connections).push.apply(_k, inverseUpdate);\r\n        (_l = _this.gates).push.apply(_l, Layer_1.Layer.gate(updateGate, update, GatingType_1.GatingType.OUTPUT));\r\n        (_m = _this.gates).push.apply(_m, Layer_1.Layer.gate(inverseUpdateGate, inverseUpdate, GatingType_1.GatingType.OUTPUT));\r\n        (_o = _this.connections).push.apply(_o, Layer_1.Layer.connect(_this.outputNodes, previousOutput, ConnectionType_1.ConnectionType.ONE_TO_ONE, 1));\r\n        (_p = _this.nodes).push.apply(_p, Array.from(_this.inputNodes));\r\n        (_q = _this.nodes).push.apply(_q, updateGate);\r\n        (_r = _this.nodes).push.apply(_r, inverseUpdateGate);\r\n        (_s = _this.nodes).push.apply(_s, resetGate);\r\n        (_t = _this.nodes).push.apply(_t, memoryCell);\r\n        (_u = _this.nodes).push.apply(_u, Array.from(_this.outputNodes));\r\n        (_v = _this.nodes).push.apply(_v, previousOutput);\r\n        var activation = Activation_1.Activation.getActivation((_w = options.activationType) !== null && _w !== void 0 ? _w : ActivationType_1.ActivationType.LogisticActivation);\r\n        _this.outputNodes.forEach(function (node) { return node.squash = activation; });\r\n        return _this;\r\n    }\r\n    /**\r\n     * Checks if a given connection type is allowed on this layer.\r\n     *\r\n     * @param type the type to check\r\n     *\r\n     * @return Is this connection type allowed?\r\n     */\r\n    GRULayer.prototype.connectionTypeisAllowed = function (type) {\r\n        return true;\r\n    };\r\n    /**\r\n     * Gets the default connection type for a incoming connection to this layer.\r\n     *\r\n     * @returns the default incoming connection\r\n     */\r\n    GRULayer.prototype.getDefaultIncomingConnectionType = function () {\r\n        return ConnectionType_1.ConnectionType.ALL_TO_ALL;\r\n    };\r\n    return GRULayer;\r\n}(Layer_1.Layer));\r\nexports.GRULayer = GRULayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LSTMLayer = void 0;\r\nvar ActivationType_1 = require(\"../../../enums/ActivationType\");\r\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\r\nvar GatingType_1 = require(\"../../../enums/GatingType\");\r\nvar NodeType_1 = require(\"../../../enums/NodeType\");\r\nvar Activation_1 = require(\"../../../methods/Activation\");\r\nvar Node_1 = require(\"../../Node\");\r\nvar Layer_1 = require(\"../Layer\");\r\n/**\r\n * LSTM layer\r\n */\r\nvar LSTMLayer = /** @class */ (function (_super) {\r\n    __extends(LSTMLayer, _super);\r\n    function LSTMLayer(outputSize, options) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\r\n        if (options === void 0) { options = {}; }\r\n        var _u;\r\n        var _this = _super.call(this, outputSize) || this;\r\n        var inputGate = [];\r\n        var forgetGate = [];\r\n        var memoryCell = [];\r\n        var outputGate = [];\r\n        for (var i = 0; i < outputSize; i++) {\r\n            _this.inputNodes.add(new Node_1.Node(NodeType_1.NodeType.HIDDEN));\r\n            inputGate.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setBias(1));\r\n            forgetGate.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setBias(1).setActivationType(ActivationType_1.ActivationType.LogisticActivation));\r\n            memoryCell.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN));\r\n            outputGate.push(new Node_1.Node(NodeType_1.NodeType.HIDDEN).setBias(1));\r\n            _this.outputNodes.add(new Node_1.Node(NodeType_1.NodeType.HIDDEN));\r\n        }\r\n        (_a = _this.connections).push.apply(_a, Layer_1.Layer.connect(memoryCell, inputGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\r\n        (_b = _this.connections).push.apply(_b, Layer_1.Layer.connect(memoryCell, forgetGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\r\n        (_c = _this.connections).push.apply(_c, Layer_1.Layer.connect(memoryCell, outputGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\r\n        var forgetGateConnections = Layer_1.Layer.connect(memoryCell, memoryCell, ConnectionType_1.ConnectionType.ONE_TO_ONE);\r\n        var outputGateConnections = Layer_1.Layer.connect(memoryCell, _this.outputNodes, ConnectionType_1.ConnectionType.ALL_TO_ALL);\r\n        (_d = _this.connections).push.apply(_d, forgetGateConnections);\r\n        (_e = _this.connections).push.apply(_e, outputGateConnections);\r\n        (_f = _this.connections).push.apply(_f, Layer_1.Layer.connect(_this.inputNodes, memoryCell, ConnectionType_1.ConnectionType.ALL_TO_ALL));\r\n        (_g = _this.connections).push.apply(_g, Layer_1.Layer.connect(_this.inputNodes, outputGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\r\n        (_h = _this.connections).push.apply(_h, Layer_1.Layer.connect(_this.inputNodes, forgetGate, ConnectionType_1.ConnectionType.ALL_TO_ALL));\r\n        var inputGateConnections = Layer_1.Layer.connect(_this.inputNodes, inputGate, ConnectionType_1.ConnectionType.ALL_TO_ALL);\r\n        (_j = _this.connections).push.apply(_j, inputGateConnections);\r\n        (_k = _this.gates).push.apply(_k, Layer_1.Layer.gate(forgetGate, forgetGateConnections, GatingType_1.GatingType.SELF));\r\n        (_l = _this.gates).push.apply(_l, Layer_1.Layer.gate(outputGate, outputGateConnections, GatingType_1.GatingType.OUTPUT));\r\n        (_m = _this.gates).push.apply(_m, Layer_1.Layer.gate(inputGate, inputGateConnections, GatingType_1.GatingType.INPUT));\r\n        (_o = _this.nodes).push.apply(_o, Array.from(_this.inputNodes));\r\n        (_p = _this.nodes).push.apply(_p, inputGate);\r\n        (_q = _this.nodes).push.apply(_q, forgetGate);\r\n        (_r = _this.nodes).push.apply(_r, memoryCell);\r\n        (_s = _this.nodes).push.apply(_s, outputGate);\r\n        (_t = _this.nodes).push.apply(_t, Array.from(_this.outputNodes));\r\n        var activation = Activation_1.Activation.getActivation((_u = options.activationType) !== null && _u !== void 0 ? _u : ActivationType_1.ActivationType.TanhActivation);\r\n        _this.outputNodes.forEach(function (node) { return node.squash = activation; });\r\n        return _this;\r\n    }\r\n    /**\r\n     * Checks if a given connection type is allowed on this layer.\r\n     *\r\n     * @param type the type to check\r\n     *\r\n     * @return Is this connection type allowed?\r\n     */\r\n    LSTMLayer.prototype.connectionTypeisAllowed = function (type) {\r\n        return true;\r\n    };\r\n    /**\r\n     * Gets the default connection type for a incoming connection to this layer.\r\n     *\r\n     * @returns the default incoming connection\r\n     */\r\n    LSTMLayer.prototype.getDefaultIncomingConnectionType = function () {\r\n        return ConnectionType_1.ConnectionType.ALL_TO_ALL;\r\n    };\r\n    return LSTMLayer;\r\n}(Layer_1.Layer));\r\nexports.LSTMLayer = LSTMLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MemoryLayer = void 0;\r\nvar ActivationType_1 = require(\"../../../enums/ActivationType\");\r\nvar ConnectionType_1 = require(\"../../../enums/ConnectionType\");\r\nvar NodeType_1 = require(\"../../../enums/NodeType\");\r\nvar Activation_1 = require(\"../../../methods/Activation\");\r\nvar Node_1 = require(\"../../Node\");\r\nvar Layer_1 = require(\"../Layer\");\r\n/**\r\n * Memory layer\r\n */\r\nvar MemoryLayer = /** @class */ (function (_super) {\r\n    __extends(MemoryLayer, _super);\r\n    function MemoryLayer(outputSize, options) {\r\n        var _a, _b, _c;\r\n        if (options === void 0) { options = {}; }\r\n        var _d, _e;\r\n        var _this = _super.call(this, outputSize) || this;\r\n        for (var i = 0; i < outputSize; i++) {\r\n            _this.inputNodes.add(new Node_1.Node(NodeType_1.NodeType.HIDDEN));\r\n        }\r\n        var prevNodes = Array.from(_this.inputNodes);\r\n        var nodes = [];\r\n        for (var i = 0; i < ((_d = options.memorySize) !== null && _d !== void 0 ? _d : 1); i++) {\r\n            var block = [];\r\n            for (var j = 0; j < outputSize; j++) {\r\n                var node = new Node_1.Node(NodeType_1.NodeType.HIDDEN);\r\n                node.squash = new Activation_1.IdentityActivation();\r\n                node.bias = 0;\r\n                block.push(node);\r\n            }\r\n            (_a = _this.connections).push.apply(_a, Layer_1.Layer.connect(prevNodes, block, ConnectionType_1.ConnectionType.ONE_TO_ONE));\r\n            nodes.push.apply(nodes, block);\r\n            prevNodes = block;\r\n        }\r\n        (_b = _this.nodes).push.apply(_b, Array.from(_this.inputNodes));\r\n        (_c = _this.nodes).push.apply(_c, (nodes.reverse()));\r\n        prevNodes.forEach(function (node) { return _this.outputNodes.add(node); });\r\n        var activation = Activation_1.Activation.getActivation((_e = options.activationType) !== null && _e !== void 0 ? _e : ActivationType_1.ActivationType.LogisticActivation);\r\n        _this.outputNodes.forEach(function (node) { return node.squash = activation; });\r\n        return _this;\r\n    }\r\n    /**\r\n     * Checks if a given connection type is allowed on this layer.\r\n     *\r\n     * @param type the type to check\r\n     *\r\n     * @return Is this connection type allowed?\r\n     */\r\n    MemoryLayer.prototype.connectionTypeisAllowed = function (type) {\r\n        return true;\r\n    };\r\n    /**\r\n     * Gets the default connection type for a incoming connection to this layer.\r\n     *\r\n     * @returns the default incoming connection\r\n     */\r\n    MemoryLayer.prototype.getDefaultIncomingConnectionType = function () {\r\n        return ConnectionType_1.ConnectionType.ALL_TO_ALL;\r\n    };\r\n    return MemoryLayer;\r\n}(Layer_1.Layer));\r\nexports.MemoryLayer = MemoryLayer;\r\n","export function extendSerializer(extend, implementation) {\n    const fallbackDeserializer = extend.deserialize.bind(extend);\n    const fallbackSerializer = extend.serialize.bind(extend);\n    return {\n        deserialize(message) {\n            return implementation.deserialize(message, fallbackDeserializer);\n        },\n        serialize(input) {\n            return implementation.serialize(input, fallbackSerializer);\n        }\n    };\n}\nconst DefaultErrorSerializer = {\n    deserialize(message) {\n        return Object.assign(Error(message.message), {\n            name: message.name,\n            stack: message.stack\n        });\n    },\n    serialize(error) {\n        return {\n            __error_marker: \"$$error\",\n            message: error.message,\n            name: error.name,\n            stack: error.stack\n        };\n    }\n};\nconst isSerializedError = (thing) => thing && typeof thing === \"object\" && \"__error_marker\" in thing && thing.__error_marker === \"$$error\";\nexport const DefaultSerializer = {\n    deserialize(message) {\n        if (isSerializedError(message)) {\n            return DefaultErrorSerializer.deserialize(message);\n        }\n        else {\n            return message;\n        }\n    },\n    serialize(input) {\n        if (input instanceof Error) {\n            return DefaultErrorSerializer.serialize(input);\n        }\n        else {\n            return input;\n        }\n    }\n};\n","import { extendSerializer, DefaultSerializer } from \"./serializers\";\nlet registeredSerializer = DefaultSerializer;\nexport function registerSerializer(serializer) {\n    registeredSerializer = extendSerializer(registeredSerializer, serializer);\n}\nexport function deserialize(message) {\n    return registeredSerializer.deserialize(message);\n}\nexport function serialize(input) {\n    return registeredSerializer.serialize(input);\n}\n","// Source: <https://github.com/parcel-bundler/parcel/blob/master/packages/core/parcel-bundler/src/builtins/bundle-url.js>\nlet bundleURL;\nfunction getBundleURLCached() {\n    if (!bundleURL) {\n        bundleURL = getBundleURL();\n    }\n    return bundleURL;\n}\nfunction getBundleURL() {\n    // Attempt to find the URL of the current script and use that as the base URL\n    try {\n        throw new Error;\n    }\n    catch (err) {\n        const matches = (\"\" + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n        if (matches) {\n            return getBaseURL(matches[0]);\n        }\n    }\n    return \"/\";\n}\nfunction getBaseURL(url) {\n    return (\"\" + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\nexport { getBaseURL, getBundleURLCached as getBundleURL };\n","// tslint:disable max-classes-per-file\nimport { getBundleURL } from \"./get-bundle-url.browser\";\nexport const defaultPoolSize = typeof navigator !== \"undefined\" && navigator.hardwareConcurrency\n    ? navigator.hardwareConcurrency\n    : 4;\nconst isAbsoluteURL = (value) => /^(file|https?:)?\\/\\//i.test(value);\nfunction createSourceBlobURL(code) {\n    const blob = new Blob([code], { type: \"application/javascript\" });\n    return URL.createObjectURL(blob);\n}\nexport function selectWorkerImplementation() {\n    if (typeof Worker === \"undefined\") {\n        // Might happen on Safari, for instance\n        // The idea is to only fail if the constructor is actually used\n        return class NoWebWorker {\n            constructor() {\n                throw Error(\"No web worker implementation available. You might have tried to spawn a worker within a worker in a browser that doesn't support workers in workers.\");\n            }\n        };\n    }\n    return class WebWorker extends Worker {\n        constructor(url, options) {\n            if (typeof url === \"string\" && options && options._baseURL) {\n                url = new URL(url, options._baseURL);\n            }\n            else if (typeof url === \"string\" && !isAbsoluteURL(url) && getBundleURL().match(/^file:\\/\\//i)) {\n                url = new URL(url, getBundleURL().replace(/\\/[^\\/]+$/, \"/\"));\n                url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);\n            }\n            if (typeof url === \"string\" && isAbsoluteURL(url)) {\n                // Create source code blob loading JS file via `importScripts()`\n                // to circumvent worker CORS restrictions\n                url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);\n            }\n            super(url, options);\n        }\n    };\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport class AsyncSerialScheduler {\n    constructor(observer) {\n        this._baseObserver = observer;\n        this._pendingPromises = new Set();\n    }\n    complete() {\n        Promise.all(this._pendingPromises)\n            .then(() => this._baseObserver.complete())\n            .catch(error => this._baseObserver.error(error));\n    }\n    error(error) {\n        this._baseObserver.error(error);\n    }\n    schedule(task) {\n        const prevPromisesCompletion = Promise.all(this._pendingPromises);\n        const values = [];\n        const next = (value) => values.push(value);\n        const promise = Promise.resolve()\n            .then(() => __awaiter(this, void 0, void 0, function* () {\n            yield prevPromisesCompletion;\n            yield task(next);\n            this._pendingPromises.delete(promise);\n            for (const value of values) {\n                this._baseObserver.next(value);\n            }\n        }))\n            .catch(error => {\n            this._pendingPromises.delete(promise);\n            this._baseObserver.error(error);\n        });\n        this._pendingPromises.add(promise);\n    }\n}\n","export const hasSymbols = () => typeof Symbol === \"function\";\nexport const hasSymbol = (name) => hasSymbols() && Boolean(Symbol[name]);\nexport const getSymbol = (name) => hasSymbol(name) ? Symbol[name] : \"@@\" + name;\nexport function registerObservableSymbol() {\n    if (hasSymbols() && !hasSymbol(\"observable\")) {\n        Symbol.observable = Symbol(\"observable\");\n    }\n}\nif (!hasSymbol(\"asyncIterator\")) {\n    Symbol.asyncIterator = Symbol.asyncIterator || Symbol.for(\"Symbol.asyncIterator\");\n}\n","/**\n * Based on <https://raw.githubusercontent.com/zenparsing/zen-observable/master/src/Observable.js>\n * At commit: f63849a8c60af5d514efc8e9d6138d8273c49ad6\n */\n/// <reference path=\"../types/symbols.d.ts\" />\nimport { getSymbol, hasSymbol, hasSymbols } from \"./_symbols\";\nconst SymbolIterator = getSymbol(\"iterator\");\nconst SymbolObservable = getSymbol(\"observable\");\nconst SymbolSpecies = getSymbol(\"species\");\n// === Abstract Operations ===\nfunction getMethod(obj, key) {\n    const value = obj[key];\n    if (value == null) {\n        return undefined;\n    }\n    if (typeof value !== \"function\") {\n        throw new TypeError(value + \" is not a function\");\n    }\n    return value;\n}\nfunction getSpecies(obj) {\n    let ctor = obj.constructor;\n    if (ctor !== undefined) {\n        ctor = ctor[SymbolSpecies];\n        if (ctor === null) {\n            ctor = undefined;\n        }\n    }\n    return ctor !== undefined ? ctor : Observable;\n}\nfunction isObservable(x) {\n    return x instanceof Observable; // SPEC: Brand check\n}\nfunction hostReportError(error) {\n    if (hostReportError.log) {\n        hostReportError.log(error);\n    }\n    else {\n        setTimeout(() => { throw error; }, 0);\n    }\n}\nfunction enqueue(fn) {\n    Promise.resolve().then(() => {\n        try {\n            fn();\n        }\n        catch (e) {\n            hostReportError(e);\n        }\n    });\n}\nfunction cleanupSubscription(subscription) {\n    const cleanup = subscription._cleanup;\n    if (cleanup === undefined) {\n        return;\n    }\n    subscription._cleanup = undefined;\n    if (!cleanup) {\n        return;\n    }\n    try {\n        if (typeof cleanup === \"function\") {\n            cleanup();\n        }\n        else {\n            const unsubscribe = getMethod(cleanup, \"unsubscribe\");\n            if (unsubscribe) {\n                unsubscribe.call(cleanup);\n            }\n        }\n    }\n    catch (e) {\n        hostReportError(e);\n    }\n}\nfunction closeSubscription(subscription) {\n    subscription._observer = undefined;\n    subscription._queue = undefined;\n    subscription._state = \"closed\";\n}\nfunction flushSubscription(subscription) {\n    const queue = subscription._queue;\n    if (!queue) {\n        return;\n    }\n    subscription._queue = undefined;\n    subscription._state = \"ready\";\n    for (const item of queue) {\n        notifySubscription(subscription, item.type, item.value);\n        if (subscription._state === \"closed\") {\n            break;\n        }\n    }\n}\nfunction notifySubscription(subscription, type, value) {\n    subscription._state = \"running\";\n    const observer = subscription._observer;\n    try {\n        const m = observer ? getMethod(observer, type) : undefined;\n        switch (type) {\n            case \"next\":\n                if (m)\n                    m.call(observer, value);\n                break;\n            case \"error\":\n                closeSubscription(subscription);\n                if (m)\n                    m.call(observer, value);\n                else\n                    throw value;\n                break;\n            case \"complete\":\n                closeSubscription(subscription);\n                if (m)\n                    m.call(observer);\n                break;\n        }\n    }\n    catch (e) {\n        hostReportError(e);\n    }\n    if (subscription._state === \"closed\") {\n        cleanupSubscription(subscription);\n    }\n    else if (subscription._state === \"running\") {\n        subscription._state = \"ready\";\n    }\n}\nfunction onNotify(subscription, type, value) {\n    if (subscription._state === \"closed\") {\n        return;\n    }\n    if (subscription._state === \"buffering\") {\n        subscription._queue = subscription._queue || [];\n        subscription._queue.push({ type, value });\n        return;\n    }\n    if (subscription._state !== \"ready\") {\n        subscription._state = \"buffering\";\n        subscription._queue = [{ type, value }];\n        enqueue(() => flushSubscription(subscription));\n        return;\n    }\n    notifySubscription(subscription, type, value);\n}\nexport class Subscription {\n    constructor(observer, subscriber) {\n        // ASSERT: observer is an object\n        // ASSERT: subscriber is callable\n        this._cleanup = undefined;\n        this._observer = observer;\n        this._queue = undefined;\n        this._state = \"initializing\";\n        const subscriptionObserver = new SubscriptionObserver(this);\n        try {\n            this._cleanup = subscriber.call(undefined, subscriptionObserver);\n        }\n        catch (e) {\n            subscriptionObserver.error(e);\n        }\n        if (this._state === \"initializing\") {\n            this._state = \"ready\";\n        }\n    }\n    get closed() {\n        return this._state === \"closed\";\n    }\n    unsubscribe() {\n        if (this._state !== \"closed\") {\n            closeSubscription(this);\n            cleanupSubscription(this);\n        }\n    }\n}\nexport class SubscriptionObserver {\n    constructor(subscription) { this._subscription = subscription; }\n    get closed() { return this._subscription._state === \"closed\"; }\n    next(value) { onNotify(this._subscription, \"next\", value); }\n    error(value) { onNotify(this._subscription, \"error\", value); }\n    complete() { onNotify(this._subscription, \"complete\"); }\n}\n/**\n * The basic Observable class. This primitive is used to wrap asynchronous\n * data streams in a common standardized data type that is interoperable\n * between libraries and can be composed to represent more complex processes.\n */\nexport class Observable {\n    constructor(subscriber) {\n        if (!(this instanceof Observable)) {\n            throw new TypeError(\"Observable cannot be called as a function\");\n        }\n        if (typeof subscriber !== \"function\") {\n            throw new TypeError(\"Observable initializer must be a function\");\n        }\n        this._subscriber = subscriber;\n    }\n    subscribe(nextOrObserver, onError, onComplete) {\n        if (typeof nextOrObserver !== \"object\" || nextOrObserver === null) {\n            nextOrObserver = {\n                next: nextOrObserver,\n                error: onError,\n                complete: onComplete\n            };\n        }\n        return new Subscription(nextOrObserver, this._subscriber);\n    }\n    pipe(first, ...mappers) {\n        // tslint:disable-next-line no-this-assignment\n        let intermediate = this;\n        for (const mapper of [first, ...mappers]) {\n            intermediate = mapper(intermediate);\n        }\n        return intermediate;\n    }\n    tap(nextOrObserver, onError, onComplete) {\n        const tapObserver = typeof nextOrObserver !== \"object\" || nextOrObserver === null\n            ? {\n                next: nextOrObserver,\n                error: onError,\n                complete: onComplete\n            }\n            : nextOrObserver;\n        return new Observable(observer => {\n            return this.subscribe({\n                next(value) {\n                    tapObserver.next && tapObserver.next(value);\n                    observer.next(value);\n                },\n                error(error) {\n                    tapObserver.error && tapObserver.error(error);\n                    observer.error(error);\n                },\n                complete() {\n                    tapObserver.complete && tapObserver.complete();\n                    observer.complete();\n                },\n                start(subscription) {\n                    tapObserver.start && tapObserver.start(subscription);\n                }\n            });\n        });\n    }\n    forEach(fn) {\n        return new Promise((resolve, reject) => {\n            if (typeof fn !== \"function\") {\n                reject(new TypeError(fn + \" is not a function\"));\n                return;\n            }\n            function done() {\n                subscription.unsubscribe();\n                resolve();\n            }\n            const subscription = this.subscribe({\n                next(value) {\n                    try {\n                        fn(value, done);\n                    }\n                    catch (e) {\n                        reject(e);\n                        subscription.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n        });\n    }\n    map(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => this.subscribe({\n            next(value) {\n                let propagatedValue = value;\n                try {\n                    propagatedValue = fn(value);\n                }\n                catch (e) {\n                    return observer.error(e);\n                }\n                observer.next(propagatedValue);\n            },\n            error(e) { observer.error(e); },\n            complete() { observer.complete(); },\n        }));\n    }\n    filter(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => this.subscribe({\n            next(value) {\n                try {\n                    if (!fn(value))\n                        return;\n                }\n                catch (e) {\n                    return observer.error(e);\n                }\n                observer.next(value);\n            },\n            error(e) { observer.error(e); },\n            complete() { observer.complete(); },\n        }));\n    }\n    reduce(fn, seed) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        const hasSeed = arguments.length > 1;\n        let hasValue = false;\n        let acc = seed;\n        return new C(observer => this.subscribe({\n            next(value) {\n                const first = !hasValue;\n                hasValue = true;\n                if (!first || hasSeed) {\n                    try {\n                        acc = fn(acc, value);\n                    }\n                    catch (e) {\n                        return observer.error(e);\n                    }\n                }\n                else {\n                    acc = value;\n                }\n            },\n            error(e) { observer.error(e); },\n            complete() {\n                if (!hasValue && !hasSeed) {\n                    return observer.error(new TypeError(\"Cannot reduce an empty sequence\"));\n                }\n                observer.next(acc);\n                observer.complete();\n            },\n        }));\n    }\n    concat(...sources) {\n        const C = getSpecies(this);\n        return new C(observer => {\n            let subscription;\n            let index = 0;\n            function startNext(next) {\n                subscription = next.subscribe({\n                    next(v) { observer.next(v); },\n                    error(e) { observer.error(e); },\n                    complete() {\n                        if (index === sources.length) {\n                            subscription = undefined;\n                            observer.complete();\n                        }\n                        else {\n                            startNext(C.from(sources[index++]));\n                        }\n                    },\n                });\n            }\n            startNext(this);\n            return () => {\n                if (subscription) {\n                    subscription.unsubscribe();\n                    subscription = undefined;\n                }\n            };\n        });\n    }\n    flatMap(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => {\n            const subscriptions = [];\n            const outer = this.subscribe({\n                next(value) {\n                    let normalizedValue;\n                    if (fn) {\n                        try {\n                            normalizedValue = fn(value);\n                        }\n                        catch (e) {\n                            return observer.error(e);\n                        }\n                    }\n                    else {\n                        normalizedValue = value;\n                    }\n                    const inner = C.from(normalizedValue).subscribe({\n                        next(innerValue) { observer.next(innerValue); },\n                        error(e) { observer.error(e); },\n                        complete() {\n                            const i = subscriptions.indexOf(inner);\n                            if (i >= 0)\n                                subscriptions.splice(i, 1);\n                            completeIfDone();\n                        },\n                    });\n                    subscriptions.push(inner);\n                },\n                error(e) { observer.error(e); },\n                complete() { completeIfDone(); },\n            });\n            function completeIfDone() {\n                if (outer.closed && subscriptions.length === 0) {\n                    observer.complete();\n                }\n            }\n            return () => {\n                subscriptions.forEach(s => s.unsubscribe());\n                outer.unsubscribe();\n            };\n        });\n    }\n    [SymbolObservable]() { return this; }\n    static from(x) {\n        const C = (typeof this === \"function\" ? this : Observable);\n        if (x == null) {\n            throw new TypeError(x + \" is not an object\");\n        }\n        const observableMethod = getMethod(x, SymbolObservable);\n        if (observableMethod) {\n            const observable = observableMethod.call(x);\n            if (Object(observable) !== observable) {\n                throw new TypeError(observable + \" is not an object\");\n            }\n            if (isObservable(observable) && observable.constructor === C) {\n                return observable;\n            }\n            return new C(observer => observable.subscribe(observer));\n        }\n        if (hasSymbol(\"iterator\")) {\n            const iteratorMethod = getMethod(x, SymbolIterator);\n            if (iteratorMethod) {\n                return new C(observer => {\n                    enqueue(() => {\n                        if (observer.closed)\n                            return;\n                        for (const item of iteratorMethod.call(x)) {\n                            observer.next(item);\n                            if (observer.closed)\n                                return;\n                        }\n                        observer.complete();\n                    });\n                });\n            }\n        }\n        if (Array.isArray(x)) {\n            return new C(observer => {\n                enqueue(() => {\n                    if (observer.closed)\n                        return;\n                    for (const item of x) {\n                        observer.next(item);\n                        if (observer.closed)\n                            return;\n                    }\n                    observer.complete();\n                });\n            });\n        }\n        throw new TypeError(x + \" is not observable\");\n    }\n    static of(...items) {\n        const C = (typeof this === \"function\" ? this : Observable);\n        return new C(observer => {\n            enqueue(() => {\n                if (observer.closed)\n                    return;\n                for (const item of items) {\n                    observer.next(item);\n                    if (observer.closed)\n                        return;\n                }\n                observer.complete();\n            });\n        });\n    }\n    static get [SymbolSpecies]() { return this; }\n}\nif (hasSymbols()) {\n    Object.defineProperty(Observable, Symbol(\"extensions\"), {\n        value: {\n            symbol: SymbolObservable,\n            hostReportError,\n        },\n        configurable: true,\n    });\n}\nexport default Observable;\n","/**\n * Unsubscribe from a subscription returned by something that looks like an observable,\n * but is not necessarily our observable implementation.\n */\nfunction unsubscribe(subscription) {\n    if (typeof subscription === \"function\") {\n        subscription();\n    }\n    else if (subscription && typeof subscription.unsubscribe === \"function\") {\n        subscription.unsubscribe();\n    }\n}\nexport default unsubscribe;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncSerialScheduler } from \"./_scheduler\";\nimport Observable from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\n/**\n * Filters the values emitted by another observable.\n * To be applied to an input observable using `pipe()`.\n */\nfunction filter(test) {\n    return (observable) => {\n        return new Observable(observer => {\n            const scheduler = new AsyncSerialScheduler(observer);\n            const subscription = observable.subscribe({\n                complete() {\n                    scheduler.complete();\n                },\n                error(error) {\n                    scheduler.error(error);\n                },\n                next(input) {\n                    scheduler.schedule((next) => __awaiter(this, void 0, void 0, function* () {\n                        if (yield test(input)) {\n                            next(input);\n                        }\n                    }));\n                }\n            });\n            return () => unsubscribe(subscription);\n        });\n    };\n}\nexport default filter;\n","/// <reference lib=\"es2018\" />\nimport { hasSymbol } from \"./_symbols\";\nexport function isAsyncIterator(thing) {\n    return thing && hasSymbol(\"asyncIterator\") && thing[Symbol.asyncIterator];\n}\nexport function isIterator(thing) {\n    return thing && hasSymbol(\"iterator\") && thing[Symbol.iterator];\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { AsyncSerialScheduler } from \"./_scheduler\";\nimport { isAsyncIterator, isIterator } from \"./_util\";\nimport Observable from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\n/**\n * Maps the values emitted by another observable. In contrast to `map()`\n * the `mapper` function returns an array of values that will be emitted\n * separately.\n * Use `flatMap()` to map input values to zero, one or multiple output\n * values. To be applied to an input observable using `pipe()`.\n */\nfunction flatMap(mapper) {\n    return (observable) => {\n        return new Observable(observer => {\n            const scheduler = new AsyncSerialScheduler(observer);\n            const subscription = observable.subscribe({\n                complete() {\n                    scheduler.complete();\n                },\n                error(error) {\n                    scheduler.error(error);\n                },\n                next(input) {\n                    scheduler.schedule((next) => __awaiter(this, void 0, void 0, function* () {\n                        var e_1, _a;\n                        const mapped = yield mapper(input);\n                        if (isIterator(mapped) || isAsyncIterator(mapped)) {\n                            try {\n                                for (var mapped_1 = __asyncValues(mapped), mapped_1_1; mapped_1_1 = yield mapped_1.next(), !mapped_1_1.done;) {\n                                    const element = mapped_1_1.value;\n                                    next(element);\n                                }\n                            }\n                            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                            finally {\n                                try {\n                                    if (mapped_1_1 && !mapped_1_1.done && (_a = mapped_1.return)) yield _a.call(mapped_1);\n                                }\n                                finally { if (e_1) throw e_1.error; }\n                            }\n                        }\n                        else {\n                            mapped.map(output => next(output));\n                        }\n                    }));\n                }\n            });\n            return () => unsubscribe(subscription);\n        });\n    };\n}\nexport default flatMap;\n","import { Observable } from \"./observable\";\n/**\n * Creates an observable that yields a new value every `period` milliseconds.\n * The first value emitted is 0, then 1, 2, etc. The first value is not emitted\n * immediately, but after the first interval.\n */\nexport default function interval(period) {\n    return new Observable(observer => {\n        let counter = 0;\n        const handle = setInterval(() => {\n            observer.next(counter++);\n        }, period);\n        return () => clearInterval(handle);\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncSerialScheduler } from \"./_scheduler\";\nimport Observable from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\n/**\n * Maps the values emitted by another observable to different values.\n * To be applied to an input observable using `pipe()`.\n */\nfunction map(mapper) {\n    return (observable) => {\n        return new Observable(observer => {\n            const scheduler = new AsyncSerialScheduler(observer);\n            const subscription = observable.subscribe({\n                complete() {\n                    scheduler.complete();\n                },\n                error(error) {\n                    scheduler.error(error);\n                },\n                next(input) {\n                    scheduler.schedule((next) => __awaiter(this, void 0, void 0, function* () {\n                        const mapped = yield mapper(input);\n                        next(mapped);\n                    }));\n                }\n            });\n            return () => unsubscribe(subscription);\n        });\n    };\n}\nexport default map;\n","import { Observable } from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\nfunction merge(...observables) {\n    if (observables.length === 0) {\n        return Observable.from([]);\n    }\n    return new Observable(observer => {\n        let completed = 0;\n        const subscriptions = observables.map(input => {\n            return input.subscribe({\n                error(error) {\n                    observer.error(error);\n                    unsubscribeAll();\n                },\n                next(value) {\n                    observer.next(value);\n                },\n                complete() {\n                    if (++completed === observables.length) {\n                        observer.complete();\n                        unsubscribeAll();\n                    }\n                }\n            });\n        });\n        const unsubscribeAll = () => {\n            subscriptions.forEach(subscription => unsubscribe(subscription));\n        };\n        return unsubscribeAll;\n    });\n}\nexport default merge;\n","import Observable from \"./observable\";\n// TODO: This observer iteration approach looks inelegant and expensive\n// Idea: Come up with super class for Subscription that contains the\n//       notify*, ... methods and use it here\n/**\n * A subject is a \"hot\" observable (see `multicast`) that has its observer\n * methods (`.next(value)`, `.error(error)`, `.complete()`) exposed.\n *\n * Be careful, though! With great power comes great responsibility. Only use\n * the `Subject` when you really need to trigger updates \"from the outside\" and\n * try to keep the code that can access it to a minimum. Return\n * `Observable.from(mySubject)` to not allow other code to mutate.\n */\nclass MulticastSubject extends Observable {\n    constructor() {\n        super(observer => {\n            this._observers.add(observer);\n            return () => this._observers.delete(observer);\n        });\n        this._observers = new Set();\n    }\n    next(value) {\n        for (const observer of this._observers) {\n            observer.next(value);\n        }\n    }\n    error(error) {\n        for (const observer of this._observers) {\n            observer.error(error);\n        }\n    }\n    complete() {\n        for (const observer of this._observers) {\n            observer.complete();\n        }\n    }\n}\nexport default MulticastSubject;\n","import Observable from \"./observable\";\nimport Subject from \"./subject\";\nimport unsubscribe from \"./unsubscribe\";\n// TODO: Subject already creates additional observables \"under the hood\",\n//       now we introduce even more. A true native MulticastObservable\n//       would be preferable.\n/**\n * Takes a \"cold\" observable and returns a wrapping \"hot\" observable that\n * proxies the input observable's values and errors.\n *\n * An observable is called \"cold\" when its initialization function is run\n * for each new subscriber. This is how observable-fns's `Observable`\n * implementation works.\n *\n * A hot observable is an observable where new subscribers subscribe to\n * the upcoming values of an already-initialiazed observable.\n *\n * The multicast observable will lazily subscribe to the source observable\n * once it has its first own subscriber and will unsubscribe from the\n * source observable when its last own subscriber unsubscribed.\n */\nfunction multicast(coldObservable) {\n    const subject = new Subject();\n    let sourceSubscription;\n    let subscriberCount = 0;\n    return new Observable(observer => {\n        // Init source subscription lazily\n        if (!sourceSubscription) {\n            sourceSubscription = coldObservable.subscribe(subject);\n        }\n        // Pipe all events from `subject` into this observable\n        const subscription = subject.subscribe(observer);\n        subscriberCount++;\n        return () => {\n            subscriberCount--;\n            subscription.unsubscribe();\n            // Close source subscription once last subscriber has unsubscribed\n            if (subscriberCount === 0) {\n                unsubscribe(sourceSubscription);\n                sourceSubscription = undefined;\n            }\n        };\n    });\n}\nexport default multicast;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncSerialScheduler } from \"./_scheduler\";\nimport Observable from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\nfunction scan(accumulator, seed) {\n    return (observable) => {\n        return new Observable(observer => {\n            let accumulated;\n            let index = 0;\n            const scheduler = new AsyncSerialScheduler(observer);\n            const subscription = observable.subscribe({\n                complete() {\n                    scheduler.complete();\n                },\n                error(error) {\n                    scheduler.error(error);\n                },\n                next(value) {\n                    scheduler.schedule((next) => __awaiter(this, void 0, void 0, function* () {\n                        const prevAcc = index === 0\n                            ? (typeof seed === \"undefined\" ? value : seed)\n                            : accumulated;\n                        accumulated = yield accumulator(prevAcc, value, index++);\n                        next(accumulated);\n                    }));\n                }\n            });\n            return () => unsubscribe(subscription);\n        });\n    };\n}\nexport default scan;\n","export { default as filter } from \"./filter\";\nexport { default as flatMap } from \"./flatMap\";\nexport { default as interval } from \"./interval\";\nexport { default as map } from \"./map\";\nexport { default as merge } from \"./merge\";\nexport { default as multicast } from \"./multicast\";\nexport { default as Observable } from \"./observable\";\nexport { default as scan } from \"./scan\";\nexport { default as Subject } from \"./subject\";\nexport { default as unsubscribe } from \"./unsubscribe\";\n","// Based on <https://github.com/es-shims/Promise.allSettled/blob/master/implementation.js>\nexport function allSettled(values) {\n    return Promise.all(values.map(item => {\n        const onFulfill = (value) => {\n            return { status: 'fulfilled', value };\n        };\n        const onReject = (reason) => {\n            return { status: 'rejected', reason };\n        };\n        const itemPromise = Promise.resolve(item);\n        try {\n            return itemPromise.then(onFulfill, onReject);\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }));\n}\n","/** Pool event type. Specifies the type of each `PoolEvent`. */\nexport var PoolEventType;\n(function (PoolEventType) {\n    PoolEventType[\"initialized\"] = \"initialized\";\n    PoolEventType[\"taskCanceled\"] = \"taskCanceled\";\n    PoolEventType[\"taskCompleted\"] = \"taskCompleted\";\n    PoolEventType[\"taskFailed\"] = \"taskFailed\";\n    PoolEventType[\"taskQueued\"] = \"taskQueued\";\n    PoolEventType[\"taskQueueDrained\"] = \"taskQueueDrained\";\n    PoolEventType[\"taskStart\"] = \"taskStart\";\n    PoolEventType[\"terminated\"] = \"terminated\";\n})(PoolEventType || (PoolEventType = {}));\n","export const $errors = Symbol(\"thread.errors\");\nexport const $events = Symbol(\"thread.events\");\nexport const $terminate = Symbol(\"thread.terminate\");\nexport const $transferable = Symbol(\"thread.transferable\");\nexport const $worker = Symbol(\"thread.worker\");\n","import { $errors, $events, $terminate } from \"../symbols\";\nfunction fail(message) {\n    throw Error(message);\n}\n/** Thread utility functions. Use them to manage or inspect a `spawn()`-ed thread. */\nexport const Thread = {\n    /** Return an observable that can be used to subscribe to all errors happening in the thread. */\n    errors(thread) {\n        return thread[$errors] || fail(\"Error observable not found. Make sure to pass a thread instance as returned by the spawn() promise.\");\n    },\n    /** Return an observable that can be used to subscribe to internal events happening in the thread. Useful for debugging. */\n    events(thread) {\n        return thread[$events] || fail(\"Events observable not found. Make sure to pass a thread instance as returned by the spawn() promise.\");\n    },\n    /** Terminate a thread. Remember to terminate every thread when you are done using it. */\n    terminate(thread) {\n        return thread[$terminate]();\n    }\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport DebugLogger from \"debug\";\nimport { multicast, Observable, Subject } from \"observable-fns\";\nimport { allSettled } from \"../ponyfills\";\nimport { defaultPoolSize } from \"./implementation\";\nimport { PoolEventType } from \"./pool-types\";\nimport { Thread } from \"./thread\";\nexport { PoolEventType, Thread };\nlet nextPoolID = 1;\nfunction createArray(size) {\n    const array = [];\n    for (let index = 0; index < size; index++) {\n        array.push(index);\n    }\n    return array;\n}\nfunction delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nfunction flatMap(array, mapper) {\n    return array.reduce((flattened, element) => [...flattened, ...mapper(element)], []);\n}\nfunction slugify(text) {\n    return text.replace(/\\W/g, \" \").trim().replace(/\\s+/g, \"-\");\n}\nfunction spawnWorkers(spawnWorker, count) {\n    return createArray(count).map(() => ({\n        init: spawnWorker(),\n        runningTasks: []\n    }));\n}\nclass WorkerPool {\n    constructor(spawnWorker, optionsOrSize) {\n        this.eventSubject = new Subject();\n        this.initErrors = [];\n        this.isClosing = false;\n        this.nextTaskID = 1;\n        this.taskQueue = [];\n        const options = typeof optionsOrSize === \"number\"\n            ? { size: optionsOrSize }\n            : optionsOrSize || {};\n        const { size = defaultPoolSize } = options;\n        this.debug = DebugLogger(`threads:pool:${slugify(options.name || String(nextPoolID++))}`);\n        this.options = options;\n        this.workers = spawnWorkers(spawnWorker, size);\n        this.eventObservable = multicast(Observable.from(this.eventSubject));\n        Promise.all(this.workers.map(worker => worker.init)).then(() => this.eventSubject.next({\n            type: PoolEventType.initialized,\n            size: this.workers.length\n        }), error => {\n            this.debug(\"Error while initializing pool worker:\", error);\n            this.eventSubject.error(error);\n            this.initErrors.push(error);\n        });\n    }\n    findIdlingWorker() {\n        const { concurrency = 1 } = this.options;\n        return this.workers.find(worker => worker.runningTasks.length < concurrency);\n    }\n    runPoolTask(worker, task) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const workerID = this.workers.indexOf(worker) + 1;\n            this.debug(`Running task #${task.id} on worker #${workerID}...`);\n            this.eventSubject.next({\n                type: PoolEventType.taskStart,\n                taskID: task.id,\n                workerID\n            });\n            try {\n                const returnValue = yield task.run(yield worker.init);\n                this.debug(`Task #${task.id} completed successfully`);\n                this.eventSubject.next({\n                    type: PoolEventType.taskCompleted,\n                    returnValue,\n                    taskID: task.id,\n                    workerID\n                });\n            }\n            catch (error) {\n                this.debug(`Task #${task.id} failed`);\n                this.eventSubject.next({\n                    type: PoolEventType.taskFailed,\n                    taskID: task.id,\n                    error,\n                    workerID\n                });\n            }\n        });\n    }\n    run(worker, task) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const runPromise = (() => __awaiter(this, void 0, void 0, function* () {\n                const removeTaskFromWorkersRunningTasks = () => {\n                    worker.runningTasks = worker.runningTasks.filter(someRunPromise => someRunPromise !== runPromise);\n                };\n                // Defer task execution by one tick to give handlers time to subscribe\n                yield delay(0);\n                try {\n                    yield this.runPoolTask(worker, task);\n                }\n                finally {\n                    removeTaskFromWorkersRunningTasks();\n                    if (!this.isClosing) {\n                        this.scheduleWork();\n                    }\n                }\n            }))();\n            worker.runningTasks.push(runPromise);\n        });\n    }\n    scheduleWork() {\n        this.debug(`Attempt de-queueing a task in order to run it...`);\n        const availableWorker = this.findIdlingWorker();\n        if (!availableWorker)\n            return;\n        const nextTask = this.taskQueue.shift();\n        if (!nextTask) {\n            this.debug(`Task queue is empty`);\n            this.eventSubject.next({ type: PoolEventType.taskQueueDrained });\n            return;\n        }\n        this.run(availableWorker, nextTask);\n    }\n    taskCompletion(taskID) {\n        return new Promise((resolve, reject) => {\n            const eventSubscription = this.events().subscribe(event => {\n                if (event.type === PoolEventType.taskCompleted && event.taskID === taskID) {\n                    eventSubscription.unsubscribe();\n                    resolve(event.returnValue);\n                }\n                else if (event.type === PoolEventType.taskFailed && event.taskID === taskID) {\n                    eventSubscription.unsubscribe();\n                    reject(event.error);\n                }\n                else if (event.type === PoolEventType.terminated) {\n                    eventSubscription.unsubscribe();\n                    reject(Error(\"Pool has been terminated before task was run.\"));\n                }\n            });\n        });\n    }\n    settled(allowResolvingImmediately = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const getCurrentlyRunningTasks = () => flatMap(this.workers, worker => worker.runningTasks);\n            const taskFailures = [];\n            const failureSubscription = this.eventObservable.subscribe(event => {\n                if (event.type === PoolEventType.taskFailed) {\n                    taskFailures.push(event.error);\n                }\n            });\n            if (this.initErrors.length > 0) {\n                return Promise.reject(this.initErrors[0]);\n            }\n            if (allowResolvingImmediately && this.taskQueue.length === 0) {\n                yield allSettled(getCurrentlyRunningTasks());\n                return taskFailures;\n            }\n            yield new Promise((resolve, reject) => {\n                const subscription = this.eventObservable.subscribe({\n                    next(event) {\n                        if (event.type === PoolEventType.taskQueueDrained) {\n                            subscription.unsubscribe();\n                            resolve();\n                        }\n                    },\n                    error: reject // make a pool-wide error reject the completed() result promise\n                });\n            });\n            yield allSettled(getCurrentlyRunningTasks());\n            failureSubscription.unsubscribe();\n            return taskFailures;\n        });\n    }\n    completed(allowResolvingImmediately = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const settlementPromise = this.settled(allowResolvingImmediately);\n            const earlyExitPromise = new Promise((resolve, reject) => {\n                const subscription = this.eventObservable.subscribe({\n                    next(event) {\n                        if (event.type === PoolEventType.taskQueueDrained) {\n                            subscription.unsubscribe();\n                            resolve(settlementPromise);\n                        }\n                        else if (event.type === PoolEventType.taskFailed) {\n                            subscription.unsubscribe();\n                            reject(event.error);\n                        }\n                    },\n                    error: reject // make a pool-wide error reject the completed() result promise\n                });\n            });\n            const errors = yield Promise.race([\n                settlementPromise,\n                earlyExitPromise\n            ]);\n            if (errors.length > 0) {\n                throw errors[0];\n            }\n        });\n    }\n    events() {\n        return this.eventObservable;\n    }\n    queue(taskFunction) {\n        const { maxQueuedJobs = Infinity } = this.options;\n        if (this.isClosing) {\n            throw Error(`Cannot schedule pool tasks after terminate() has been called.`);\n        }\n        if (this.initErrors.length > 0) {\n            throw this.initErrors[0];\n        }\n        const taskCompleted = () => this.taskCompletion(task.id);\n        let taskCompletionDotThen;\n        const task = {\n            id: this.nextTaskID++,\n            run: taskFunction,\n            cancel: () => {\n                if (this.taskQueue.indexOf(task) === -1)\n                    return;\n                this.taskQueue = this.taskQueue.filter(someTask => someTask !== task);\n                this.eventSubject.next({\n                    type: PoolEventType.taskCanceled,\n                    taskID: task.id\n                });\n            },\n            get then() {\n                if (!taskCompletionDotThen) {\n                    const promise = taskCompleted();\n                    taskCompletionDotThen = promise.then.bind(promise);\n                }\n                return taskCompletionDotThen;\n            }\n        };\n        if (this.taskQueue.length >= maxQueuedJobs) {\n            throw Error(\"Maximum number of pool tasks queued. Refusing to queue another one.\\n\" +\n                \"This usually happens for one of two reasons: We are either at peak \" +\n                \"workload right now or some tasks just won't finish, thus blocking the pool.\");\n        }\n        this.debug(`Queueing task #${task.id}...`);\n        this.taskQueue.push(task);\n        this.eventSubject.next({\n            type: PoolEventType.taskQueued,\n            taskID: task.id\n        });\n        this.scheduleWork();\n        return task;\n    }\n    terminate(force) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.isClosing = true;\n            if (!force) {\n                yield this.completed(true);\n            }\n            this.eventSubject.next({\n                type: PoolEventType.terminated,\n                remainingQueue: [...this.taskQueue]\n            });\n            this.eventSubject.complete();\n            yield Promise.all(this.workers.map((worker) => __awaiter(this, void 0, void 0, function* () { return Thread.terminate(yield worker.init); })));\n        });\n    }\n}\nWorkerPool.EventType = PoolEventType;\n/**\n * Thread pool constructor. Creates a new pool and spawns its worker threads.\n */\nfunction PoolConstructor(spawnWorker, optionsOrSize) {\n    // The function exists only so we don't need to use `new` to create a pool (we still can, though).\n    // If the Pool is a class or not is an implementation detail that should not concern the user.\n    return new WorkerPool(spawnWorker, optionsOrSize);\n}\nPoolConstructor.EventType = PoolEventType;\n/**\n * Thread pool constructor. Creates a new pool and spawns its worker threads.\n */\nexport const Pool = PoolConstructor;\n","const doNothing = () => undefined;\n/**\n * Creates a new promise and exposes its resolver function.\n * Use with care!\n */\nexport function createPromiseWithResolver() {\n    let alreadyResolved = false;\n    let resolvedTo;\n    let resolver = doNothing;\n    const promise = new Promise(resolve => {\n        if (alreadyResolved) {\n            resolve(resolvedTo);\n        }\n        else {\n            resolver = resolve;\n        }\n    });\n    const exposedResolver = (value) => {\n        alreadyResolved = true;\n        resolvedTo = value;\n        resolver();\n    };\n    return [promise, exposedResolver];\n}\n","/// <reference lib=\"dom\" />\nimport { $errors, $events, $terminate, $worker } from \"../symbols\";\n/** Event as emitted by worker thread. Subscribe to using `Thread.events(thread)`. */\nexport var WorkerEventType;\n(function (WorkerEventType) {\n    WorkerEventType[\"internalError\"] = \"internalError\";\n    WorkerEventType[\"message\"] = \"message\";\n    WorkerEventType[\"termination\"] = \"termination\";\n})(WorkerEventType || (WorkerEventType = {}));\n","import { Observable } from \"observable-fns\";\nconst doNothing = () => undefined;\nconst returnInput = (input) => input;\nconst runDeferred = (fn) => Promise.resolve().then(fn);\nfunction fail(error) {\n    throw error;\n}\nfunction isThenable(thing) {\n    return thing && typeof thing.then === \"function\";\n}\n/**\n * Creates a hybrid, combining the APIs of an Observable and a Promise.\n *\n * It is used to proxy async process states when we are initially not sure\n * if that async process will yield values once (-> Promise) or multiple\n * times (-> Observable).\n *\n * Note that the observable promise inherits some of the observable's characteristics:\n * The `init` function will be called *once for every time anyone subscribes to it*.\n *\n * If this is undesired, derive a hot observable from it using `makeHot()` and\n * subscribe to that.\n */\nexport class ObservablePromise extends Observable {\n    constructor(init) {\n        super(originalObserver => {\n            // tslint:disable-next-line no-this-assignment\n            const self = this;\n            const observer = Object.assign(Object.assign({}, originalObserver), { complete() {\n                    originalObserver.complete();\n                    self.onCompletion();\n                },\n                error(error) {\n                    originalObserver.error(error);\n                    self.onError(error);\n                },\n                next(value) {\n                    originalObserver.next(value);\n                    self.onNext(value);\n                } });\n            try {\n                this.initHasRun = true;\n                return init(observer);\n            }\n            catch (error) {\n                observer.error(error);\n            }\n        });\n        this.initHasRun = false;\n        this.fulfillmentCallbacks = [];\n        this.rejectionCallbacks = [];\n        this.firstValueSet = false;\n        this.state = \"pending\";\n    }\n    onNext(value) {\n        if (!this.firstValueSet) {\n            this.firstValue = value;\n            this.firstValueSet = true;\n        }\n    }\n    onError(error) {\n        this.state = \"rejected\";\n        this.rejection = error;\n        for (const onRejected of this.rejectionCallbacks) {\n            // Promisifying the call to turn errors into unhandled promise rejections\n            // instead of them failing sync and cancelling the iteration\n            runDeferred(() => onRejected(error));\n        }\n    }\n    onCompletion() {\n        this.state = \"fulfilled\";\n        for (const onFulfilled of this.fulfillmentCallbacks) {\n            // Promisifying the call to turn errors into unhandled promise rejections\n            // instead of them failing sync and cancelling the iteration\n            runDeferred(() => onFulfilled(this.firstValue));\n        }\n    }\n    then(onFulfilledRaw, onRejectedRaw) {\n        const onFulfilled = onFulfilledRaw || returnInput;\n        const onRejected = onRejectedRaw || fail;\n        let onRejectedCalled = false;\n        return new Promise((resolve, reject) => {\n            const rejectionCallback = (error) => {\n                if (onRejectedCalled)\n                    return;\n                onRejectedCalled = true;\n                try {\n                    resolve(onRejected(error));\n                }\n                catch (anotherError) {\n                    reject(anotherError);\n                }\n            };\n            const fulfillmentCallback = (value) => {\n                try {\n                    resolve(onFulfilled(value));\n                }\n                catch (error) {\n                    rejectionCallback(error);\n                }\n            };\n            if (!this.initHasRun) {\n                this.subscribe({ error: rejectionCallback });\n            }\n            if (this.state === \"fulfilled\") {\n                return resolve(onFulfilled(this.firstValue));\n            }\n            if (this.state === \"rejected\") {\n                onRejectedCalled = true;\n                return resolve(onRejected(this.rejection));\n            }\n            this.fulfillmentCallbacks.push(fulfillmentCallback);\n            this.rejectionCallbacks.push(rejectionCallback);\n        });\n    }\n    catch(onRejected) {\n        return this.then(undefined, onRejected);\n    }\n    finally(onCompleted) {\n        const handler = onCompleted || doNothing;\n        return this.then((value) => {\n            handler();\n            return value;\n        }, () => handler());\n    }\n    static from(thing) {\n        if (isThenable(thing)) {\n            return new ObservablePromise(observer => {\n                const onFulfilled = (value) => {\n                    observer.next(value);\n                    observer.complete();\n                };\n                const onRejected = (error) => {\n                    observer.error(error);\n                };\n                thing.then(onFulfilled, onRejected);\n            });\n        }\n        else {\n            return super.from(thing);\n        }\n    }\n}\n","import { $transferable } from \"./symbols\";\nfunction isTransferable(thing) {\n    if (!thing || typeof thing !== \"object\")\n        return false;\n    // Don't check too thoroughly, since the list of transferable things in JS might grow over time\n    return true;\n}\nexport function isTransferDescriptor(thing) {\n    return thing && typeof thing === \"object\" && thing[$transferable];\n}\nexport function Transfer(payload, transferables) {\n    if (!transferables) {\n        if (!isTransferable(payload))\n            throw Error();\n        transferables = [payload];\n    }\n    return {\n        [$transferable]: true,\n        send: payload,\n        transferables\n    };\n}\n","/////////////////////////////\n// Messages sent by master:\nexport var MasterMessageType;\n(function (MasterMessageType) {\n    MasterMessageType[\"run\"] = \"run\";\n})(MasterMessageType || (MasterMessageType = {}));\n////////////////////////////\n// Messages sent by worker:\nexport var WorkerMessageType;\n(function (WorkerMessageType) {\n    WorkerMessageType[\"error\"] = \"error\";\n    WorkerMessageType[\"init\"] = \"init\";\n    WorkerMessageType[\"result\"] = \"result\";\n    WorkerMessageType[\"running\"] = \"running\";\n    WorkerMessageType[\"uncaughtError\"] = \"uncaughtError\";\n})(WorkerMessageType || (WorkerMessageType = {}));\n","/*\n * This source file contains the code for proxying calls in the master thread to calls in the workers\n * by `.postMessage()`-ing.\n *\n * Keep in mind that this code can make or break the program's performance! Need to optimize more…\n */\nimport DebugLogger from \"debug\";\nimport { multicast, Observable } from \"observable-fns\";\nimport { deserialize, serialize } from \"../common\";\nimport { ObservablePromise } from \"../observable-promise\";\nimport { isTransferDescriptor } from \"../transferable\";\nimport { MasterMessageType, WorkerMessageType } from \"../types/messages\";\nconst debugMessages = DebugLogger(\"threads:master:messages\");\nlet nextJobUID = 1;\nconst dedupe = (array) => Array.from(new Set(array));\nconst isJobErrorMessage = (data) => data && data.type === WorkerMessageType.error;\nconst isJobResultMessage = (data) => data && data.type === WorkerMessageType.result;\nconst isJobStartMessage = (data) => data && data.type === WorkerMessageType.running;\nfunction createObservableForJob(worker, jobUID) {\n    return new Observable(observer => {\n        let asyncType;\n        const messageHandler = ((event) => {\n            debugMessages(\"Message from worker:\", event.data);\n            if (!event.data || event.data.uid !== jobUID)\n                return;\n            if (isJobStartMessage(event.data)) {\n                asyncType = event.data.resultType;\n            }\n            else if (isJobResultMessage(event.data)) {\n                if (asyncType === \"promise\") {\n                    if (typeof event.data.payload !== \"undefined\") {\n                        observer.next(deserialize(event.data.payload));\n                    }\n                    observer.complete();\n                    worker.removeEventListener(\"message\", messageHandler);\n                }\n                else {\n                    if (event.data.payload) {\n                        observer.next(deserialize(event.data.payload));\n                    }\n                    if (event.data.complete) {\n                        observer.complete();\n                        worker.removeEventListener(\"message\", messageHandler);\n                    }\n                }\n            }\n            else if (isJobErrorMessage(event.data)) {\n                const error = deserialize(event.data.error);\n                if (asyncType === \"promise\" || !asyncType) {\n                    observer.error(error);\n                }\n                else {\n                    observer.error(error);\n                }\n                worker.removeEventListener(\"message\", messageHandler);\n            }\n        });\n        worker.addEventListener(\"message\", messageHandler);\n        return () => worker.removeEventListener(\"message\", messageHandler);\n    });\n}\nfunction prepareArguments(rawArgs) {\n    if (rawArgs.length === 0) {\n        // Exit early if possible\n        return {\n            args: [],\n            transferables: []\n        };\n    }\n    const args = [];\n    const transferables = [];\n    for (const arg of rawArgs) {\n        if (isTransferDescriptor(arg)) {\n            args.push(serialize(arg.send));\n            transferables.push(...arg.transferables);\n        }\n        else {\n            args.push(serialize(arg));\n        }\n    }\n    return {\n        args,\n        transferables: transferables.length === 0 ? transferables : dedupe(transferables)\n    };\n}\nexport function createProxyFunction(worker, method) {\n    return ((...rawArgs) => {\n        const uid = nextJobUID++;\n        const { args, transferables } = prepareArguments(rawArgs);\n        const runMessage = {\n            type: MasterMessageType.run,\n            uid,\n            method,\n            args\n        };\n        debugMessages(\"Sending command to run function to worker:\", runMessage);\n        try {\n            worker.postMessage(runMessage, transferables);\n        }\n        catch (error) {\n            return ObservablePromise.from(Promise.reject(error));\n        }\n        return ObservablePromise.from(multicast(createObservableForJob(worker, uid)));\n    });\n}\nexport function createProxyModule(worker, methodNames) {\n    const proxy = {};\n    for (const methodName of methodNames) {\n        proxy[methodName] = createProxyFunction(worker, methodName);\n    }\n    return proxy;\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport DebugLogger from \"debug\";\nimport { Observable } from \"observable-fns\";\nimport { deserialize } from \"../common\";\nimport { createPromiseWithResolver } from \"../promise\";\nimport { $errors, $events, $terminate, $worker } from \"../symbols\";\nimport { WorkerEventType } from \"../types/master\";\nimport { createProxyFunction, createProxyModule } from \"./invocation-proxy\";\nconst debugMessages = DebugLogger(\"threads:master:messages\");\nconst debugSpawn = DebugLogger(\"threads:master:spawn\");\nconst debugThreadUtils = DebugLogger(\"threads:master:thread-utils\");\nconst isInitMessage = (data) => data && data.type === \"init\";\nconst isUncaughtErrorMessage = (data) => data && data.type === \"uncaughtError\";\nconst initMessageTimeout = typeof process !== \"undefined\" && process.env.THREADS_WORKER_INIT_TIMEOUT\n    ? Number.parseInt(process.env.THREADS_WORKER_INIT_TIMEOUT, 10)\n    : 10000;\nfunction withTimeout(promise, timeoutInMs, errorMessage) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let timeoutHandle;\n        const timeout = new Promise((resolve, reject) => {\n            timeoutHandle = setTimeout(() => reject(Error(errorMessage)), timeoutInMs);\n        });\n        const result = yield Promise.race([\n            promise,\n            timeout\n        ]);\n        clearTimeout(timeoutHandle);\n        return result;\n    });\n}\nfunction receiveInitMessage(worker) {\n    return new Promise((resolve, reject) => {\n        const messageHandler = ((event) => {\n            debugMessages(\"Message from worker before finishing initialization:\", event.data);\n            if (isInitMessage(event.data)) {\n                worker.removeEventListener(\"message\", messageHandler);\n                resolve(event.data);\n            }\n            else if (isUncaughtErrorMessage(event.data)) {\n                worker.removeEventListener(\"message\", messageHandler);\n                reject(deserialize(event.data.error));\n            }\n        });\n        worker.addEventListener(\"message\", messageHandler);\n    });\n}\nfunction createEventObservable(worker, workerTermination) {\n    return new Observable(observer => {\n        const messageHandler = ((messageEvent) => {\n            const workerEvent = {\n                type: WorkerEventType.message,\n                data: messageEvent.data\n            };\n            observer.next(workerEvent);\n        });\n        const rejectionHandler = ((errorEvent) => {\n            debugThreadUtils(\"Unhandled promise rejection event in thread:\", errorEvent);\n            const workerEvent = {\n                type: WorkerEventType.internalError,\n                error: Error(errorEvent.reason)\n            };\n            observer.next(workerEvent);\n        });\n        worker.addEventListener(\"message\", messageHandler);\n        worker.addEventListener(\"unhandledrejection\", rejectionHandler);\n        workerTermination.then(() => {\n            const terminationEvent = {\n                type: WorkerEventType.termination\n            };\n            worker.removeEventListener(\"message\", messageHandler);\n            worker.removeEventListener(\"unhandledrejection\", rejectionHandler);\n            observer.next(terminationEvent);\n            observer.complete();\n        });\n    });\n}\nfunction createTerminator(worker) {\n    const [termination, resolver] = createPromiseWithResolver();\n    const terminate = () => __awaiter(this, void 0, void 0, function* () {\n        debugThreadUtils(\"Terminating worker\");\n        // Newer versions of worker_threads workers return a promise\n        yield worker.terminate();\n        resolver();\n    });\n    return { terminate, termination };\n}\nfunction setPrivateThreadProps(raw, worker, workerEvents, terminate) {\n    const workerErrors = workerEvents\n        .filter(event => event.type === WorkerEventType.internalError)\n        .map(errorEvent => errorEvent.error);\n    // tslint:disable-next-line prefer-object-spread\n    return Object.assign(raw, {\n        [$errors]: workerErrors,\n        [$events]: workerEvents,\n        [$terminate]: terminate,\n        [$worker]: worker\n    });\n}\n/**\n * Spawn a new thread. Takes a fresh worker instance, wraps it in a thin\n * abstraction layer to provide the transparent API and verifies that\n * the worker has initialized successfully.\n *\n * @param worker Instance of `Worker`. Either a web worker, `worker_threads` worker or `tiny-worker` worker.\n * @param [options]\n * @param [options.timeout] Init message timeout. Default: 10000 or set by environment variable.\n */\nexport function spawn(worker, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        debugSpawn(\"Initializing new thread\");\n        const initMessage = yield withTimeout(receiveInitMessage(worker), options && options.timeout ? options.timeout : initMessageTimeout, `Timeout: Did not receive an init message from worker after ${initMessageTimeout}ms. Make sure the worker calls expose().`);\n        const exposed = initMessage.exposed;\n        const { termination, terminate } = createTerminator(worker);\n        const events = createEventObservable(worker, termination);\n        if (exposed.type === \"function\") {\n            const proxy = createProxyFunction(worker);\n            return setPrivateThreadProps(proxy, worker, events, terminate);\n        }\n        else if (exposed.type === \"module\") {\n            const proxy = createProxyModule(worker, exposed.methods);\n            return setPrivateThreadProps(proxy, worker, events, terminate);\n        }\n        else {\n            const type = exposed.type;\n            throw Error(`Worker init message states unexpected type of expose(): ${type}`);\n        }\n    });\n}\n","import { selectWorkerImplementation } from \"./implementation\";\nexport { Pool } from \"./pool\";\nexport { spawn } from \"./spawn\";\nexport { Thread } from \"./thread\";\n/** Worker implementation. Either web worker or a node.js Worker class. */\nexport const Worker = selectWorkerImplementation();\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","'use strict';\nconst symbolObservable = require('symbol-observable').default;\n\nmodule.exports = value => Boolean(value && value[symbolObservable] && value === value[symbolObservable]());\n","/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nconst isWorkerRuntime = function isWorkerRuntime() {\n    return typeof self !== \"undefined\" && self.postMessage ? true : false;\n};\nconst postMessageToMaster = function postMessageToMaster(data, transferList) {\n    self.postMessage(data, transferList);\n};\nconst subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n    const messageHandler = (messageEvent) => {\n        onMessage(messageEvent.data);\n    };\n    const unsubscribe = () => {\n        self.removeEventListener(\"message\", messageHandler);\n    };\n    self.addEventListener(\"message\", messageHandler);\n    return unsubscribe;\n};\nexport default {\n    isWorkerRuntime,\n    postMessageToMaster,\n    subscribeToMasterMessages\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport isSomeObservable from \"is-observable\";\nimport { deserialize, serialize } from \"../common\";\nimport { isTransferDescriptor } from \"../transferable\";\nimport { MasterMessageType, WorkerMessageType } from \"../types/messages\";\nimport Implementation from \"./implementation\";\nexport { registerSerializer } from \"../common\";\nexport { Transfer } from \"../transferable\";\nlet exposeCalled = false;\nconst isMasterJobRunMessage = (thing) => thing && thing.type === MasterMessageType.run;\n/**\n * There are issues with `is-observable` not recognizing zen-observable's instances.\n * We are using `observable-fns`, but it's based on zen-observable, too.\n */\nconst isObservable = (thing) => isSomeObservable(thing) || isZenObservable(thing);\nfunction isZenObservable(thing) {\n    return thing && typeof thing === \"object\" && typeof thing.subscribe === \"function\";\n}\nfunction deconstructTransfer(thing) {\n    return isTransferDescriptor(thing)\n        ? { payload: thing.send, transferables: thing.transferables }\n        : { payload: thing, transferables: undefined };\n}\nfunction postFunctionInitMessage() {\n    const initMessage = {\n        type: WorkerMessageType.init,\n        exposed: {\n            type: \"function\"\n        }\n    };\n    Implementation.postMessageToMaster(initMessage);\n}\nfunction postModuleInitMessage(methodNames) {\n    const initMessage = {\n        type: WorkerMessageType.init,\n        exposed: {\n            type: \"module\",\n            methods: methodNames\n        }\n    };\n    Implementation.postMessageToMaster(initMessage);\n}\nfunction postJobErrorMessage(uid, rawError) {\n    const { payload: error, transferables } = deconstructTransfer(rawError);\n    const errorMessage = {\n        type: WorkerMessageType.error,\n        uid,\n        error: serialize(error)\n    };\n    Implementation.postMessageToMaster(errorMessage, transferables);\n}\nfunction postJobResultMessage(uid, completed, resultValue) {\n    const { payload, transferables } = deconstructTransfer(resultValue);\n    const resultMessage = {\n        type: WorkerMessageType.result,\n        uid,\n        complete: completed ? true : undefined,\n        payload\n    };\n    Implementation.postMessageToMaster(resultMessage, transferables);\n}\nfunction postJobStartMessage(uid, resultType) {\n    const startMessage = {\n        type: WorkerMessageType.running,\n        uid,\n        resultType\n    };\n    Implementation.postMessageToMaster(startMessage);\n}\nfunction postUncaughtErrorMessage(error) {\n    try {\n        const errorMessage = {\n            type: WorkerMessageType.uncaughtError,\n            error: serialize(error)\n        };\n        Implementation.postMessageToMaster(errorMessage);\n    }\n    catch (subError) {\n        // tslint:disable-next-line no-console\n        console.error(\"Not reporting uncaught error back to master thread as it \" +\n            \"occured while reporting an uncaught error already.\" +\n            \"\\nLatest error:\", subError, \"\\nOriginal error:\", error);\n    }\n}\nfunction runFunction(jobUID, fn, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let syncResult;\n        try {\n            syncResult = fn(...args);\n        }\n        catch (error) {\n            return postJobErrorMessage(jobUID, error);\n        }\n        const resultType = isObservable(syncResult) ? \"observable\" : \"promise\";\n        postJobStartMessage(jobUID, resultType);\n        if (isObservable(syncResult)) {\n            syncResult.subscribe(value => postJobResultMessage(jobUID, false, serialize(value)), error => postJobErrorMessage(jobUID, serialize(error)), () => postJobResultMessage(jobUID, true));\n        }\n        else {\n            try {\n                const result = yield syncResult;\n                postJobResultMessage(jobUID, true, serialize(result));\n            }\n            catch (error) {\n                postJobErrorMessage(jobUID, serialize(error));\n            }\n        }\n    });\n}\n/**\n * Expose a function or a module (an object whose values are functions)\n * to the main thread. Must be called exactly once in every worker thread\n * to signal its API to the main thread.\n *\n * @param exposed Function or object whose values are functions\n */\nexport function expose(exposed) {\n    if (!Implementation.isWorkerRuntime()) {\n        throw Error(\"expose() called in the master thread.\");\n    }\n    if (exposeCalled) {\n        throw Error(\"expose() called more than once. This is not possible. Pass an object to expose() if you want to expose multiple functions.\");\n    }\n    exposeCalled = true;\n    if (typeof exposed === \"function\") {\n        Implementation.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && !messageData.method) {\n                runFunction(messageData.uid, exposed, messageData.args.map(deserialize));\n            }\n        });\n        postFunctionInitMessage();\n    }\n    else if (typeof exposed === \"object\" && exposed) {\n        Implementation.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && messageData.method) {\n                runFunction(messageData.uid, exposed[messageData.method], messageData.args.map(deserialize));\n            }\n        });\n        const methodNames = Object.keys(exposed).filter(key => typeof exposed[key] === \"function\");\n        postModuleInitMessage(methodNames);\n    }\n    else {\n        throw Error(`Invalid argument passed to expose(). Expected a function or an object, got: ${exposed}`);\n    }\n}\nif (typeof self !== \"undefined\" && typeof self.addEventListener === \"function\" && Implementation.isWorkerRuntime()) {\n    self.addEventListener(\"error\", event => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(event.error || event), 250);\n    });\n    self.addEventListener(\"unhandledrejection\", event => {\n        const error = event.reason;\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\nif (typeof process !== \"undefined\" && typeof process.on === \"function\" && Implementation.isWorkerRuntime()) {\n    process.on(\"uncaughtException\", (error) => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(error), 250);\n    });\n    process.on(\"unhandledRejection\", (error) => {\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\n","export { registerSerializer } from \"./common\";\nexport * from \"./master/index\";\nexport { expose } from \"./worker/index\";\nexport { DefaultSerializer } from \"./serializers\";\nexport { Transfer } from \"./transferable\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction extendSerializer(extend, implementation) {\n    const fallbackDeserializer = extend.deserialize.bind(extend);\n    const fallbackSerializer = extend.serialize.bind(extend);\n    return {\n        deserialize(message) {\n            return implementation.deserialize(message, fallbackDeserializer);\n        },\n        serialize(input) {\n            return implementation.serialize(input, fallbackSerializer);\n        }\n    };\n}\nexports.extendSerializer = extendSerializer;\nconst DefaultErrorSerializer = {\n    deserialize(message) {\n        return Object.assign(Error(message.message), {\n            name: message.name,\n            stack: message.stack\n        });\n    },\n    serialize(error) {\n        return {\n            __error_marker: \"$$error\",\n            message: error.message,\n            name: error.name,\n            stack: error.stack\n        };\n    }\n};\nconst isSerializedError = (thing) => thing && typeof thing === \"object\" && \"__error_marker\" in thing && thing.__error_marker === \"$$error\";\nexports.DefaultSerializer = {\n    deserialize(message) {\n        if (isSerializedError(message)) {\n            return DefaultErrorSerializer.deserialize(message);\n        }\n        else {\n            return message;\n        }\n    },\n    serialize(input) {\n        if (input instanceof Error) {\n            return DefaultErrorSerializer.serialize(input);\n        }\n        else {\n            return input;\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst serializers_1 = require(\"./serializers\");\nlet registeredSerializer = serializers_1.DefaultSerializer;\nfunction registerSerializer(serializer) {\n    registeredSerializer = serializers_1.extendSerializer(registeredSerializer, serializer);\n}\nexports.registerSerializer = registerSerializer;\nfunction deserialize(message) {\n    return registeredSerializer.deserialize(message);\n}\nexports.deserialize = deserialize;\nfunction serialize(input) {\n    return registeredSerializer.serialize(input);\n}\nexports.serialize = serialize;\n","\"use strict\";\n// Source: <https://github.com/parcel-bundler/parcel/blob/master/packages/core/parcel-bundler/src/builtins/bundle-url.js>\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet bundleURL;\nfunction getBundleURLCached() {\n    if (!bundleURL) {\n        bundleURL = getBundleURL();\n    }\n    return bundleURL;\n}\nexports.getBundleURL = getBundleURLCached;\nfunction getBundleURL() {\n    // Attempt to find the URL of the current script and use that as the base URL\n    try {\n        throw new Error;\n    }\n    catch (err) {\n        const matches = (\"\" + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n        if (matches) {\n            return getBaseURL(matches[0]);\n        }\n    }\n    return \"/\";\n}\nfunction getBaseURL(url) {\n    return (\"\" + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\nexports.getBaseURL = getBaseURL;\n","\"use strict\";\n// tslint:disable max-classes-per-file\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst get_bundle_url_browser_1 = require(\"./get-bundle-url.browser\");\nexports.defaultPoolSize = typeof navigator !== \"undefined\" && navigator.hardwareConcurrency\n    ? navigator.hardwareConcurrency\n    : 4;\nconst isAbsoluteURL = (value) => /^(file|https?:)?\\/\\//i.test(value);\nfunction createSourceBlobURL(code) {\n    const blob = new Blob([code], { type: \"application/javascript\" });\n    return URL.createObjectURL(blob);\n}\nfunction selectWorkerImplementation() {\n    if (typeof Worker === \"undefined\") {\n        // Might happen on Safari, for instance\n        // The idea is to only fail if the constructor is actually used\n        return class NoWebWorker {\n            constructor() {\n                throw Error(\"No web worker implementation available. You might have tried to spawn a worker within a worker in a browser that doesn't support workers in workers.\");\n            }\n        };\n    }\n    return class WebWorker extends Worker {\n        constructor(url, options) {\n            if (typeof url === \"string\" && options && options._baseURL) {\n                url = new URL(url, options._baseURL);\n            }\n            else if (typeof url === \"string\" && !isAbsoluteURL(url) && get_bundle_url_browser_1.getBundleURL().match(/^file:\\/\\//i)) {\n                url = new URL(url, get_bundle_url_browser_1.getBundleURL().replace(/\\/[^\\/]+$/, \"/\"));\n                url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);\n            }\n            if (typeof url === \"string\" && isAbsoluteURL(url)) {\n                // Create source code blob loading JS file via `importScripts()`\n                // to circumvent worker CORS restrictions\n                url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);\n            }\n            super(url, options);\n        }\n    };\n}\nexports.selectWorkerImplementation = selectWorkerImplementation;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Based on <https://github.com/es-shims/Promise.allSettled/blob/master/implementation.js>\nfunction allSettled(values) {\n    return Promise.all(values.map(item => {\n        const onFulfill = (value) => {\n            return { status: 'fulfilled', value };\n        };\n        const onReject = (reason) => {\n            return { status: 'rejected', reason };\n        };\n        const itemPromise = Promise.resolve(item);\n        try {\n            return itemPromise.then(onFulfill, onReject);\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }));\n}\nexports.allSettled = allSettled;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Pool event type. Specifies the type of each `PoolEvent`. */\nvar PoolEventType;\n(function (PoolEventType) {\n    PoolEventType[\"initialized\"] = \"initialized\";\n    PoolEventType[\"taskCanceled\"] = \"taskCanceled\";\n    PoolEventType[\"taskCompleted\"] = \"taskCompleted\";\n    PoolEventType[\"taskFailed\"] = \"taskFailed\";\n    PoolEventType[\"taskQueued\"] = \"taskQueued\";\n    PoolEventType[\"taskQueueDrained\"] = \"taskQueueDrained\";\n    PoolEventType[\"taskStart\"] = \"taskStart\";\n    PoolEventType[\"terminated\"] = \"terminated\";\n})(PoolEventType = exports.PoolEventType || (exports.PoolEventType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.$errors = Symbol(\"thread.errors\");\nexports.$events = Symbol(\"thread.events\");\nexports.$terminate = Symbol(\"thread.terminate\");\nexports.$transferable = Symbol(\"thread.transferable\");\nexports.$worker = Symbol(\"thread.worker\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst symbols_1 = require(\"../symbols\");\nfunction fail(message) {\n    throw Error(message);\n}\n/** Thread utility functions. Use them to manage or inspect a `spawn()`-ed thread. */\nexports.Thread = {\n    /** Return an observable that can be used to subscribe to all errors happening in the thread. */\n    errors(thread) {\n        return thread[symbols_1.$errors] || fail(\"Error observable not found. Make sure to pass a thread instance as returned by the spawn() promise.\");\n    },\n    /** Return an observable that can be used to subscribe to internal events happening in the thread. Useful for debugging. */\n    events(thread) {\n        return thread[symbols_1.$events] || fail(\"Events observable not found. Make sure to pass a thread instance as returned by the spawn() promise.\");\n    },\n    /** Terminate a thread. Remember to terminate every thread when you are done using it. */\n    terminate(thread) {\n        return thread[symbols_1.$terminate]();\n    }\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst debug_1 = __importDefault(require(\"debug\"));\nconst observable_fns_1 = require(\"observable-fns\");\nconst ponyfills_1 = require(\"../ponyfills\");\nconst implementation_1 = require(\"./implementation\");\nconst pool_types_1 = require(\"./pool-types\");\nexports.PoolEventType = pool_types_1.PoolEventType;\nconst thread_1 = require(\"./thread\");\nexports.Thread = thread_1.Thread;\nlet nextPoolID = 1;\nfunction createArray(size) {\n    const array = [];\n    for (let index = 0; index < size; index++) {\n        array.push(index);\n    }\n    return array;\n}\nfunction delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nfunction flatMap(array, mapper) {\n    return array.reduce((flattened, element) => [...flattened, ...mapper(element)], []);\n}\nfunction slugify(text) {\n    return text.replace(/\\W/g, \" \").trim().replace(/\\s+/g, \"-\");\n}\nfunction spawnWorkers(spawnWorker, count) {\n    return createArray(count).map(() => ({\n        init: spawnWorker(),\n        runningTasks: []\n    }));\n}\nclass WorkerPool {\n    constructor(spawnWorker, optionsOrSize) {\n        this.eventSubject = new observable_fns_1.Subject();\n        this.initErrors = [];\n        this.isClosing = false;\n        this.nextTaskID = 1;\n        this.taskQueue = [];\n        const options = typeof optionsOrSize === \"number\"\n            ? { size: optionsOrSize }\n            : optionsOrSize || {};\n        const { size = implementation_1.defaultPoolSize } = options;\n        this.debug = debug_1.default(`threads:pool:${slugify(options.name || String(nextPoolID++))}`);\n        this.options = options;\n        this.workers = spawnWorkers(spawnWorker, size);\n        this.eventObservable = observable_fns_1.multicast(observable_fns_1.Observable.from(this.eventSubject));\n        Promise.all(this.workers.map(worker => worker.init)).then(() => this.eventSubject.next({\n            type: pool_types_1.PoolEventType.initialized,\n            size: this.workers.length\n        }), error => {\n            this.debug(\"Error while initializing pool worker:\", error);\n            this.eventSubject.error(error);\n            this.initErrors.push(error);\n        });\n    }\n    findIdlingWorker() {\n        const { concurrency = 1 } = this.options;\n        return this.workers.find(worker => worker.runningTasks.length < concurrency);\n    }\n    runPoolTask(worker, task) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const workerID = this.workers.indexOf(worker) + 1;\n            this.debug(`Running task #${task.id} on worker #${workerID}...`);\n            this.eventSubject.next({\n                type: pool_types_1.PoolEventType.taskStart,\n                taskID: task.id,\n                workerID\n            });\n            try {\n                const returnValue = yield task.run(yield worker.init);\n                this.debug(`Task #${task.id} completed successfully`);\n                this.eventSubject.next({\n                    type: pool_types_1.PoolEventType.taskCompleted,\n                    returnValue,\n                    taskID: task.id,\n                    workerID\n                });\n            }\n            catch (error) {\n                this.debug(`Task #${task.id} failed`);\n                this.eventSubject.next({\n                    type: pool_types_1.PoolEventType.taskFailed,\n                    taskID: task.id,\n                    error,\n                    workerID\n                });\n            }\n        });\n    }\n    run(worker, task) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const runPromise = (() => __awaiter(this, void 0, void 0, function* () {\n                const removeTaskFromWorkersRunningTasks = () => {\n                    worker.runningTasks = worker.runningTasks.filter(someRunPromise => someRunPromise !== runPromise);\n                };\n                // Defer task execution by one tick to give handlers time to subscribe\n                yield delay(0);\n                try {\n                    yield this.runPoolTask(worker, task);\n                }\n                finally {\n                    removeTaskFromWorkersRunningTasks();\n                    if (!this.isClosing) {\n                        this.scheduleWork();\n                    }\n                }\n            }))();\n            worker.runningTasks.push(runPromise);\n        });\n    }\n    scheduleWork() {\n        this.debug(`Attempt de-queueing a task in order to run it...`);\n        const availableWorker = this.findIdlingWorker();\n        if (!availableWorker)\n            return;\n        const nextTask = this.taskQueue.shift();\n        if (!nextTask) {\n            this.debug(`Task queue is empty`);\n            this.eventSubject.next({ type: pool_types_1.PoolEventType.taskQueueDrained });\n            return;\n        }\n        this.run(availableWorker, nextTask);\n    }\n    taskCompletion(taskID) {\n        return new Promise((resolve, reject) => {\n            const eventSubscription = this.events().subscribe(event => {\n                if (event.type === pool_types_1.PoolEventType.taskCompleted && event.taskID === taskID) {\n                    eventSubscription.unsubscribe();\n                    resolve(event.returnValue);\n                }\n                else if (event.type === pool_types_1.PoolEventType.taskFailed && event.taskID === taskID) {\n                    eventSubscription.unsubscribe();\n                    reject(event.error);\n                }\n                else if (event.type === pool_types_1.PoolEventType.terminated) {\n                    eventSubscription.unsubscribe();\n                    reject(Error(\"Pool has been terminated before task was run.\"));\n                }\n            });\n        });\n    }\n    settled(allowResolvingImmediately = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const getCurrentlyRunningTasks = () => flatMap(this.workers, worker => worker.runningTasks);\n            const taskFailures = [];\n            const failureSubscription = this.eventObservable.subscribe(event => {\n                if (event.type === pool_types_1.PoolEventType.taskFailed) {\n                    taskFailures.push(event.error);\n                }\n            });\n            if (this.initErrors.length > 0) {\n                return Promise.reject(this.initErrors[0]);\n            }\n            if (allowResolvingImmediately && this.taskQueue.length === 0) {\n                yield ponyfills_1.allSettled(getCurrentlyRunningTasks());\n                return taskFailures;\n            }\n            yield new Promise((resolve, reject) => {\n                const subscription = this.eventObservable.subscribe({\n                    next(event) {\n                        if (event.type === pool_types_1.PoolEventType.taskQueueDrained) {\n                            subscription.unsubscribe();\n                            resolve();\n                        }\n                    },\n                    error: reject // make a pool-wide error reject the completed() result promise\n                });\n            });\n            yield ponyfills_1.allSettled(getCurrentlyRunningTasks());\n            failureSubscription.unsubscribe();\n            return taskFailures;\n        });\n    }\n    completed(allowResolvingImmediately = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const settlementPromise = this.settled(allowResolvingImmediately);\n            const earlyExitPromise = new Promise((resolve, reject) => {\n                const subscription = this.eventObservable.subscribe({\n                    next(event) {\n                        if (event.type === pool_types_1.PoolEventType.taskQueueDrained) {\n                            subscription.unsubscribe();\n                            resolve(settlementPromise);\n                        }\n                        else if (event.type === pool_types_1.PoolEventType.taskFailed) {\n                            subscription.unsubscribe();\n                            reject(event.error);\n                        }\n                    },\n                    error: reject // make a pool-wide error reject the completed() result promise\n                });\n            });\n            const errors = yield Promise.race([\n                settlementPromise,\n                earlyExitPromise\n            ]);\n            if (errors.length > 0) {\n                throw errors[0];\n            }\n        });\n    }\n    events() {\n        return this.eventObservable;\n    }\n    queue(taskFunction) {\n        const { maxQueuedJobs = Infinity } = this.options;\n        if (this.isClosing) {\n            throw Error(`Cannot schedule pool tasks after terminate() has been called.`);\n        }\n        if (this.initErrors.length > 0) {\n            throw this.initErrors[0];\n        }\n        const taskCompleted = () => this.taskCompletion(task.id);\n        let taskCompletionDotThen;\n        const task = {\n            id: this.nextTaskID++,\n            run: taskFunction,\n            cancel: () => {\n                if (this.taskQueue.indexOf(task) === -1)\n                    return;\n                this.taskQueue = this.taskQueue.filter(someTask => someTask !== task);\n                this.eventSubject.next({\n                    type: pool_types_1.PoolEventType.taskCanceled,\n                    taskID: task.id\n                });\n            },\n            get then() {\n                if (!taskCompletionDotThen) {\n                    const promise = taskCompleted();\n                    taskCompletionDotThen = promise.then.bind(promise);\n                }\n                return taskCompletionDotThen;\n            }\n        };\n        if (this.taskQueue.length >= maxQueuedJobs) {\n            throw Error(\"Maximum number of pool tasks queued. Refusing to queue another one.\\n\" +\n                \"This usually happens for one of two reasons: We are either at peak \" +\n                \"workload right now or some tasks just won't finish, thus blocking the pool.\");\n        }\n        this.debug(`Queueing task #${task.id}...`);\n        this.taskQueue.push(task);\n        this.eventSubject.next({\n            type: pool_types_1.PoolEventType.taskQueued,\n            taskID: task.id\n        });\n        this.scheduleWork();\n        return task;\n    }\n    terminate(force) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.isClosing = true;\n            if (!force) {\n                yield this.completed(true);\n            }\n            this.eventSubject.next({\n                type: pool_types_1.PoolEventType.terminated,\n                remainingQueue: [...this.taskQueue]\n            });\n            this.eventSubject.complete();\n            yield Promise.all(this.workers.map((worker) => __awaiter(this, void 0, void 0, function* () { return thread_1.Thread.terminate(yield worker.init); })));\n        });\n    }\n}\nWorkerPool.EventType = pool_types_1.PoolEventType;\n/**\n * Thread pool constructor. Creates a new pool and spawns its worker threads.\n */\nfunction PoolConstructor(spawnWorker, optionsOrSize) {\n    // The function exists only so we don't need to use `new` to create a pool (we still can, though).\n    // If the Pool is a class or not is an implementation detail that should not concern the user.\n    return new WorkerPool(spawnWorker, optionsOrSize);\n}\nPoolConstructor.EventType = pool_types_1.PoolEventType;\n/**\n * Thread pool constructor. Creates a new pool and spawns its worker threads.\n */\nexports.Pool = PoolConstructor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst doNothing = () => undefined;\n/**\n * Creates a new promise and exposes its resolver function.\n * Use with care!\n */\nfunction createPromiseWithResolver() {\n    let alreadyResolved = false;\n    let resolvedTo;\n    let resolver = doNothing;\n    const promise = new Promise(resolve => {\n        if (alreadyResolved) {\n            resolve(resolvedTo);\n        }\n        else {\n            resolver = resolve;\n        }\n    });\n    const exposedResolver = (value) => {\n        alreadyResolved = true;\n        resolvedTo = value;\n        resolver();\n    };\n    return [promise, exposedResolver];\n}\nexports.createPromiseWithResolver = createPromiseWithResolver;\n","\"use strict\";\n/// <reference lib=\"dom\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst symbols_1 = require(\"../symbols\");\n/** Event as emitted by worker thread. Subscribe to using `Thread.events(thread)`. */\nvar WorkerEventType;\n(function (WorkerEventType) {\n    WorkerEventType[\"internalError\"] = \"internalError\";\n    WorkerEventType[\"message\"] = \"message\";\n    WorkerEventType[\"termination\"] = \"termination\";\n})(WorkerEventType = exports.WorkerEventType || (exports.WorkerEventType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst observable_fns_1 = require(\"observable-fns\");\nconst doNothing = () => undefined;\nconst returnInput = (input) => input;\nconst runDeferred = (fn) => Promise.resolve().then(fn);\nfunction fail(error) {\n    throw error;\n}\nfunction isThenable(thing) {\n    return thing && typeof thing.then === \"function\";\n}\n/**\n * Creates a hybrid, combining the APIs of an Observable and a Promise.\n *\n * It is used to proxy async process states when we are initially not sure\n * if that async process will yield values once (-> Promise) or multiple\n * times (-> Observable).\n *\n * Note that the observable promise inherits some of the observable's characteristics:\n * The `init` function will be called *once for every time anyone subscribes to it*.\n *\n * If this is undesired, derive a hot observable from it using `makeHot()` and\n * subscribe to that.\n */\nclass ObservablePromise extends observable_fns_1.Observable {\n    constructor(init) {\n        super(originalObserver => {\n            // tslint:disable-next-line no-this-assignment\n            const self = this;\n            const observer = Object.assign(Object.assign({}, originalObserver), { complete() {\n                    originalObserver.complete();\n                    self.onCompletion();\n                },\n                error(error) {\n                    originalObserver.error(error);\n                    self.onError(error);\n                },\n                next(value) {\n                    originalObserver.next(value);\n                    self.onNext(value);\n                } });\n            try {\n                this.initHasRun = true;\n                return init(observer);\n            }\n            catch (error) {\n                observer.error(error);\n            }\n        });\n        this.initHasRun = false;\n        this.fulfillmentCallbacks = [];\n        this.rejectionCallbacks = [];\n        this.firstValueSet = false;\n        this.state = \"pending\";\n    }\n    onNext(value) {\n        if (!this.firstValueSet) {\n            this.firstValue = value;\n            this.firstValueSet = true;\n        }\n    }\n    onError(error) {\n        this.state = \"rejected\";\n        this.rejection = error;\n        for (const onRejected of this.rejectionCallbacks) {\n            // Promisifying the call to turn errors into unhandled promise rejections\n            // instead of them failing sync and cancelling the iteration\n            runDeferred(() => onRejected(error));\n        }\n    }\n    onCompletion() {\n        this.state = \"fulfilled\";\n        for (const onFulfilled of this.fulfillmentCallbacks) {\n            // Promisifying the call to turn errors into unhandled promise rejections\n            // instead of them failing sync and cancelling the iteration\n            runDeferred(() => onFulfilled(this.firstValue));\n        }\n    }\n    then(onFulfilledRaw, onRejectedRaw) {\n        const onFulfilled = onFulfilledRaw || returnInput;\n        const onRejected = onRejectedRaw || fail;\n        let onRejectedCalled = false;\n        return new Promise((resolve, reject) => {\n            const rejectionCallback = (error) => {\n                if (onRejectedCalled)\n                    return;\n                onRejectedCalled = true;\n                try {\n                    resolve(onRejected(error));\n                }\n                catch (anotherError) {\n                    reject(anotherError);\n                }\n            };\n            const fulfillmentCallback = (value) => {\n                try {\n                    resolve(onFulfilled(value));\n                }\n                catch (error) {\n                    rejectionCallback(error);\n                }\n            };\n            if (!this.initHasRun) {\n                this.subscribe({ error: rejectionCallback });\n            }\n            if (this.state === \"fulfilled\") {\n                return resolve(onFulfilled(this.firstValue));\n            }\n            if (this.state === \"rejected\") {\n                onRejectedCalled = true;\n                return resolve(onRejected(this.rejection));\n            }\n            this.fulfillmentCallbacks.push(fulfillmentCallback);\n            this.rejectionCallbacks.push(rejectionCallback);\n        });\n    }\n    catch(onRejected) {\n        return this.then(undefined, onRejected);\n    }\n    finally(onCompleted) {\n        const handler = onCompleted || doNothing;\n        return this.then((value) => {\n            handler();\n            return value;\n        }, () => handler());\n    }\n    static from(thing) {\n        if (isThenable(thing)) {\n            return new ObservablePromise(observer => {\n                const onFulfilled = (value) => {\n                    observer.next(value);\n                    observer.complete();\n                };\n                const onRejected = (error) => {\n                    observer.error(error);\n                };\n                thing.then(onFulfilled, onRejected);\n            });\n        }\n        else {\n            return super.from(thing);\n        }\n    }\n}\nexports.ObservablePromise = ObservablePromise;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst symbols_1 = require(\"./symbols\");\nfunction isTransferable(thing) {\n    if (!thing || typeof thing !== \"object\")\n        return false;\n    // Don't check too thoroughly, since the list of transferable things in JS might grow over time\n    return true;\n}\nfunction isTransferDescriptor(thing) {\n    return thing && typeof thing === \"object\" && thing[symbols_1.$transferable];\n}\nexports.isTransferDescriptor = isTransferDescriptor;\nfunction Transfer(payload, transferables) {\n    if (!transferables) {\n        if (!isTransferable(payload))\n            throw Error();\n        transferables = [payload];\n    }\n    return {\n        [symbols_1.$transferable]: true,\n        send: payload,\n        transferables\n    };\n}\nexports.Transfer = Transfer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/////////////////////////////\n// Messages sent by master:\nvar MasterMessageType;\n(function (MasterMessageType) {\n    MasterMessageType[\"run\"] = \"run\";\n})(MasterMessageType = exports.MasterMessageType || (exports.MasterMessageType = {}));\n////////////////////////////\n// Messages sent by worker:\nvar WorkerMessageType;\n(function (WorkerMessageType) {\n    WorkerMessageType[\"error\"] = \"error\";\n    WorkerMessageType[\"init\"] = \"init\";\n    WorkerMessageType[\"result\"] = \"result\";\n    WorkerMessageType[\"running\"] = \"running\";\n    WorkerMessageType[\"uncaughtError\"] = \"uncaughtError\";\n})(WorkerMessageType = exports.WorkerMessageType || (exports.WorkerMessageType = {}));\n","\"use strict\";\n/*\n * This source file contains the code for proxying calls in the master thread to calls in the workers\n * by `.postMessage()`-ing.\n *\n * Keep in mind that this code can make or break the program's performance! Need to optimize more…\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst debug_1 = __importDefault(require(\"debug\"));\nconst observable_fns_1 = require(\"observable-fns\");\nconst common_1 = require(\"../common\");\nconst observable_promise_1 = require(\"../observable-promise\");\nconst transferable_1 = require(\"../transferable\");\nconst messages_1 = require(\"../types/messages\");\nconst debugMessages = debug_1.default(\"threads:master:messages\");\nlet nextJobUID = 1;\nconst dedupe = (array) => Array.from(new Set(array));\nconst isJobErrorMessage = (data) => data && data.type === messages_1.WorkerMessageType.error;\nconst isJobResultMessage = (data) => data && data.type === messages_1.WorkerMessageType.result;\nconst isJobStartMessage = (data) => data && data.type === messages_1.WorkerMessageType.running;\nfunction createObservableForJob(worker, jobUID) {\n    return new observable_fns_1.Observable(observer => {\n        let asyncType;\n        const messageHandler = ((event) => {\n            debugMessages(\"Message from worker:\", event.data);\n            if (!event.data || event.data.uid !== jobUID)\n                return;\n            if (isJobStartMessage(event.data)) {\n                asyncType = event.data.resultType;\n            }\n            else if (isJobResultMessage(event.data)) {\n                if (asyncType === \"promise\") {\n                    if (typeof event.data.payload !== \"undefined\") {\n                        observer.next(common_1.deserialize(event.data.payload));\n                    }\n                    observer.complete();\n                    worker.removeEventListener(\"message\", messageHandler);\n                }\n                else {\n                    if (event.data.payload) {\n                        observer.next(common_1.deserialize(event.data.payload));\n                    }\n                    if (event.data.complete) {\n                        observer.complete();\n                        worker.removeEventListener(\"message\", messageHandler);\n                    }\n                }\n            }\n            else if (isJobErrorMessage(event.data)) {\n                const error = common_1.deserialize(event.data.error);\n                if (asyncType === \"promise\" || !asyncType) {\n                    observer.error(error);\n                }\n                else {\n                    observer.error(error);\n                }\n                worker.removeEventListener(\"message\", messageHandler);\n            }\n        });\n        worker.addEventListener(\"message\", messageHandler);\n        return () => worker.removeEventListener(\"message\", messageHandler);\n    });\n}\nfunction prepareArguments(rawArgs) {\n    if (rawArgs.length === 0) {\n        // Exit early if possible\n        return {\n            args: [],\n            transferables: []\n        };\n    }\n    const args = [];\n    const transferables = [];\n    for (const arg of rawArgs) {\n        if (transferable_1.isTransferDescriptor(arg)) {\n            args.push(common_1.serialize(arg.send));\n            transferables.push(...arg.transferables);\n        }\n        else {\n            args.push(common_1.serialize(arg));\n        }\n    }\n    return {\n        args,\n        transferables: transferables.length === 0 ? transferables : dedupe(transferables)\n    };\n}\nfunction createProxyFunction(worker, method) {\n    return ((...rawArgs) => {\n        const uid = nextJobUID++;\n        const { args, transferables } = prepareArguments(rawArgs);\n        const runMessage = {\n            type: messages_1.MasterMessageType.run,\n            uid,\n            method,\n            args\n        };\n        debugMessages(\"Sending command to run function to worker:\", runMessage);\n        try {\n            worker.postMessage(runMessage, transferables);\n        }\n        catch (error) {\n            return observable_promise_1.ObservablePromise.from(Promise.reject(error));\n        }\n        return observable_promise_1.ObservablePromise.from(observable_fns_1.multicast(createObservableForJob(worker, uid)));\n    });\n}\nexports.createProxyFunction = createProxyFunction;\nfunction createProxyModule(worker, methodNames) {\n    const proxy = {};\n    for (const methodName of methodNames) {\n        proxy[methodName] = createProxyFunction(worker, methodName);\n    }\n    return proxy;\n}\nexports.createProxyModule = createProxyModule;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst debug_1 = __importDefault(require(\"debug\"));\nconst observable_fns_1 = require(\"observable-fns\");\nconst common_1 = require(\"../common\");\nconst promise_1 = require(\"../promise\");\nconst symbols_1 = require(\"../symbols\");\nconst master_1 = require(\"../types/master\");\nconst invocation_proxy_1 = require(\"./invocation-proxy\");\nconst debugMessages = debug_1.default(\"threads:master:messages\");\nconst debugSpawn = debug_1.default(\"threads:master:spawn\");\nconst debugThreadUtils = debug_1.default(\"threads:master:thread-utils\");\nconst isInitMessage = (data) => data && data.type === \"init\";\nconst isUncaughtErrorMessage = (data) => data && data.type === \"uncaughtError\";\nconst initMessageTimeout = typeof process !== \"undefined\" && process.env.THREADS_WORKER_INIT_TIMEOUT\n    ? Number.parseInt(process.env.THREADS_WORKER_INIT_TIMEOUT, 10)\n    : 10000;\nfunction withTimeout(promise, timeoutInMs, errorMessage) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let timeoutHandle;\n        const timeout = new Promise((resolve, reject) => {\n            timeoutHandle = setTimeout(() => reject(Error(errorMessage)), timeoutInMs);\n        });\n        const result = yield Promise.race([\n            promise,\n            timeout\n        ]);\n        clearTimeout(timeoutHandle);\n        return result;\n    });\n}\nfunction receiveInitMessage(worker) {\n    return new Promise((resolve, reject) => {\n        const messageHandler = ((event) => {\n            debugMessages(\"Message from worker before finishing initialization:\", event.data);\n            if (isInitMessage(event.data)) {\n                worker.removeEventListener(\"message\", messageHandler);\n                resolve(event.data);\n            }\n            else if (isUncaughtErrorMessage(event.data)) {\n                worker.removeEventListener(\"message\", messageHandler);\n                reject(common_1.deserialize(event.data.error));\n            }\n        });\n        worker.addEventListener(\"message\", messageHandler);\n    });\n}\nfunction createEventObservable(worker, workerTermination) {\n    return new observable_fns_1.Observable(observer => {\n        const messageHandler = ((messageEvent) => {\n            const workerEvent = {\n                type: master_1.WorkerEventType.message,\n                data: messageEvent.data\n            };\n            observer.next(workerEvent);\n        });\n        const rejectionHandler = ((errorEvent) => {\n            debugThreadUtils(\"Unhandled promise rejection event in thread:\", errorEvent);\n            const workerEvent = {\n                type: master_1.WorkerEventType.internalError,\n                error: Error(errorEvent.reason)\n            };\n            observer.next(workerEvent);\n        });\n        worker.addEventListener(\"message\", messageHandler);\n        worker.addEventListener(\"unhandledrejection\", rejectionHandler);\n        workerTermination.then(() => {\n            const terminationEvent = {\n                type: master_1.WorkerEventType.termination\n            };\n            worker.removeEventListener(\"message\", messageHandler);\n            worker.removeEventListener(\"unhandledrejection\", rejectionHandler);\n            observer.next(terminationEvent);\n            observer.complete();\n        });\n    });\n}\nfunction createTerminator(worker) {\n    const [termination, resolver] = promise_1.createPromiseWithResolver();\n    const terminate = () => __awaiter(this, void 0, void 0, function* () {\n        debugThreadUtils(\"Terminating worker\");\n        // Newer versions of worker_threads workers return a promise\n        yield worker.terminate();\n        resolver();\n    });\n    return { terminate, termination };\n}\nfunction setPrivateThreadProps(raw, worker, workerEvents, terminate) {\n    const workerErrors = workerEvents\n        .filter(event => event.type === master_1.WorkerEventType.internalError)\n        .map(errorEvent => errorEvent.error);\n    // tslint:disable-next-line prefer-object-spread\n    return Object.assign(raw, {\n        [symbols_1.$errors]: workerErrors,\n        [symbols_1.$events]: workerEvents,\n        [symbols_1.$terminate]: terminate,\n        [symbols_1.$worker]: worker\n    });\n}\n/**\n * Spawn a new thread. Takes a fresh worker instance, wraps it in a thin\n * abstraction layer to provide the transparent API and verifies that\n * the worker has initialized successfully.\n *\n * @param worker Instance of `Worker`. Either a web worker, `worker_threads` worker or `tiny-worker` worker.\n * @param [options]\n * @param [options.timeout] Init message timeout. Default: 10000 or set by environment variable.\n */\nfunction spawn(worker, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        debugSpawn(\"Initializing new thread\");\n        const initMessage = yield withTimeout(receiveInitMessage(worker), options && options.timeout ? options.timeout : initMessageTimeout, `Timeout: Did not receive an init message from worker after ${initMessageTimeout}ms. Make sure the worker calls expose().`);\n        const exposed = initMessage.exposed;\n        const { termination, terminate } = createTerminator(worker);\n        const events = createEventObservable(worker, termination);\n        if (exposed.type === \"function\") {\n            const proxy = invocation_proxy_1.createProxyFunction(worker);\n            return setPrivateThreadProps(proxy, worker, events, terminate);\n        }\n        else if (exposed.type === \"module\") {\n            const proxy = invocation_proxy_1.createProxyModule(worker, exposed.methods);\n            return setPrivateThreadProps(proxy, worker, events, terminate);\n        }\n        else {\n            const type = exposed.type;\n            throw Error(`Worker init message states unexpected type of expose(): ${type}`);\n        }\n    });\n}\nexports.spawn = spawn;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst implementation_1 = require(\"./implementation\");\nvar pool_1 = require(\"./pool\");\nexports.Pool = pool_1.Pool;\nvar spawn_1 = require(\"./spawn\");\nexports.spawn = spawn_1.spawn;\nvar thread_1 = require(\"./thread\");\nexports.Thread = thread_1.Thread;\n/** Worker implementation. Either web worker or a node.js Worker class. */\nexports.Worker = implementation_1.selectWorkerImplementation();\n","\"use strict\";\n/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isWorkerRuntime = function isWorkerRuntime() {\n    return typeof self !== \"undefined\" && self.postMessage ? true : false;\n};\nconst postMessageToMaster = function postMessageToMaster(data, transferList) {\n    self.postMessage(data, transferList);\n};\nconst subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n    const messageHandler = (messageEvent) => {\n        onMessage(messageEvent.data);\n    };\n    const unsubscribe = () => {\n        self.removeEventListener(\"message\", messageHandler);\n    };\n    self.addEventListener(\"message\", messageHandler);\n    return unsubscribe;\n};\nexports.default = {\n    isWorkerRuntime,\n    postMessageToMaster,\n    subscribeToMasterMessages\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_observable_1 = __importDefault(require(\"is-observable\"));\nconst common_1 = require(\"../common\");\nconst transferable_1 = require(\"../transferable\");\nconst messages_1 = require(\"../types/messages\");\nconst implementation_1 = __importDefault(require(\"./implementation\"));\nvar common_2 = require(\"../common\");\nexports.registerSerializer = common_2.registerSerializer;\nvar transferable_2 = require(\"../transferable\");\nexports.Transfer = transferable_2.Transfer;\nlet exposeCalled = false;\nconst isMasterJobRunMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.run;\n/**\n * There are issues with `is-observable` not recognizing zen-observable's instances.\n * We are using `observable-fns`, but it's based on zen-observable, too.\n */\nconst isObservable = (thing) => is_observable_1.default(thing) || isZenObservable(thing);\nfunction isZenObservable(thing) {\n    return thing && typeof thing === \"object\" && typeof thing.subscribe === \"function\";\n}\nfunction deconstructTransfer(thing) {\n    return transferable_1.isTransferDescriptor(thing)\n        ? { payload: thing.send, transferables: thing.transferables }\n        : { payload: thing, transferables: undefined };\n}\nfunction postFunctionInitMessage() {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"function\"\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postModuleInitMessage(methodNames) {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"module\",\n            methods: methodNames\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postJobErrorMessage(uid, rawError) {\n    const { payload: error, transferables } = deconstructTransfer(rawError);\n    const errorMessage = {\n        type: messages_1.WorkerMessageType.error,\n        uid,\n        error: common_1.serialize(error)\n    };\n    implementation_1.default.postMessageToMaster(errorMessage, transferables);\n}\nfunction postJobResultMessage(uid, completed, resultValue) {\n    const { payload, transferables } = deconstructTransfer(resultValue);\n    const resultMessage = {\n        type: messages_1.WorkerMessageType.result,\n        uid,\n        complete: completed ? true : undefined,\n        payload\n    };\n    implementation_1.default.postMessageToMaster(resultMessage, transferables);\n}\nfunction postJobStartMessage(uid, resultType) {\n    const startMessage = {\n        type: messages_1.WorkerMessageType.running,\n        uid,\n        resultType\n    };\n    implementation_1.default.postMessageToMaster(startMessage);\n}\nfunction postUncaughtErrorMessage(error) {\n    try {\n        const errorMessage = {\n            type: messages_1.WorkerMessageType.uncaughtError,\n            error: common_1.serialize(error)\n        };\n        implementation_1.default.postMessageToMaster(errorMessage);\n    }\n    catch (subError) {\n        // tslint:disable-next-line no-console\n        console.error(\"Not reporting uncaught error back to master thread as it \" +\n            \"occured while reporting an uncaught error already.\" +\n            \"\\nLatest error:\", subError, \"\\nOriginal error:\", error);\n    }\n}\nfunction runFunction(jobUID, fn, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let syncResult;\n        try {\n            syncResult = fn(...args);\n        }\n        catch (error) {\n            return postJobErrorMessage(jobUID, error);\n        }\n        const resultType = isObservable(syncResult) ? \"observable\" : \"promise\";\n        postJobStartMessage(jobUID, resultType);\n        if (isObservable(syncResult)) {\n            syncResult.subscribe(value => postJobResultMessage(jobUID, false, common_1.serialize(value)), error => postJobErrorMessage(jobUID, common_1.serialize(error)), () => postJobResultMessage(jobUID, true));\n        }\n        else {\n            try {\n                const result = yield syncResult;\n                postJobResultMessage(jobUID, true, common_1.serialize(result));\n            }\n            catch (error) {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n            }\n        }\n    });\n}\n/**\n * Expose a function or a module (an object whose values are functions)\n * to the main thread. Must be called exactly once in every worker thread\n * to signal its API to the main thread.\n *\n * @param exposed Function or object whose values are functions\n */\nfunction expose(exposed) {\n    if (!implementation_1.default.isWorkerRuntime()) {\n        throw Error(\"expose() called in the master thread.\");\n    }\n    if (exposeCalled) {\n        throw Error(\"expose() called more than once. This is not possible. Pass an object to expose() if you want to expose multiple functions.\");\n    }\n    exposeCalled = true;\n    if (typeof exposed === \"function\") {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && !messageData.method) {\n                runFunction(messageData.uid, exposed, messageData.args.map(common_1.deserialize));\n            }\n        });\n        postFunctionInitMessage();\n    }\n    else if (typeof exposed === \"object\" && exposed) {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && messageData.method) {\n                runFunction(messageData.uid, exposed[messageData.method], messageData.args.map(common_1.deserialize));\n            }\n        });\n        const methodNames = Object.keys(exposed).filter(key => typeof exposed[key] === \"function\");\n        postModuleInitMessage(methodNames);\n    }\n    else {\n        throw Error(`Invalid argument passed to expose(). Expected a function or an object, got: ${exposed}`);\n    }\n}\nexports.expose = expose;\nif (typeof self !== \"undefined\" && typeof self.addEventListener === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    self.addEventListener(\"error\", event => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(event.error || event), 250);\n    });\n    self.addEventListener(\"unhandledrejection\", event => {\n        const error = event.reason;\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\nif (typeof process !== \"undefined\" && typeof process.on === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    process.on(\"uncaughtException\", (error) => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(error), 250);\n    });\n    process.on(\"unhandledRejection\", (error) => {\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = require(\"./common\");\nexports.registerSerializer = common_1.registerSerializer;\n__export(require(\"./master/index\"));\nvar index_1 = require(\"./worker/index\");\nexports.expose = index_1.expose;\nvar serializers_1 = require(\"./serializers\");\nexports.DefaultSerializer = serializers_1.DefaultSerializer;\nvar transferable_1 = require(\"./transferable\");\nexports.Transfer = transferable_1.Transfer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst index_1 = require(\"./index\");\nif (typeof global !== \"undefined\") {\n    global.Worker = index_1.Worker;\n}\nelse if (typeof window !== \"undefined\") {\n    window.Worker = index_1.Worker;\n}\n","require(\"./dist/master/register\")\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HINGELoss = exports.MSLELoss = exports.WAPELoss = exports.MAPELoss = exports.MAELoss = exports.BinaryLoss = exports.MBELoss = exports.MSELoss = exports.CrossEntropyLoss = exports.Loss = exports.ALL_LOSSES = void 0;\r\n/**\r\n * Loss functions play an important role in neural networks. They give neural networks an indication of 'how wrong' they are; a.k.a. how far they are from the desired outputs. Also in fitness functions, loss functions play an important role.\r\n *\r\n * @see [Loss Function on Wikipedia](https://en.wikipedia.org/wiki/Loss_function)\r\n */\r\nvar Loss = /** @class */ (function () {\r\n    function Loss() {\r\n    }\r\n    return Loss;\r\n}());\r\nexports.Loss = Loss;\r\n/**\r\n * Cross entropy error\r\n *\r\n * @see {@link http://bit.ly/2p5W29A | Cross-entropy Error Function}\r\n * @param targets Ideal value\r\n * @param outputs Actual values\r\n *\r\n * @return [Cross entropy error](https://ml-cheatsheet.readthedocs.io/en/latest/loss_functions.html)\r\n */\r\nvar CrossEntropyLoss = /** @class */ (function (_super) {\r\n    __extends(CrossEntropyLoss, _super);\r\n    function CrossEntropyLoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Calculates the loss value from output to target.\r\n     *\r\n     * @param targets the target values\r\n     * @param outputs the real output values\r\n     * @returns the loss between output and target\r\n     */\r\n    CrossEntropyLoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach((function (value, index) {\r\n            error -= targets[index] * Math.log(Math.max(value, 1e-15)) + (1 - targets[index]) * Math.log(1 - Math.max(value, 1e-15));\r\n        }));\r\n        return error / outputs.length;\r\n    };\r\n    return CrossEntropyLoss;\r\n}(Loss));\r\nexports.CrossEntropyLoss = CrossEntropyLoss;\r\n/**\r\n * Mean Squared Error\r\n *\r\n * @param targets Ideal value\r\n * @param outputs Actual values\r\n *\r\n * @return [Mean squared error](https://medium.freecodecamp.org/machine-learning-mean-squared-error-regression-line-c7dde9a26b93)\r\n */\r\nvar MSELoss = /** @class */ (function (_super) {\r\n    __extends(MSELoss, _super);\r\n    function MSELoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Calculates the loss value from output to target.\r\n     *\r\n     * @param targets the target values\r\n     * @param outputs the real output values\r\n     * @returns the loss between output and target\r\n     */\r\n    MSELoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach((function (value, index) {\r\n            error += Math.pow((targets[index] - value), 2);\r\n        }));\r\n        return error / outputs.length;\r\n    };\r\n    return MSELoss;\r\n}(Loss));\r\nexports.MSELoss = MSELoss;\r\n/**\r\n * Mean Bias Error\r\n *\r\n * @param targets Ideal value\r\n * @param outputs Actual values\r\n *\r\n * @return [Mean bias error](https://towardsdatascience.com/common-loss-functions-in-machine-learning-46af0ffc4d23)\r\n *\r\n * @example\r\n * let myNetwork = new Network(5, 5);\r\n * myNetwork.train(trainingData, { loss: new MSELoss() });\r\n */\r\nvar MBELoss = /** @class */ (function (_super) {\r\n    __extends(MBELoss, _super);\r\n    function MBELoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MBELoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach((function (value, index) {\r\n            error += (targets[index] - value);\r\n        }));\r\n        return error / outputs.length;\r\n    };\r\n    return MBELoss;\r\n}(Loss));\r\nexports.MBELoss = MBELoss;\r\n/**\r\n * Binary Error\r\n *\r\n * @param targets Ideal value\r\n * @param outputs Actual values\r\n *\r\n * @return misses The amount of times targets value was missed\r\n */\r\nvar BinaryLoss = /** @class */ (function (_super) {\r\n    __extends(BinaryLoss, _super);\r\n    function BinaryLoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Calculates the loss value from output to target.\r\n     *\r\n     * @param targets the target values\r\n     * @param outputs the real output values\r\n     * @returns the loss between output and target\r\n     */\r\n    BinaryLoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach((function (value, index) {\r\n            error += Math.round(targets[index] * 2) !== Math.round(value * 2) ? 1 : 0;\r\n        }));\r\n        return error / outputs.length;\r\n    };\r\n    return BinaryLoss;\r\n}(Loss));\r\nexports.BinaryLoss = BinaryLoss;\r\n/**\r\n * Mean Absolute Error\r\n *\r\n * @param targets Ideal value\r\n * @param outputs Actual values\r\n *\r\n * @return [Mean absolute error](https://en.wikipedia.org/wiki/Mean_absolute_error)\r\n */\r\nvar MAELoss = /** @class */ (function (_super) {\r\n    __extends(MAELoss, _super);\r\n    function MAELoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Calculates the loss value from output to target.\r\n     *\r\n     * @param targets the target values\r\n     * @param outputs the real output values\r\n     * @returns the loss between output and target\r\n     */\r\n    MAELoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach((function (value, index) {\r\n            error += Math.abs(targets[index] - value);\r\n        }));\r\n        return error / outputs.length;\r\n    };\r\n    return MAELoss;\r\n}(Loss));\r\nexports.MAELoss = MAELoss;\r\n/**\r\n * Mean Absolute Percentage Error\r\n *\r\n * @param targets Ideal value\r\n * @param outputs Actual values\r\n *\r\n * @return [Mean absolute percentage error](https://en.wikipedia.org/wiki/Mean_absolute_percentage_error)\r\n */\r\nvar MAPELoss = /** @class */ (function (_super) {\r\n    __extends(MAPELoss, _super);\r\n    function MAPELoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Calculates the loss value from output to target.\r\n     *\r\n     * @param targets the target values\r\n     * @param outputs the real output values\r\n     * @returns the loss between output and target\r\n     */\r\n    MAPELoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach((function (value, index) {\r\n            error += Math.abs((value - targets[index]) / Math.max(targets[index], 1e-15));\r\n        }));\r\n        return error / outputs.length;\r\n    };\r\n    return MAPELoss;\r\n}(Loss));\r\nexports.MAPELoss = MAPELoss;\r\n/**\r\n * Weighted Absolute Percentage Error (WAPE)\r\n *\r\n * @param targets Ideal value\r\n * @param outputs Actual values\r\n *\r\n * @return - [Weighted absolute percentage error](https://help.sap.com/doc/saphelp_nw70/7.0.31/en-US/76/487053bbe77c1ee10000000a174cb4/content.htm?no_cache=true)\r\n */\r\nvar WAPELoss = /** @class */ (function (_super) {\r\n    __extends(WAPELoss, _super);\r\n    function WAPELoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Calculates the loss value from output to target.\r\n     *\r\n     * @param targets the target values\r\n     * @param outputs the real output values\r\n     * @returns the loss between output and target\r\n     */\r\n    WAPELoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        var sum = 0;\r\n        for (var i = 0; i < outputs.length; i++) {\r\n            error += Math.abs(targets[i] - outputs[i]);\r\n            sum += targets[i];\r\n        }\r\n        return error / sum;\r\n    };\r\n    return WAPELoss;\r\n}(Loss));\r\nexports.WAPELoss = WAPELoss;\r\n/**\r\n * Mean Squared Logarithmic Error\r\n *\r\n * @param targets Ideal value\r\n * @param outputs Actual values\r\n *\r\n * @return - [Mean squared logarithmic error](https://peltarion.com/knowledge-center/documentation/modeling-view/build-an-ai-model/loss-functions/mean-squared-logarithmic-error)\r\n */\r\nvar MSLELoss = /** @class */ (function (_super) {\r\n    __extends(MSLELoss, _super);\r\n    function MSLELoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Calculates the loss value from output to target.\r\n     *\r\n     * @param targets the target values\r\n     * @param outputs the real output values\r\n     * @returns the loss between output and target\r\n     */\r\n    MSLELoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach((function (value, index) {\r\n            error += Math.log(Math.max(targets[index], 1e-15)) - Math.log(Math.max(value, 1e-15));\r\n        }));\r\n        return error / outputs.length;\r\n    };\r\n    return MSLELoss;\r\n}(Loss));\r\nexports.MSLELoss = MSLELoss;\r\n/**\r\n * Hinge loss, for classifiers\r\n *\r\n * @param targets Ideal value\r\n * @param outputs Actual values\r\n *\r\n * @return - [Hinge loss](https://towardsdatascience.com/support-vector-machines-intuitive-understanding-part-1-3fb049df4ba1)\r\n */\r\nvar HINGELoss = /** @class */ (function (_super) {\r\n    __extends(HINGELoss, _super);\r\n    function HINGELoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Calculates the loss value from output to target.\r\n     *\r\n     * @param targets the target values\r\n     * @param outputs the real output values\r\n     * @returns the loss between output and target\r\n     */\r\n    HINGELoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach(function (value, index) {\r\n            error += Math.max(0, 1 - value * targets[index]);\r\n        });\r\n        return error / outputs.length;\r\n    };\r\n    return HINGELoss;\r\n}(Loss));\r\nexports.HINGELoss = HINGELoss;\r\nvar ALL_LOSSES = [\r\n    new CrossEntropyLoss(),\r\n    new MSELoss(),\r\n    new MBELoss(),\r\n    new BinaryLoss(),\r\n    new MAELoss(),\r\n    new MAPELoss(),\r\n    new WAPELoss(),\r\n    new MSLELoss(),\r\n    new HINGELoss()\r\n];\r\nexports.ALL_LOSSES = ALL_LOSSES;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InverseRate = exports.ExponentialRate = exports.StepRate = exports.FixedRate = exports.Rate = void 0;\r\n/**\r\n * Built-in learning rate policies, which allow for a dynamic learning rate during neural network training.\r\n *\r\n * @see [Learning rates and how-to improve performance](https://towardsdatascience.com/understanding-learning-rates-and-how-it-improves-performance-in-deep-learning-d0d4059c1c10)\r\n * @see [Learning rate policy](https://stackoverflow.com/questions/30033096/what-is-lr-policy-in-caffe/30045244)\r\n *\r\n */\r\nvar Rate = /** @class */ (function () {\r\n    /**\r\n     * Constructs a rate policy\r\n     * @param baseRate the rate at first iteration\r\n     */\r\n    function Rate(baseRate) {\r\n        this.baseRate = baseRate;\r\n    }\r\n    return Rate;\r\n}());\r\nexports.Rate = Rate;\r\n/**\r\n * Fixed Learning Rate\r\n *\r\n * Default rate policy. Using this will make learning rate static (no change). Useful as a way to update a previous rate policy.\r\n */\r\nvar FixedRate = /** @class */ (function (_super) {\r\n    __extends(FixedRate, _super);\r\n    function FixedRate() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Calculates the current training rate.\r\n     *\r\n     * @param iteration count\r\n     * @returns the current training rate\r\n     */\r\n    FixedRate.prototype.calc = function (iteration) {\r\n        return this.baseRate;\r\n    };\r\n    return FixedRate;\r\n}(Rate));\r\nexports.FixedRate = FixedRate;\r\n/**\r\n * Step Learning Rate\r\n *\r\n * The learning rate will decrease (i.e. 'step down') every `stepSize` iterations.\r\n */\r\nvar StepRate = /** @class */ (function (_super) {\r\n    __extends(StepRate, _super);\r\n    /**\r\n     * Constructs a step rate policy.\r\n     *\r\n     * @param baseRate the rate at first iteration\r\n     * @param gamma=0.9 Learning rate retention per step; - _0 < `gamma` < 1_ - _large `gamma` CAN cause networks to never converge, low `gamma` CAN cause networks to converge too quickly_\r\n     * @param stepSize=100 Learning rate is updated every `step_size` iterations\r\n     */\r\n    function StepRate(baseRate, gamma, stepSize) {\r\n        if (gamma === void 0) { gamma = 0.9; }\r\n        if (stepSize === void 0) { stepSize = 100; }\r\n        var _this = _super.call(this, baseRate) || this;\r\n        _this.gamma = gamma;\r\n        _this.stepSize = stepSize;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Calculates the current training rate.\r\n     *\r\n     * @param iteration count\r\n     * @returns the current training rate\r\n     */\r\n    StepRate.prototype.calc = function (iteration) {\r\n        return this.baseRate * Math.pow(this.gamma, Math.floor(iteration / this.stepSize));\r\n    };\r\n    return StepRate;\r\n}(Rate));\r\nexports.StepRate = StepRate;\r\n/**\r\n * Exponential Learning Rate\r\n *\r\n * The learning rate will exponentially decrease.\r\n *\r\n * The rate at `iteration` is calculated as: `rate = base_rate * Math.pow(gamma, iteration)`\r\n */\r\nvar ExponentialRate = /** @class */ (function (_super) {\r\n    __extends(ExponentialRate, _super);\r\n    /**\r\n     * Constructs a step rate policy.\r\n     *\r\n     * @param baseRate the rate at first iteration\r\n     * @param gamma=0.9 Learning rate retention per step; - _0 < `gamma` < 1_ - _large `gamma` CAN cause networks to never converge, low `gamma` CAN cause networks to converge too quickly_\r\n     */\r\n    function ExponentialRate(baseRate, gamma) {\r\n        if (gamma === void 0) { gamma = 0.999; }\r\n        var _this = _super.call(this, baseRate) || this;\r\n        _this.gamma = gamma;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Calculates the current training rate.\r\n     *\r\n     * @param iteration count\r\n     * @returns the current training rate\r\n     */\r\n    ExponentialRate.prototype.calc = function (iteration) {\r\n        return this.baseRate * Math.pow(this.gamma, iteration);\r\n    };\r\n    return ExponentialRate;\r\n}(Rate));\r\nexports.ExponentialRate = ExponentialRate;\r\n/**\r\n * Inverse Exponential Learning Rate\r\n *\r\n * The learning rate will exponentially decrease.\r\n *\r\n * The rate at `iteration` is calculated as: `rate = baseRate * Math.pow(1 + gamma * iteration, -power)`\r\n */\r\nvar InverseRate = /** @class */ (function (_super) {\r\n    __extends(InverseRate, _super);\r\n    /**\r\n     * Constructs a step rate policy.\r\n     *\r\n     * @param baseRate the rate at first iteration\r\n     * @param gamma=0.001 Learning rate decay per iteration; - _0 < `gamma` < 1_ - _large `gamma` CAN cause networks to converge too quickly and stop learning, low `gamma` CAN cause networks to converge to learn VERY slowly_\r\n     * @param power=2 Decay rate per iteration - _0 < `power`_ - _large `power` CAN cause networks to stop learning quickly, low `power` CAN cause networks to learn VERY slowly_\r\n     */\r\n    function InverseRate(baseRate, gamma, power) {\r\n        if (gamma === void 0) { gamma = 0.001; }\r\n        if (power === void 0) { power = 2; }\r\n        var _this = _super.call(this, baseRate) || this;\r\n        _this.gamma = gamma;\r\n        _this.power = power;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Calculates the current training rate.\r\n     *\r\n     * @param iteration count\r\n     * @returns the current training rate\r\n     */\r\n    InverseRate.prototype.calc = function (iteration) {\r\n        return this.baseRate * Math.pow((1 + this.gamma * iteration), -this.power);\r\n    };\r\n    return InverseRate;\r\n}(Rate));\r\nexports.InverseRate = InverseRate;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TournamentSelection = exports.PowerSelection = exports.FitnessProportionateSelection = exports.Selection = void 0;\r\nvar Utils_1 = require(\"./Utils\");\r\n/**\r\n * Genetic Algorithm Selection Methods (Genetic Operator)\r\n *\r\n * @see [Genetic Algorithm - Selection]{@link https://en.wikipedia.org/wiki/Selection_(genetic_algorithm)}\r\n *\r\n */\r\nvar Selection = /** @class */ (function () {\r\n    function Selection() {\r\n    }\r\n    return Selection;\r\n}());\r\nexports.Selection = Selection;\r\n/**\r\n * Fitness proportionate selection\r\n *\r\n * [Fitness Proportionate / Roulette Wheel Selection on Wikipedia](https://en.wikipedia.org/wiki/Fitness_proportionate_selection)\r\n */\r\nvar FitnessProportionateSelection = /** @class */ (function (_super) {\r\n    __extends(FitnessProportionateSelection, _super);\r\n    function FitnessProportionateSelection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Selects a genome from the population according to the Selection method.\r\n     *\r\n     * @param population the pool of networks\r\n     * @returns the selected genome\r\n     */\r\n    FitnessProportionateSelection.prototype.select = function (population) {\r\n        var _a, _b, _c;\r\n        var totalFitness = 0;\r\n        var minimalFitness = 0;\r\n        for (var _i = 0, population_1 = population; _i < population_1.length; _i++) {\r\n            var genome = population_1[_i];\r\n            minimalFitness = Math.min((_a = genome.score) !== null && _a !== void 0 ? _a : minimalFitness, minimalFitness);\r\n            totalFitness += (_b = genome.score) !== null && _b !== void 0 ? _b : 0;\r\n        }\r\n        minimalFitness = Math.abs(minimalFitness);\r\n        totalFitness += minimalFitness * population.length;\r\n        var random = Utils_1.randDouble(0, totalFitness);\r\n        var value = 0;\r\n        for (var _d = 0, population_2 = population; _d < population_2.length; _d++) {\r\n            var genome = population_2[_d];\r\n            value += ((_c = genome.score) !== null && _c !== void 0 ? _c : 0) + minimalFitness;\r\n            if (random < value) {\r\n                return genome;\r\n            }\r\n        }\r\n        return Utils_1.pickRandom(population);\r\n    };\r\n    return FitnessProportionateSelection;\r\n}(Selection));\r\nexports.FitnessProportionateSelection = FitnessProportionateSelection;\r\n/**\r\n * Power selection\r\n *\r\n * A random decimal value between 0 and 1 will be generated (e.g. 0.5) then this value will get an exponential value (power, default is 4). So 0.5**4 = 0.0625. This is converted into an index for the array of the current population, sorted from fittest to worst.\r\n */\r\nvar PowerSelection = /** @class */ (function (_super) {\r\n    __extends(PowerSelection, _super);\r\n    /**\r\n     * Constructs a power selection.\r\n     * @param power Probability of picking better networks.\r\n     */\r\n    function PowerSelection(power) {\r\n        if (power === void 0) { power = 4; }\r\n        var _this = _super.call(this) || this;\r\n        _this.power = power;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Selects a genome from the population according to the Selection method.\r\n     *\r\n     * @param population the pool of networks\r\n     * @returns the selected genome\r\n     */\r\n    PowerSelection.prototype.select = function (population) {\r\n        return population[Math.floor(Math.pow(Math.random(), this.power) * population.length)];\r\n    };\r\n    return PowerSelection;\r\n}(Selection));\r\nexports.PowerSelection = PowerSelection;\r\n/**\r\n * Tournament selection\r\n *\r\n * [Tournament Selection on Wikipedia](https://en.wikipedia.org/wiki/Tournament_selection)\r\n */\r\nvar TournamentSelection = /** @class */ (function (_super) {\r\n    __extends(TournamentSelection, _super);\r\n    /**\r\n     * Constructs a tournament selection.\r\n     * @param size the size of a tournament\r\n     * @param probability Selects the best individual (when probability = 1).\r\n     */\r\n    function TournamentSelection(size, probability) {\r\n        if (size === void 0) { size = 5; }\r\n        if (probability === void 0) { probability = 0.5; }\r\n        var _this = _super.call(this) || this;\r\n        _this.size = size;\r\n        _this.probability = probability;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Selects a genome from the population according to the Selection method.\r\n     *\r\n     * @param population the pool of networks\r\n     * @returns the selected genome\r\n     */\r\n    TournamentSelection.prototype.select = function (population) {\r\n        if (this.size > population.length) {\r\n            throw new Error(\"Your tournament size should be lower than the population size, please change methods.selection.TOURNAMENT.size\");\r\n        }\r\n        // Create a tournament\r\n        var individuals = [];\r\n        for (var i = 0; i < this.size; i++) {\r\n            individuals.push(Utils_1.pickRandom(population));\r\n        }\r\n        // Sort the tournament individuals by score\r\n        individuals.sort(function (a, b) {\r\n            return b.score === undefined || a.score === undefined ? 0 : b.score - a.score;\r\n        });\r\n        // Select an individual\r\n        for (var i = 0; i < this.size; i++) {\r\n            if (Math.random() < this.probability || i === this.size - 1) {\r\n                return individuals[i];\r\n            }\r\n        }\r\n        return Utils_1.pickRandom(population);\r\n    };\r\n    return TournamentSelection;\r\n}(Selection));\r\nexports.TournamentSelection = TournamentSelection;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NEAT = void 0;\r\nvar Network_1 = require(\"./architecture/Network\");\r\nvar Activation_1 = require(\"./methods/Activation\");\r\nvar Mutation_1 = require(\"./methods/Mutation\");\r\nvar Selection_1 = require(\"./methods/Selection\");\r\nvar Utils_1 = require(\"./methods/Utils\");\r\n/**\r\n * Runs the NEAT algorithm on group of neural networks.\r\n *\r\n * @constructs Neat\r\n */\r\nvar NEAT = /** @class */ (function () {\r\n    /**\r\n     * Constructs a NEAT object.\r\n     *\r\n     * @param options\r\n     */\r\n    function NEAT(options) {\r\n        if (!options.fitnessFunction) {\r\n            throw new ReferenceError(\"No fitness function given!\");\r\n        }\r\n        this.dataset = options.dataset;\r\n        if (options.dataset && options.dataset.length > 0) {\r\n            this.input = options.dataset[0].input.length;\r\n            this.output = options.dataset[0].output.length;\r\n        }\r\n        else {\r\n            this.input = Utils_1.getOrDefault(options.input, 0);\r\n            this.output = Utils_1.getOrDefault(options.output, 0);\r\n        }\r\n        this.generation = Utils_1.getOrDefault(options.generation, 0);\r\n        this.equal = Utils_1.getOrDefault(options.equal, true);\r\n        this.clear = Utils_1.getOrDefault(options.clear, false);\r\n        this.populationSize = Utils_1.getOrDefault(options.populationSize, 50);\r\n        this.elitism = Utils_1.getOrDefault(options.elitism, 2);\r\n        this.provenance = Utils_1.getOrDefault(options.provenance, 0);\r\n        this.mutationRate = Utils_1.getOrDefault(options.mutationRate, 0.6);\r\n        this.mutationAmount = Utils_1.getOrDefault(options.mutationAmount, 5);\r\n        this.fitnessFunction = options.fitnessFunction;\r\n        this.selection = Utils_1.getOrDefault(options.selection, new Selection_1.FitnessProportionateSelection());\r\n        this.mutations = Utils_1.getOrDefault(options.mutations, Mutation_1.FEEDFORWARD_MUTATIONS);\r\n        this.activations = Utils_1.getOrDefault(options.activations, Activation_1.ALL_ACTIVATIONS);\r\n        this.template = Utils_1.getOrDefault(options.template, new Network_1.Network(this.input, this.output));\r\n        this.maxNodes = Utils_1.getOrDefault(options.maxNodes, Infinity);\r\n        this.maxConnections = Utils_1.getOrDefault(options.maxConnections, Infinity);\r\n        this.maxGates = Utils_1.getOrDefault(options.maxGates, Infinity);\r\n        this.population = [];\r\n        for (var i = 0; i < this.populationSize; i++) {\r\n            this.population.push(this.template.copy());\r\n        }\r\n    }\r\n    /**\r\n     * Filter genomes from population\r\n     *\r\n     * @param pickGenome Pick a network from the population which gets adjusted or removed\r\n     * @param adjustGenome Adjust the picked network\r\n     */\r\n    NEAT.prototype.filterGenome = function (pickGenome, adjustGenome) {\r\n        var _this = this;\r\n        return this.population\r\n            .filter(function (genome) { return pickGenome(genome); })\r\n            .map(function (genome) {\r\n            return adjustGenome ? adjustGenome(genome) : _this.template.copy();\r\n        });\r\n    };\r\n    /**\r\n     * Mutate a network with a random mutation from the allowed array.\r\n     *\r\n     * @param network The network which will be mutated.\r\n     */\r\n    NEAT.prototype.mutateRandom = function (network) {\r\n        var _this = this;\r\n        var allowed = this.mutations.filter(function (method) {\r\n            return (method.constructor.name !== Mutation_1.AddNodeMutation.constructor.name || network.nodes.length < _this.maxNodes ||\r\n                method.constructor.name !== Mutation_1.AddConnectionMutation.constructor.name || network.connections.length < _this.maxConnections ||\r\n                method.constructor.name !== Mutation_1.AddGateMutation.constructor.name || network.gates.length < _this.maxGates);\r\n        });\r\n        network.mutate(Utils_1.pickRandom(allowed), { allowedActivations: this.activations });\r\n    };\r\n    /**\r\n     * Evaluates, selects, breeds and mutates population\r\n     *\r\n     * @param {function} [pickGenome] A custom selection function to pick out unwanted genomes. Accepts a network as a parameter and returns true for selection.\r\n     * @param {function} [adjustGenome=self.template] Accepts a network, modifies it, and returns it. Used to modify unwanted genomes returned by `pickGenome` and reincorporate them into the population. If left unset, unwanted genomes will be replaced with the template Network. Will only run when pickGenome is defined.\r\n     *\r\n     * @returns {Network} Fittest network\r\n     */\r\n    NEAT.prototype.evolve = function (pickGenome, adjustGenome) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var elitists, i, newPopulation, i, fittest;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        // Check if evolve is possible\r\n                        if (this.elitism + this.provenance > this.populationSize) {\r\n                            throw new Error(\"Can`t evolve! Elitism + provenance exceeds population size!\");\r\n                        }\r\n                        if (!(this.population[this.population.length - 1].score === undefined)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.evaluate()];\r\n                    case 1:\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        if (pickGenome) {\r\n                            this.population = this.filterGenome(pickGenome, adjustGenome);\r\n                        }\r\n                        // Sort in order of fitness (fittest first)\r\n                        this.sort();\r\n                        elitists = [];\r\n                        for (i = 0; i < this.elitism; i++) {\r\n                            elitists.push(this.population[i]);\r\n                        }\r\n                        newPopulation = Array(this.provenance).fill(this.template.copy());\r\n                        // Breed the next individuals\r\n                        for (i = 0; i < this.populationSize - this.elitism - this.provenance; i++) {\r\n                            newPopulation.push(this.getOffspring());\r\n                        }\r\n                        // Replace the old population with the new population\r\n                        this.population = newPopulation;\r\n                        // Mutate the new population\r\n                        this.mutate();\r\n                        // Add the elitists\r\n                        (_a = this.population).push.apply(_a, elitists);\r\n                        // evaluate the population\r\n                        return [4 /*yield*/, this.evaluate()];\r\n                    case 3:\r\n                        // evaluate the population\r\n                        _b.sent();\r\n                        // Check & adjust genomes as needed\r\n                        if (pickGenome) {\r\n                            this.population = this.filterGenome(pickGenome, adjustGenome);\r\n                        }\r\n                        // Sort in order of fitness (fittest first)\r\n                        this.sort();\r\n                        fittest = this.population[0].copy();\r\n                        fittest.score = this.population[0].score;\r\n                        // Reset the scores\r\n                        this.population.forEach(function (genome) { return genome.score = undefined; });\r\n                        this.generation++;\r\n                        return [2 /*return*/, fittest];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Selects two genomes from the population with `getParent()`, and returns the offspring from those parents. NOTE: Population MUST be sorted\r\n     *\r\n     * @returns {Network} Child network\r\n     */\r\n    NEAT.prototype.getOffspring = function () {\r\n        this.sort();\r\n        var parent1 = this.selection.select(this.population);\r\n        var parent2 = this.selection.select(this.population);\r\n        if (parent1 === null || parent2 === null) {\r\n            throw new ReferenceError(\"Should not be null!\");\r\n        }\r\n        return Network_1.Network.crossOver(parent1, parent2, this.equal);\r\n    };\r\n    /**\r\n     * Mutates the given (or current) population\r\n     *\r\n     * @param {Mutation} [method] A mutation method to mutate the population with. When not specified will pick a random mutation from the set allowed mutations.\r\n     */\r\n    NEAT.prototype.mutate = function (method) {\r\n        var _this = this;\r\n        // Elitist genomes should not be included\r\n        this.population\r\n            .filter(function () { return Math.random() <= _this.mutationRate; })\r\n            .forEach(function (genome) {\r\n            for (var i = 0; i < _this.mutationAmount; i++) {\r\n                if (method) {\r\n                    genome.mutate(method);\r\n                }\r\n                else {\r\n                    _this.mutateRandom(genome);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Evaluates the current population, basically sets their `.score` property\r\n     *\r\n     * @return {Network} Fittest Network\r\n     */\r\n    NEAT.prototype.evaluate = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.clear) {\r\n                            this.population.forEach(function (genome) { return genome.clear(); });\r\n                        }\r\n                        return [4 /*yield*/, this.fitnessFunction(this.population, this.dataset)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        // Sort the population in order of fitness\r\n                        this.sort();\r\n                        return [2 /*return*/, this.population[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Sorts the population by score (descending)\r\n     */\r\n    NEAT.prototype.sort = function () {\r\n        this.population.sort(function (a, b) {\r\n            return a.score === undefined || b.score === undefined ? 0 : b.score - a.score;\r\n        });\r\n    };\r\n    /**\r\n     * Returns the fittest genome of the current population\r\n     *\r\n     * @returns {Network} Current population's fittest genome\r\n     */\r\n    NEAT.prototype.getFittest = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(this.population[this.population.length - 1].score === undefined)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.evaluate()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        this.sort();\r\n                        return [2 /*return*/, this.population[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns the average fitness of the current population\r\n     *\r\n     * @returns {number} Average fitness of the current population\r\n     */\r\n    NEAT.prototype.getAverage = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var score;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(this.population[this.population.length - 1].score === undefined)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.evaluate()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        score = 0;\r\n                        this.population\r\n                            .map(function (genome) { return genome.score; })\r\n                            .forEach(function (val) { return score += val !== null && val !== void 0 ? val : 0; });\r\n                        return [2 /*return*/, score / this.population.length];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return NEAT;\r\n}());\r\nexports.NEAT = NEAT;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Network = void 0;\r\nvar threads_1 = require(\"threads\");\r\nvar dist_1 = require(\"threads/dist\");\r\nrequire(\"threads/register\");\r\nvar NodeType_1 = require(\"../enums/NodeType\");\r\nvar Loss_1 = require(\"../methods/Loss\");\r\nvar Mutation_1 = require(\"../methods/Mutation\");\r\nvar Rate_1 = require(\"../methods/Rate\");\r\nvar Utils_1 = require(\"../methods/Utils\");\r\nvar NEAT_1 = require(\"../NEAT\");\r\nvar Connection_1 = require(\"./Connection\");\r\nvar Node_1 = require(\"./Node\");\r\n/**\r\n * Create a neural network\r\n *\r\n * Networks are easy to create, all you need to specify is an `input` and an `output` size.\r\n *\r\n * @constructs Network\r\n *\r\n * @param {number} inputSize Size of input layer AKA neurons in input layer\r\n * @param {number} outputSize Size of output layer AKA neurons in output layer\r\n *\r\n * @prop {number} inputSize Size of input layer AKA neurons in input layer\r\n * @prop {number} outputSize Size of output layer AKA neurons in output layer\r\n * @prop {Array<Node>} nodes Nodes currently within the network\r\n * @prop {Array<Node>} gates Gates within the network\r\n * @prop {Array<Connection>} connections Connections within the network\r\n */\r\nvar Network = /** @class */ (function () {\r\n    function Network(inputSize, outputSize) {\r\n        this.inputSize = inputSize;\r\n        this.outputSize = outputSize;\r\n        this.nodes = [];\r\n        this.connections = [];\r\n        this.gates = [];\r\n        this.score = undefined;\r\n        // Create input and output nodes\r\n        for (var i = 0; i < inputSize; i++) {\r\n            this.nodes.push(new Node_1.Node(NodeType_1.NodeType.INPUT));\r\n        }\r\n        for (var i = 0; i < outputSize; i++) {\r\n            this.nodes.push(new Node_1.Node(NodeType_1.NodeType.OUTPUT));\r\n        }\r\n        // Connect input and output nodes\r\n        for (var i = 0; i < this.inputSize; i++) {\r\n            for (var j = this.inputSize; j < this.outputSize + this.inputSize; j++) {\r\n                // https://stats.stackexchange.com/a/248040/147931\r\n                var weight = (Math.random() - 0.5) * this.inputSize * Math.sqrt(2 / this.inputSize);\r\n                this.connect(this.nodes[i], this.nodes[j], weight);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Convert a json object to a network\r\n     *\r\n     * @param {{input:{number},output:{number},dropout:{number},nodes:Array<object>,connections:Array<object>}} json A network represented as a json object\r\n     *\r\n     * @returns {Network} Network A reconstructed network\r\n     *\r\n     */\r\n    Network.fromJSON = function (json) {\r\n        var network = new Network(json.inputSize, json.outputSize);\r\n        network.nodes = [];\r\n        network.connections = [];\r\n        json.nodes.map(function (nodeJSON) { return new Node_1.Node().fromJSON(nodeJSON); }).forEach(function (node) { return network.nodes[node.index] = node; });\r\n        json.connections.forEach(function (jsonConnection) {\r\n            var connection = network.connect(network.nodes[jsonConnection.fromIndex], network.nodes[jsonConnection.toIndex], jsonConnection.weight);\r\n            if (jsonConnection.gateNodeIndex != null) {\r\n                network.addGate(network.nodes[jsonConnection.gateNodeIndex], connection);\r\n            }\r\n        });\r\n        return network;\r\n    };\r\n    /**\r\n     * Create an offspring from two parent networks.\r\n     *\r\n     * Networks are not required to have the same size, however input and output size should be the same!\r\n     *\r\n     * @todo Add custom [crossover](crossover) method customization\r\n     *\r\n     * @param {Network} network1 First parent network\r\n     * @param {Network} network2 Second parent network\r\n     * @param {boolean} [equal] Flag to indicate equally fit Networks\r\n     *\r\n     * @returns {Network} New network created from mixing parent networks\r\n     */\r\n    Network.crossOver = function (network1, network2, equal) {\r\n        var _a, _b;\r\n        if (network1.inputSize !== network2.inputSize || network1.outputSize !== network2.outputSize) {\r\n            throw new Error(\"Networks don`t have the same input/output size!\");\r\n        }\r\n        // Initialise offspring\r\n        var offspring = new Network(network1.inputSize, network1.outputSize);\r\n        offspring.connections = []; // clear\r\n        offspring.nodes = []; // clear\r\n        // Save scores and create a copy\r\n        var score1 = (_a = network1.score) !== null && _a !== void 0 ? _a : 0;\r\n        var score2 = (_b = network2.score) !== null && _b !== void 0 ? _b : 0;\r\n        // Determine offspring node size\r\n        var offspringSize;\r\n        if (equal || score1 === score2) {\r\n            var max = Math.max(network1.nodes.length, network2.nodes.length);\r\n            var min = Math.min(network1.nodes.length, network2.nodes.length);\r\n            offspringSize = Utils_1.randInt(min, max + 1); // [min,max]\r\n        }\r\n        else if (score1 > score2) {\r\n            offspringSize = network1.nodes.length;\r\n        }\r\n        else {\r\n            offspringSize = network2.nodes.length;\r\n        }\r\n        var inputSize = network1.inputSize;\r\n        var outputSize = network1.outputSize;\r\n        // set node indices\r\n        for (var i = 0; i < network1.nodes.length; i++) {\r\n            network1.nodes[i].index = i;\r\n        }\r\n        // set node indices\r\n        for (var i = 0; i < network2.nodes.length; i++) {\r\n            network2.nodes[i].index = i;\r\n        }\r\n        // Assign nodes from parents to offspring\r\n        for (var i = 0; i < offspringSize; i++) {\r\n            var chosenNode = void 0;\r\n            var chosenNodeType = null;\r\n            // decide what type of node is needed first check for input and output nodes and fill up with hidden nodes\r\n            if (i < inputSize) { // pick input node\r\n                chosenNodeType = NodeType_1.NodeType.INPUT;\r\n                var sourceNetwork = Utils_1.randBoolean() ? network1 : network2;\r\n                var inputNumber = -1;\r\n                var j = -1;\r\n                while (inputNumber < i) {\r\n                    if (j++ >= sourceNetwork.nodes.length) {\r\n                        throw RangeError('something is wrong with the size of the input');\r\n                    }\r\n                    if (sourceNetwork.nodes[j].isInputNode()) {\r\n                        inputNumber++;\r\n                    }\r\n                }\r\n                chosenNode = sourceNetwork.nodes[j];\r\n            }\r\n            else if (i < inputSize + outputSize) { // pick output node\r\n                chosenNodeType = NodeType_1.NodeType.OUTPUT;\r\n                var sourceNetwork = Utils_1.randBoolean() ? network1 : network2;\r\n                var outputNumber = -1;\r\n                var j = -1;\r\n                while (outputNumber < i - inputSize) {\r\n                    j++;\r\n                    if (j >= sourceNetwork.nodes.length) {\r\n                        throw RangeError('something is wrong with the size of the output');\r\n                    }\r\n                    if (sourceNetwork.nodes[j].isOutputNode()) {\r\n                        outputNumber++;\r\n                    }\r\n                }\r\n                chosenNode = sourceNetwork.nodes[j];\r\n            }\r\n            else { // pick hidden node\r\n                chosenNodeType = NodeType_1.NodeType.HIDDEN;\r\n                var sourceNetwork = void 0;\r\n                if (i >= network1.nodes.length) {\r\n                    sourceNetwork = network2;\r\n                }\r\n                else if (i >= network2.nodes.length) {\r\n                    sourceNetwork = network1;\r\n                }\r\n                else {\r\n                    sourceNetwork = Utils_1.randBoolean() ? network1 : network2;\r\n                }\r\n                chosenNode = Utils_1.pickRandom(sourceNetwork.nodes);\r\n            }\r\n            var newNode = new Node_1.Node(chosenNodeType);\r\n            newNode.bias = chosenNode.bias;\r\n            newNode.squash = chosenNode.squash;\r\n            offspring.nodes.push(newNode);\r\n        }\r\n        // Create arrays of connection genes\r\n        var n1connections = [];\r\n        var n2connections = [];\r\n        // Add the connections of network 1\r\n        network1.connections.forEach(function (connection) {\r\n            n1connections[Connection_1.Connection.innovationID(connection.from.index, connection.to.index)] = connection.toJSON();\r\n        });\r\n        // Add the connections of network 2\r\n        network2.connections.forEach(function (connection) {\r\n            n2connections[Connection_1.Connection.innovationID(connection.from.index, connection.to.index)] = connection.toJSON();\r\n        });\r\n        // Split common conn genes from disjoint or excess conn genes\r\n        var connections = [];\r\n        var keys1 = Object.keys(n1connections);\r\n        var keys2 = Object.keys(n2connections);\r\n        for (var i = keys1.length - 1; i >= 0; i--) {\r\n            if (n2connections[parseInt(keys1[i])] !== undefined) {\r\n                connections.push(Utils_1.randBoolean() ? n1connections[parseInt(keys1[i])] : n2connections[parseInt(keys1[i])]);\r\n                n2connections[parseInt(keys1[i])] = undefined;\r\n            }\r\n            else if (score1 >= score2 || equal) {\r\n                connections.push(n1connections[parseInt(keys1[i])]);\r\n            }\r\n        }\r\n        // Excess/disjoint gene\r\n        if (score2 >= score1 || equal) {\r\n            keys2\r\n                .map(function (key) { return parseInt(key); }) // convert to numbers\r\n                .map(function (key) { return n2connections[key]; }) // get the connection\r\n                .filter(function (conn) { return conn !== undefined; }) // filter out undefined connections\r\n                .forEach(function (conn) { return connections.push(conn); }); // add the filtered connections\r\n        }\r\n        // Add common conn genes uniformly\r\n        connections.forEach(function (connectionJSON) {\r\n            if (connectionJSON !== undefined && connectionJSON.toIndex < offspringSize && connectionJSON.fromIndex < offspringSize) {\r\n                var from = offspring.nodes[connectionJSON.fromIndex];\r\n                var to = offspring.nodes[connectionJSON.toIndex];\r\n                var connection = offspring.connect(from, to, connectionJSON.weight);\r\n                if (connectionJSON.gateNodeIndex !== null && connectionJSON.gateNodeIndex < offspringSize) {\r\n                    offspring.addGate(offspring.nodes[connectionJSON.gateNodeIndex], connection);\r\n                }\r\n            }\r\n        });\r\n        return offspring;\r\n    };\r\n    /**\r\n     * Returns a copy of Network.\r\n     *\r\n     * @returns {Network} Returns an identical network\r\n     */\r\n    Network.prototype.copy = function () {\r\n        return Network.fromJSON(this.toJSON());\r\n    };\r\n    /**\r\n     * Connects a Node to another Node or Group in the network\r\n     *\r\n     * @param {Node} from The source Node\r\n     * @param {Node} to The destination Node or Group\r\n     * @param {number} [weight=0] An initial weight for the connections to be formed\r\n     *\r\n     * @returns {Connection[]} An array of the formed connections\r\n     */\r\n    Network.prototype.connect = function (from, to, weight) {\r\n        if (weight === void 0) { weight = 0; }\r\n        var connection = from.connect(to, weight); // run node-level connect\r\n        this.connections.push(connection); // add it to the array\r\n        return connection;\r\n    };\r\n    /**\r\n     * Activates the network\r\n     *\r\n     * It will activate all the nodes in activation order and produce an output.\r\n     *\r\n     * @param {number[]} [input] Input values to activate nodes with\r\n     * @param options\r\n     * @returns {number[]} Squashed output values\r\n     */\r\n    Network.prototype.activate = function (input, options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (input.length !== this.inputSize) {\r\n            throw new RangeError(\"Input size of dataset is different to network input size!\");\r\n        }\r\n        // get default value if no value is given\r\n        options.dropoutRate = Utils_1.getOrDefault(options.dropoutRate, 0);\r\n        options.trace = Utils_1.getOrDefault(options.trace, true);\r\n        this.nodes\r\n            .filter(function (node) { return node.isInputNode(); }) // only input nodes\r\n            .forEach(function (node, index) { return node.activate(input[index], options.trace); }); // activate them with the input\r\n        this.nodes\r\n            .filter(function (node) { return node.isHiddenNode(); }) // only hidden nodes\r\n            .forEach(function (node) {\r\n            if (options.dropoutRate) {\r\n                node.mask = Math.random() >= options.dropoutRate ? 1 : 0;\r\n            }\r\n            node.activate(undefined, options.trace); // activate them\r\n        });\r\n        return this.nodes\r\n            .filter(function (node) { return node.isOutputNode(); }) // only output nodes\r\n            .map(function (node) { return node.activate(undefined, options.trace); }); // map them to there activation value will give the network's output\r\n    };\r\n    /**\r\n     * Backpropagate the network\r\n     *\r\n     * This function allows you to teach the network. If you want to do more complex training, use the `network.train()` function.\r\n     *\r\n     * @param {number[]} target Ideal values of the previous activate. Will use the difference to improve the weights\r\n     * @param options More option for propagation\r\n     */\r\n    Network.prototype.propagate = function (target, options) {\r\n        if (options === void 0) { options = {}; }\r\n        // get default value if value isn't given\r\n        options.rate = Utils_1.getOrDefault(options.rate, 0.3);\r\n        options.momentum = Utils_1.getOrDefault(options.momentum, 0);\r\n        options.update = Utils_1.getOrDefault(options.update, false);\r\n        if (target.length !== this.outputSize) {\r\n            throw new Error(\"Output target length should match network output length\");\r\n        }\r\n        // Backpropagation: output -> hidden -> input\r\n        // propagate through the output nodes\r\n        this.nodes\r\n            .filter(function (node) { return node.isOutputNode(); }) // only output nodes\r\n            .forEach(function (node, index) { return node.propagate(target[index], options); }); // propagate\r\n        // propagate backwards through the hidden nodes\r\n        for (var i = this.nodes.length - 1; i >= 0; i--) {\r\n            if (this.nodes[i].isHiddenNode()) { // only hidden nodes\r\n                this.nodes[i].propagate(undefined, options);\r\n            }\r\n        }\r\n        // propagate through the input nodes\r\n        this.nodes\r\n            .filter(function (node) { return node.isInputNode(); }) // only input nodes\r\n            .forEach(function (node) { return node.propagate(undefined, options); }); // propagate\r\n    };\r\n    /**\r\n     * Clear the context of the network\r\n     */\r\n    Network.prototype.clear = function () {\r\n        this.nodes.forEach(function (node) { return node.clear(); });\r\n    };\r\n    /**\r\n     * Removes the connection of the `from` node to the `to` node\r\n     *\r\n     * @param {Node} from Source node\r\n     * @param {Node} to Destination node\r\n     */\r\n    Network.prototype.disconnect = function (from, to) {\r\n        var _this = this;\r\n        // remove the connection network-level\r\n        this.connections\r\n            .filter(function (conn) { return conn.from === from; }) // check for incoming node\r\n            .filter(function (conn) { return conn.to === to; }) // check for outgoing node\r\n            .forEach(function (conn) {\r\n            if (conn.gateNode !== null) {\r\n                _this.removeGate(conn); // remove possible gate\r\n            }\r\n            Utils_1.removeFromArray(_this.connections, conn); // remove connection from array\r\n        });\r\n        // disconnect node-level\r\n        return from.disconnect(to);\r\n    };\r\n    /**\r\n     * Makes a network node gate a connection\r\n     *\r\n     * @todo Add ability to gate several network connections at once\r\n     *\r\n     * @param {Node} node Gating node\r\n     * @param {Connection} connection Connection to gate with node\r\n     */\r\n    Network.prototype.addGate = function (node, connection) {\r\n        if (this.nodes.indexOf(node) === -1) {\r\n            throw new ReferenceError(\"This node is not part of the network!\");\r\n        }\r\n        else if (connection.gateNode != null) {\r\n            return;\r\n        }\r\n        node.addGate(connection);\r\n        this.gates.push(connection);\r\n    };\r\n    /**\r\n     * Remove the gate of a connection.\r\n     *\r\n     * @param {Connection} connection Connection to remove gate from\r\n     */\r\n    Network.prototype.removeGate = function (connection) {\r\n        if (!this.gates.includes(connection)) {\r\n            throw new Error(\"This connection is not gated!\");\r\n        }\r\n        Utils_1.removeFromArray(this.gates, connection);\r\n        if (connection.gateNode != null) {\r\n            connection.gateNode.removeGate(connection);\r\n        }\r\n    };\r\n    /**\r\n     * Removes a node from a network, all its connections will be redirected. If it gates a connection, the gate will be removed.\r\n     *\r\n     * @param {Node} node Node to remove from the network\r\n     * @param keepGates\r\n     */\r\n    Network.prototype.removeNode = function (node, keepGates) {\r\n        var _this = this;\r\n        if (keepGates === void 0) { keepGates = new Mutation_1.SubNodeMutation().keepGates; }\r\n        if (!this.nodes.includes(node)) {\r\n            throw new ReferenceError(\"This node does not exist in the network!\");\r\n        }\r\n        this.disconnect(node, node); // remove self connection\r\n        var inputs = []; // keep track\r\n        var gates = []; // keep track\r\n        var outputs = []; // keep track\r\n        var connections = []; // keep track\r\n        // read all inputs from node and keep track of the nodes that gate the incoming connection\r\n        for (var i = node.incoming.length - 1; i >= 0; i--) {\r\n            var connection = node.incoming[i];\r\n            if (keepGates && connection.gateNode !== null && connection.gateNode !== node) {\r\n                gates.push(connection.gateNode);\r\n            }\r\n            inputs.push(connection.from);\r\n            this.disconnect(connection.from, node);\r\n        }\r\n        // read all outputs from node and keep track of the nodes that gate the outgoing connection\r\n        for (var i = node.outgoing.length - 1; i >= 0; i--) {\r\n            var connection = node.outgoing[i];\r\n            if (keepGates && connection.gateNode !== null && connection.gateNode !== node) {\r\n                gates.push(connection.gateNode);\r\n            }\r\n            outputs.push(connection.to);\r\n            this.disconnect(node, connection.to);\r\n        }\r\n        // add all connections the node has\r\n        inputs.forEach(function (input) {\r\n            outputs.forEach(function (output) {\r\n                if (!input.isProjectingTo(output)) {\r\n                    connections.push(_this.connect(input, output));\r\n                }\r\n            });\r\n        });\r\n        // as long as there are gates and connections\r\n        while (gates.length > 0 && connections.length > 0) {\r\n            var gate = gates.shift(); // take a gate node and remove it from the array\r\n            if (gate === undefined) {\r\n                continue;\r\n            }\r\n            var connection = Utils_1.pickRandom(connections); // take a random connection\r\n            this.addGate(gate, connection); // gate the connection with the gate node\r\n            Utils_1.removeFromArray(connections, connection); // remove the connection from the array\r\n        }\r\n        // remove every gate the node has\r\n        for (var i = node.gated.length - 1; i >= 0; i--) {\r\n            this.removeGate(node.gated[i]);\r\n        }\r\n        Utils_1.removeFromArray(this.nodes, node); // remove the node from the nodes array\r\n    };\r\n    /**\r\n     * Mutates the network with the given method.\r\n     *\r\n     * @param {Mutation} method [Mutation method](mutation)\r\n     * @param {object} options\r\n     * @param {number} [options.maxNodes]\r\n     * @param {number} [options.maxConnections]\r\n     * @param {number} [options.maxGates] Maximum amount of Gates a network can grow to\r\n     */\r\n    Network.prototype.mutate = function (method, options) {\r\n        method.mutate(this, options);\r\n    };\r\n    /**\r\n     * Selects a random mutation method and returns a mutated copy of the network. Warning! Mutates network directly.\r\n     *\r\n     * @param {Mutation[]} [allowedMethods=methods.mutation.ALL] An array of [Mutation methods](mutation) to automatically pick from\r\n     * @param {object} options\r\n     * @param {number} [options.maxNodes] Maximum amount of [Nodes](node) a network can grow to\r\n     * @param {number} [options.maxConnections] Maximum amount of [Connections](connection) a network can grow to\r\n     * @param {number} [options.maxGates] Maximum amount of Gates a network can grow to\r\n     */\r\n    Network.prototype.mutateRandom = function (allowedMethods, options) {\r\n        if (allowedMethods === void 0) { allowedMethods = Mutation_1.ALL_MUTATIONS; }\r\n        if (options === void 0) { options = {}; }\r\n        if (allowedMethods.length === 0) {\r\n            return;\r\n        }\r\n        // mutate the network with a random allowed mutation\r\n        this.mutate(Utils_1.pickRandom(allowedMethods), options);\r\n    };\r\n    /**\r\n     * Train the given data to this network\r\n     *\r\n     * @param {TrainOptions} options Options used to train network\r\n     * @param {Array<{input:number[],output:number[]}>} options.data A data of input values and ideal output values to train the network with\r\n     * @param {options.loss} [options.loss=new MSELoss()] The [options.loss function](https://en.wikipedia.org/wiki/Loss_function) used to determine network error\r\n     * @param {rate} [options.ratePolicy=new FixedRate(options.rate)] A [learning rate policy](https://towardsdatascience.com/understanding-learning-rates-and-how-it-improves-performance-in-deep-learning-d0d4059c1c10), i.e. how to change the learning rate during training to get better network performance\r\n     * @param {number} [options.rate=0.3] Sets the [learning rate](https://towardsdatascience.com/understanding-learning-rates-and-how-it-improves-performance-in-deep-learning-d0d4059c1c10) of the backpropagation process\r\n     * @param {number} [options.iterations=1000] Sets amount of training cycles the process will maximally run, even when the target error has not been reached.\r\n     * @param {number} [options.error] The target error to train for, once the network falls below this error, the process is stopped. Lower error rates require more training cycles.\r\n     * @param {number} [options.dropout=0] [Dropout rate](https://medium.com/@amarbudhiraja/https-medium-com-amarbudhiraja-learning-less-to-learn-better-options.dropout-in-deep-machine-learning-74334da4bfc5) likelihood for any given neuron to be ignored during network training. Must be between zero and one, numbers closer to one will result in more neurons ignored.\r\n     * @param {number} [options.momentum=0] [Momentum](https://www.willamette.edu/~gorr/classes/cs449/momrate.html). Adds a fraction of the previous weight update to the current one.\r\n     * @param {number} [options.batchSize=1] Sets the (mini-) batch size of your training. Default: 1 [(online training)](https://www.quora.com/What-is-the-difference-between-batch-online-and-mini-batch-training-in-neural-networks-Which-one-should-I-use-for-a-small-to-medium-sized-dataset-for-prediction-purposes)\r\n     * @param {number} [options.crossValidate.testSize] Sets the amount of test cases that should be assigned to cross validation. If data to 0.4, 40% of the given data will be used for cross validation.\r\n     * @param {number} [options.crossValidate.testError] Sets the target error of the validation data.\r\n     * @param {boolean} [options.clear=false] If set to true, will clear the network after every activation. This is useful for training LSTM's, more importantly for time series prediction.\r\n     * @param {boolean} [options.shuffle=false] When set to true, will shuffle the training data every iterationNumber. Good option to use if the network is performing worse in [cross validation](https://artint.info/html/ArtInt_189.html) than in the real training data.\r\n     * @param {number|boolean} [options.log=false] If set to n, outputs training status every n iterations. Setting `log` to 1 will log the status every iteration_number\r\n     * @param {number} [options.schedule.iterations] You can schedule tasks to happen every n iterations. Paired with `options.schedule.function`\r\n     * @param {schedule} [options.schedule.function] A function to run every n iterations as data by `options.schedule.iterations`. Passed as an object with a \"function\" property that contains the function to run.\r\n     *\r\n     * @returns {{error:{number},iterations:{number},time:{number}}} A summary object of the network's performance\r\n     */\r\n    Network.prototype.train = function (options) {\r\n        var _a;\r\n        if (!options.dataset || options.dataset[0].input.length !== this.inputSize || options.dataset[0].output.length !== this.outputSize) {\r\n            throw new Error(\"Dataset input/output size should be same as network input/output size!\");\r\n        }\r\n        // Use the default values, if no value is given\r\n        options.iterations = Utils_1.getOrDefault(options.iterations, -1);\r\n        options.error = Utils_1.getOrDefault(options.error, -1);\r\n        options.loss = Utils_1.getOrDefault(options.loss, new Loss_1.MSELoss());\r\n        options.dropout = Utils_1.getOrDefault(options.dropout, 0);\r\n        options.momentum = Utils_1.getOrDefault(options.momentum, 0);\r\n        options.batchSize = Math.min(options.dataset.length, Utils_1.getOrDefault(options.batchSize, options.dataset.length));\r\n        var baseRate = Utils_1.getOrDefault(options.rate, 0.3);\r\n        options.ratePolicy = Utils_1.getOrDefault(options.ratePolicy, new Rate_1.FixedRate(baseRate));\r\n        options.log = Utils_1.getOrDefault(options.log, NaN);\r\n        var start = Date.now();\r\n        if (options.iterations <= 0 && options.error <= 0) {\r\n            throw new Error(\"At least one of the following options must be specified: error, iterations\");\r\n        }\r\n        // Split into trainingSet and testSet if cross validation is enabled\r\n        var trainingSetSize;\r\n        var trainingSet;\r\n        var testSet;\r\n        if (options.crossValidateTestSize && options.crossValidateTestSize > 0) {\r\n            trainingSetSize = Math.ceil((1 - options.crossValidateTestSize) * options.dataset.length);\r\n            trainingSet = options.dataset.slice(0, trainingSetSize);\r\n            testSet = options.dataset.slice(trainingSetSize);\r\n        }\r\n        else {\r\n            trainingSet = options.dataset;\r\n            testSet = [];\r\n        }\r\n        var currentTrainingRate;\r\n        var iterationCount = 0;\r\n        var error = 1;\r\n        // train until the target error is reached or the target iterations are reached\r\n        while (error > options.error && (options.iterations <= 0 || iterationCount < options.iterations)) {\r\n            iterationCount++;\r\n            // update the rate according to the rate policy\r\n            currentTrainingRate = options.ratePolicy.calc(iterationCount);\r\n            // train a single epoch\r\n            var trainError = this.trainEpoch(trainingSet, options.batchSize, currentTrainingRate, options.momentum, options.loss, options.dropout);\r\n            if (options.clear) {\r\n                this.clear();\r\n            }\r\n            // Run test with the testSet, if cross validation is enabled\r\n            if (options.crossValidateTestSize) {\r\n                error = this.test(testSet, options.loss);\r\n                if (options.clear) {\r\n                    this.clear();\r\n                }\r\n            }\r\n            else {\r\n                error = trainError;\r\n            }\r\n            if ((_a = options.shuffle) !== null && _a !== void 0 ? _a : false) {\r\n                Utils_1.shuffle(options.dataset);\r\n            }\r\n            if (options.log > 0 && iterationCount % options.log === 0) {\r\n                console.log(\"iteration number\", iterationCount, \"error\", error, \"training rate\", currentTrainingRate);\r\n            }\r\n            if (options.schedule && iterationCount % options.schedule.iterations === 0) {\r\n                options.schedule.function(error, iterationCount);\r\n            }\r\n        }\r\n        if (options.clear) {\r\n            this.clear();\r\n        }\r\n        return {\r\n            error: error,\r\n            iterations: iterationCount,\r\n            time: Date.now() - start\r\n        };\r\n    };\r\n    /**\r\n     * Performs one training epoch and returns the error - this is a private function used in `self.train`\r\n     *\r\n     * @todo Add `@param` tag descriptions\r\n     * @todo Add `@returns` tag description\r\n     *\r\n     * @private\r\n     *\r\n     * @param {Array<{input:number[], output: number[]}>} dataset\r\n     * @param {number} batchSize\r\n     * @param {number} trainingRate\r\n     * @param {number} momentum\r\n     * @param {loss} loss\r\n     * @param {number} dropoutRate=0.5 The dropout rate to use when training\r\n     *\r\n     * @returns {number}\r\n     */\r\n    Network.prototype.trainEpoch = function (dataset, batchSize, trainingRate, momentum, loss, dropoutRate) {\r\n        if (dropoutRate === void 0) { dropoutRate = 0.5; }\r\n        var errorSum = 0;\r\n        for (var i = 0; i < dataset.length; i++) {\r\n            var input = dataset[i].input;\r\n            var correctOutput = dataset[i].output;\r\n            var update = (i + 1) % batchSize === 0 || i + 1 === dataset.length;\r\n            var output = this.activate(input, { dropoutRate: dropoutRate });\r\n            this.propagate(correctOutput, { rate: trainingRate, momentum: momentum, update: update });\r\n            errorSum += loss.calc(correctOutput, output);\r\n        }\r\n        return errorSum / dataset.length;\r\n    };\r\n    /**\r\n     * Tests a set and returns the error and elapsed time\r\n     *\r\n     * @param {Array<{input:number[],output:number[]}>} dataset A set of input values and ideal output values to test the network against\r\n     * @param {Loss} [loss=new MSELoss()] The [loss function](https://en.wikipedia.org/wiki/Loss_function) used to determine network error\r\n     *\r\n     * @returns {number} A summary object of the network's performance\r\n     */\r\n    Network.prototype.test = function (dataset, loss) {\r\n        if (loss === void 0) { loss = new Loss_1.MSELoss(); }\r\n        var error = 0;\r\n        for (var _i = 0, dataset_1 = dataset; _i < dataset_1.length; _i++) {\r\n            var entry = dataset_1[_i];\r\n            var input = entry.input;\r\n            var target = entry.output;\r\n            var output = this.activate(input, { trace: false });\r\n            error += loss.calc(target, output);\r\n        }\r\n        return error / dataset.length;\r\n    };\r\n    /**\r\n     * Convert the network to a json object\r\n     *\r\n     * @returns {NetworkJSON} The network represented as a json object\r\n     */\r\n    Network.prototype.toJSON = function () {\r\n        var json = {\r\n            nodes: [],\r\n            connections: [],\r\n            inputSize: this.inputSize,\r\n            outputSize: this.outputSize,\r\n        };\r\n        // set node indices\r\n        for (var i = 0; i < this.nodes.length; i++) {\r\n            this.nodes[i].index = i;\r\n        }\r\n        // convert all nodes to json and add the to the json object\r\n        this.nodes.forEach(function (node) {\r\n            json.nodes.push(node.toJSON());\r\n            if (node.selfConnection.weight !== 0) {\r\n                // if there is a self connection\r\n                // add it to the json object\r\n                json.connections.push(node.selfConnection.toJSON());\r\n            }\r\n        });\r\n        this.connections\r\n            .map(function (conn) { return conn.toJSON(); }) // convert all connections to json\r\n            .forEach(function (connJSON) { return json.connections.push(connJSON); }); // and add them to the json object\r\n        return json;\r\n    };\r\n    /**\r\n     * Evolves the network to reach a lower error on a dataset using the [NEAT algorithm](http://nn.cs.utexas.edu/downloads/papers/stanley.ec02.pdf)\r\n     *\r\n     * If both `iterations` and `error` options are unset, evolve will default to `iterations` as an end condition.\r\n     * @param {object} [options] Configuration options\r\n     * @param {number} [options.iterations=1000] Set the maximum amount of iterations/generations for the algorithm to run.\r\n     * @param {number} [options.error=0.05] Set the target error. The algorithm will stop once this target error has been reached.\r\n     * @param {number} [options.growth=0.0001] Set the penalty for large networks. Penalty calculation: penalty = (genome.nodes.length + genome.connections.length + genome.gates.length) * growth; This penalty will get added on top of the error. Your growth should be a very small number.\r\n     * @param {loss} [options.loss=loss.MSE]  Specify the loss function for the evolution, this tells a genome in the population how well it's performing. Default: methods.loss.MSE (recommended).\r\n     * @param {number} [options.amount=1] Set the amount of times to test the trainingSet on a genome each generation. Useful for time series. Do not use for regular feed forward problems.\r\n     * @param {number} [options.threads] Specify the amount of threads to use. Default value is the amount of cores in your CPU.\r\n     * @param {Network} [options.network]\r\n     * @param {number|boolean} [options.log=false] If set to n, outputs training status every n iterations. Setting `log` to 1 will log the status every iteration\r\n     * @param {number} [options.schedule.iterations] You can schedule tasks to happen every n iterations. Paired with `options.schedule.function`\r\n     * @param {schedule} [options.schedule.function] A function to run every n iterations as set by `options.schedule.iterations`. Passed as an object with a \"function\" property that contains the function to run.\r\n     * @param {boolean} [options.clear=false] If set to true, will clear the network after every activation. This is useful for evolving recurrent networks, more importantly for time series prediction.\r\n     * @param {boolean} [options.equal=true] If set to true when [Network.crossOver](Network.crossOver) runs it will assume both genomes are equally fit.\r\n     * @param {number} [options.populationSize=50] Population size of each generation.\r\n     * @param {number} [options.elitism=1] Elitism of every evolution loop. [Elitism in genetic algorithms.](https://www.researchgate.net/post/What_is_meant_by_the_term_Elitism_in_the_Genetic_Algorithm)\r\n     * @param {number} [options.provenance=0] Number of genomes inserted into the original network template (Network(input,output)) per evolution.\r\n     * @param {number} [options.mutationRate=0.4] Sets the mutation rate. If set to 0.3, 30% of the new population will be mutated.\r\n     * @param {number} [options.mutationAmount=1] If mutation occurs (randomNumber < mutationRate), sets amount of times a mutation method will be applied to the network.\r\n     * @param {boolean} [options.fitnessPopulation=true] Flag to return the fitness of a population of genomes. false => evaluate each genome individually. true => evaluate entire population. Adjust fitness function accordingly\r\n     * @param {Function} [options.fitness] - A fitness function to evaluate the networks. Takes a `genome`, i.e. a [network](Network), and a `dataset` and sets the genome's score property\r\n     * @param {string} [options.selection=new FitnessProportionateSelection()] [Selection method](selection) for evolution (e.g. methods.Selection.FITNESS_PROPORTIONATE).\r\n     * @param {Array} [options.crossover] Sets allowed crossover methods for evolution.\r\n     * @param {Array} [options.mutation] Sets allowed [mutation methods](mutation) for evolution, a random mutation method will be chosen from the array when mutation occurs. Optional, but default methods are non-recurrent.\r\n     * @param {number} [options.maxNodes=Infinity] Maximum nodes for a potential network\r\n     * @param {number} [options.maxConnections=Infinity] Maximum connections for a potential network\r\n     * @param {number} [options.maxGates=Infinity] Maximum gates for a potential network\r\n     * @param {function} [options.mutationSelection=random] Custom mutation selection function if given\r\n     * @param {boolean} [options.efficientMutation=false] Test & reduce [mutation methods](mutation) to avoid failed mutation attempts\r\n     *\r\n     * @returns {{error:{number},iterations:{number},time:{number}}} A summary object of the network's performance. <br /> Properties include: `error` - error of the best genome, `iterations` - generations used to evolve networks, `time` - clock time elapsed while evolving\r\n     */\r\n    Network.prototype.evolve = function (options) {\r\n        var _a, _b, _c, _d, _e;\r\n        if (options === void 0) { options = {}; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var targetError, start, workerPool, serializedDataSet_1, neat, error, bestFitness, bestGenome, fittest, fitness;\r\n            return __generator(this, function (_f) {\r\n                switch (_f.label) {\r\n                    case 0:\r\n                        if (!options.fitnessFunction && options.dataset && (options.dataset[0].input.length !== this.inputSize || options.dataset[0].output.length !== this.outputSize)) {\r\n                            throw new Error(\"Dataset input/output size should be same as network input/output size!\");\r\n                        }\r\n                        targetError = 0;\r\n                        if (typeof options.iterations === \"undefined\" && typeof options.error === \"undefined\") {\r\n                            options.iterations = 1000;\r\n                            targetError = 0.05;\r\n                        }\r\n                        else if (options.iterations) {\r\n                            targetError = -1; // run until iterations\r\n                        }\r\n                        else if (options.error) {\r\n                            targetError = options.error;\r\n                            options.iterations = 0; // run until error\r\n                        }\r\n                        // set options to default if necessary\r\n                        options.growth = Utils_1.getOrDefault(options.growth, 0.0001);\r\n                        options.loss = Utils_1.getOrDefault(options.loss, new Loss_1.MSELoss());\r\n                        options.maxNodes = Utils_1.getOrDefault(options.maxNodes, Infinity);\r\n                        options.maxConnections = Utils_1.getOrDefault(options.maxConnections, Infinity);\r\n                        options.maxGates = Utils_1.getOrDefault(options.maxGates, Infinity);\r\n                        start = Date.now();\r\n                        if (!options.fitnessFunction) {\r\n                            serializedDataSet_1 = JSON.stringify(options.dataset);\r\n                            // init a pool of workers\r\n                            workerPool = dist_1.Pool(function () { return threads_1.spawn(new threads_1.Worker(\"../multithreading/Worker\")); }, (_a = options.threads) !== null && _a !== void 0 ? _a : 2);\r\n                            options.fitnessFunction = function (population) {\r\n                                return __awaiter(this, void 0, void 0, function () {\r\n                                    var _loop_1, _i, population_1, genome;\r\n                                    var _this = this;\r\n                                    return __generator(this, function (_a) {\r\n                                        switch (_a.label) {\r\n                                            case 0:\r\n                                                _loop_1 = function (genome) {\r\n                                                    // add a task to the workerPool's queue\r\n                                                    // TODO: should not ignore this\r\n                                                    // @ts-ignore\r\n                                                    workerPool.queue(function (test) { return __awaiter(_this, void 0, void 0, function () {\r\n                                                        var _a;\r\n                                                        var _b, _c;\r\n                                                        return __generator(this, function (_d) {\r\n                                                            switch (_d.label) {\r\n                                                                case 0:\r\n                                                                    if (genome === undefined) {\r\n                                                                        return [2 /*return*/];\r\n                                                                    }\r\n                                                                    // test the genome\r\n                                                                    _a = genome;\r\n                                                                    return [4 /*yield*/, test(serializedDataSet_1, JSON.stringify(genome.toJSON()), Loss_1.ALL_LOSSES.indexOf((_b = options.loss) !== null && _b !== void 0 ? _b : new Loss_1.MSELoss()))];\r\n                                                                case 1:\r\n                                                                    // test the genome\r\n                                                                    _a.score = -(_d.sent());\r\n                                                                    if (genome.score === undefined) {\r\n                                                                        genome.score = -Infinity;\r\n                                                                        return [2 /*return*/];\r\n                                                                    }\r\n                                                                    // subtract growth value\r\n                                                                    genome.score -= ((_c = options.growth) !== null && _c !== void 0 ? _c : 0.0001) * (genome.nodes.length\r\n                                                                        - genome.inputSize\r\n                                                                        - genome.outputSize\r\n                                                                        + genome.connections.length\r\n                                                                        + genome.gates.length);\r\n                                                                    return [2 /*return*/];\r\n                                                            }\r\n                                                        });\r\n                                                    }); });\r\n                                                };\r\n                                                for (_i = 0, population_1 = population; _i < population_1.length; _i++) {\r\n                                                    genome = population_1[_i];\r\n                                                    _loop_1(genome);\r\n                                                }\r\n                                                return [4 /*yield*/, workerPool.settled()];\r\n                                            case 1:\r\n                                                _a.sent(); // wait until every task is done\r\n                                                return [2 /*return*/];\r\n                                        }\r\n                                    });\r\n                                });\r\n                            };\r\n                        }\r\n                        options.template = this; // set this network as template for first generation\r\n                        neat = new NEAT_1.NEAT(options);\r\n                        error = -Infinity;\r\n                        bestFitness = -Infinity;\r\n                        _f.label = 1;\r\n                    case 1:\r\n                        if (!(error < -targetError && (options.iterations === 0 || neat.generation < ((_b = options.iterations) !== null && _b !== void 0 ? _b : 0)))) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, neat.evolve()];\r\n                    case 2:\r\n                        fittest = _f.sent();\r\n                        fitness = (_c = fittest.score) !== null && _c !== void 0 ? _c : -Infinity;\r\n                        // add the growth value back to get the real error\r\n                        error = fitness + options.growth * (fittest.nodes.length\r\n                            - fittest.inputSize\r\n                            - fittest.outputSize\r\n                            + fittest.connections.length\r\n                            + fittest.gates.length);\r\n                        if (fitness > bestFitness) {\r\n                            bestFitness = fitness;\r\n                            bestGenome = fittest;\r\n                        }\r\n                        if (((_d = options.log) !== null && _d !== void 0 ? _d : 0) > 0 && neat.generation % ((_e = options.log) !== null && _e !== void 0 ? _e : 0) === 0) {\r\n                            console.log(\"iteration\", neat.generation, \"fitness\", fitness, \"error\", -error);\r\n                        }\r\n                        if (options.schedule && neat.generation % options.schedule.iterations === 0) {\r\n                            options.schedule.function(fitness, -error, neat.generation);\r\n                        }\r\n                        return [3 /*break*/, 1];\r\n                    case 3:\r\n                        if (bestGenome !== undefined) {\r\n                            // set this network to the fittest from NEAT\r\n                            this.nodes = bestGenome.nodes;\r\n                            this.connections = bestGenome.connections;\r\n                            this.gates = bestGenome.gates;\r\n                            if (options.clear) {\r\n                                this.clear();\r\n                            }\r\n                        }\r\n                        if (!workerPool) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, workerPool.terminate()];\r\n                    case 4:\r\n                        _f.sent(); // stop all processes\r\n                        _f.label = 5;\r\n                    case 5: return [2 /*return*/, {\r\n                            error: -error,\r\n                            iterations: neat.generation,\r\n                            time: Date.now() - start,\r\n                        }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Network;\r\n}());\r\nexports.Network = Network;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Architect = void 0;\r\nvar InputLayer_1 = require(\"./Layers/CoreLayers/InputLayer\");\r\nvar OutputLayer_1 = require(\"./Layers/CoreLayers/OutputLayer\");\r\nvar Layer_1 = require(\"./Layers/Layer\");\r\nvar Network_1 = require(\"./Network\");\r\n/**\r\n * Architect constructs multilayer networks with various types of layers.\r\n */\r\nvar Architect = /** @class */ (function () {\r\n    function Architect() {\r\n        this.layers = [];\r\n    }\r\n    /**\r\n     * Adds a layer to the architect.\r\n     *\r\n     * @param layer The layer\r\n     * @param incomingConnectionType The incoming connection to this layer\r\n     * @returns this object to function as builder class\r\n     */\r\n    Architect.prototype.addLayer = function (layer, incomingConnectionType) {\r\n        var connectionType = incomingConnectionType !== null && incomingConnectionType !== void 0 ? incomingConnectionType : layer.getDefaultIncomingConnectionType();\r\n        if (!layer.connectionTypeisAllowed(connectionType)) {\r\n            throw new ReferenceError(\"Connection type \" + connectionType + \" is not allowed at layer \" + layer.constructor.name);\r\n        }\r\n        this.layers.push({\r\n            layer: layer,\r\n            incomingConnectionType: connectionType\r\n        });\r\n        return this; // function as builder class\r\n    };\r\n    /**\r\n     * Build the network from the layers added to the architect.\r\n     *\r\n     * @returns the constructed network\r\n     */\r\n    Architect.prototype.buildModel = function () {\r\n        var _a, _b, _c, _d, _e;\r\n        if (!(this.layers[0].layer instanceof InputLayer_1.InputLayer)) {\r\n            throw new ReferenceError(\"First layer has to be a InputLayer! Currently is: \" + this.layers[0].layer.constructor.name);\r\n        }\r\n        if (!(this.layers[this.layers.length - 1].layer instanceof OutputLayer_1.OutputLayer)) {\r\n            throw new ReferenceError(\"Last layer has to be a OutputLayer! Currently is: \" + this.layers[this.layers.length - 1].layer.constructor.name);\r\n        }\r\n        var inputSize = this.layers[0].layer.nodes.length;\r\n        var outputSize = this.layers[this.layers.length - 1].layer.nodes.length;\r\n        var network = new Network_1.Network(inputSize, outputSize);\r\n        network.nodes = [];\r\n        network.connections = [];\r\n        for (var i = 0; i < this.layers.length - 1; i++) {\r\n            (_a = network.connections).push.apply(_a, Layer_1.Layer.connect(this.layers[i].layer, this.layers[i + 1].layer, this.layers[i + 1].incomingConnectionType));\r\n            (_b = network.nodes).push.apply(_b, this.layers[i].layer.nodes);\r\n            (_c = network.connections).push.apply(_c, this.layers[i].layer.connections);\r\n            (_d = network.gates).push.apply(_d, this.layers[i].layer.gates);\r\n        }\r\n        (_e = network.nodes).push.apply(_e, this.layers[this.layers.length - 1].layer.nodes);\r\n        return network;\r\n    };\r\n    return Architect;\r\n}());\r\nexports.Architect = Architect;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.generateGaussian = exports.avg = exports.sum = exports.min = exports.minValueIndex = exports.maxValueIndex = exports.max = exports.shuffle = exports.getOrDefault = exports.removeFromArray = exports.randBoolean = exports.randDouble = exports.randInt = exports.pickRandom = exports.TournamentSelection = exports.PowerSelection = exports.FitnessProportionateSelection = exports.Selection = exports.InverseRate = exports.ExponentialRate = exports.StepRate = exports.FixedRate = exports.Rate = exports.SwapNodesMutation = exports.SubBackConnectionMutation = exports.AddBackConnectionMutation = exports.SubSelfConnectionMutation = exports.AddSelfConnectionMutation = exports.SubGateMutation = exports.AddGateMutation = exports.ModActivationMutation = exports.ModBiasMutation = exports.ModWeightMutation = exports.SubConnectionMutation = exports.AddConnectionMutation = exports.SubNodeMutation = exports.AddNodeMutation = exports.Mutation = exports.ONLY_STRUCTURE = exports.NO_STRUCTURE_MUTATIONS = exports.FEEDFORWARD_MUTATIONS = exports.ALL_MUTATIONS = exports.HINGELoss = exports.MSLELoss = exports.WAPELoss = exports.MAPELoss = exports.MAELoss = exports.BinaryLoss = exports.MSELoss = exports.CrossEntropyLoss = exports.Loss = exports.ALL_LOSSES = exports.SELUActivation = exports.InverseActivation = exports.AbsoluteActivation = exports.HardTanhActivation = exports.BipolarSigmoidActivation = exports.BipolarActivation = exports.BentIdentityActivation = exports.GaussianActivation = exports.SinusoidActivation = exports.SoftSignActivation = exports.RELUActivation = exports.StepActivation = exports.IdentityActivation = exports.TanhActivation = exports.LogisticActivation = exports.Activation = exports.ALL_ACTIVATIONS = exports.NoiseNodeType = exports.PoolNodeType = exports.NodeType = exports.GatingType = exports.ConnectionType = exports.ActivationType = exports.Node = exports.Network = exports.Connection = exports.Architect = exports.PoolNode = exports.NoiseNode = exports.DropoutNode = exports.ConstantNode = exports.Layer = exports.MemoryLayer = exports.LSTMLayer = exports.GRULayer = exports.PoolingLayer = exports.GlobalMaxPooling1DLayer = exports.GlobalMinPooling1DLayer = exports.GlobalAvgPooling1DLayer = exports.MaxPooling1DLayer = exports.MinPooling1DLayer = exports.AvgPooling1DLayer = exports.NoiseLayer = exports.OutputLayer = exports.InputLayer = exports.DropoutLayer = exports.DenseLayer = void 0;\r\nvar DenseLayer_1 = require(\"../src/architecture/Layers/CoreLayers/DenseLayer\");\r\nObject.defineProperty(exports, \"DenseLayer\", { enumerable: true, get: function () { return DenseLayer_1.DenseLayer; } });\r\nvar Node_1 = require(\"../src/architecture/Node\");\r\nObject.defineProperty(exports, \"Node\", { enumerable: true, get: function () { return Node_1.Node; } });\r\nvar DropoutLayer_1 = require(\"../src/architecture/Layers/CoreLayers/DropoutLayer\");\r\nObject.defineProperty(exports, \"DropoutLayer\", { enumerable: true, get: function () { return DropoutLayer_1.DropoutLayer; } });\r\nvar NoiseLayer_1 = require(\"../src/architecture/Layers/NoiseLayers/NoiseLayer\");\r\nObject.defineProperty(exports, \"NoiseLayer\", { enumerable: true, get: function () { return NoiseLayer_1.NoiseLayer; } });\r\nvar OutputLayer_1 = require(\"../src/architecture/Layers/CoreLayers/OutputLayer\");\r\nObject.defineProperty(exports, \"OutputLayer\", { enumerable: true, get: function () { return OutputLayer_1.OutputLayer; } });\r\nvar InputLayer_1 = require(\"../src/architecture/Layers/CoreLayers/InputLayer\");\r\nObject.defineProperty(exports, \"InputLayer\", { enumerable: true, get: function () { return InputLayer_1.InputLayer; } });\r\nvar AvgPooling1DLayer_1 = require(\"../src/architecture/Layers/PoolingLayers/AvgPooling1DLayer\");\r\nObject.defineProperty(exports, \"AvgPooling1DLayer\", { enumerable: true, get: function () { return AvgPooling1DLayer_1.AvgPooling1DLayer; } });\r\nvar MinPooling1DLayer_1 = require(\"../src/architecture/Layers/PoolingLayers/MinPooling1DLayer\");\r\nObject.defineProperty(exports, \"MinPooling1DLayer\", { enumerable: true, get: function () { return MinPooling1DLayer_1.MinPooling1DLayer; } });\r\nvar MaxPooling1DLayer_1 = require(\"../src/architecture/Layers/PoolingLayers/MaxPooling1DLayer\");\r\nObject.defineProperty(exports, \"MaxPooling1DLayer\", { enumerable: true, get: function () { return MaxPooling1DLayer_1.MaxPooling1DLayer; } });\r\nvar GlobalAvgPooling1DLayer_1 = require(\"../src/architecture/Layers/PoolingLayers/GlobalAvgPooling1DLayer\");\r\nObject.defineProperty(exports, \"GlobalAvgPooling1DLayer\", { enumerable: true, get: function () { return GlobalAvgPooling1DLayer_1.GlobalAvgPooling1DLayer; } });\r\nvar GlobalMaxPooling1DLayer_1 = require(\"../src/architecture/Layers/PoolingLayers/GlobalMaxPooling1DLayer\");\r\nObject.defineProperty(exports, \"GlobalMaxPooling1DLayer\", { enumerable: true, get: function () { return GlobalMaxPooling1DLayer_1.GlobalMaxPooling1DLayer; } });\r\nvar GlobalMinPooling1DLayer_1 = require(\"../src/architecture/Layers/PoolingLayers/GlobalMinPooling1DLayer\");\r\nObject.defineProperty(exports, \"GlobalMinPooling1DLayer\", { enumerable: true, get: function () { return GlobalMinPooling1DLayer_1.GlobalMinPooling1DLayer; } });\r\nvar PoolingLayer_1 = require(\"../src/architecture/Layers/PoolingLayers/PoolingLayer\");\r\nObject.defineProperty(exports, \"PoolingLayer\", { enumerable: true, get: function () { return PoolingLayer_1.PoolingLayer; } });\r\nvar GRULayer_1 = require(\"../src/architecture/Layers/RecurrentLayers/GRULayer\");\r\nObject.defineProperty(exports, \"GRULayer\", { enumerable: true, get: function () { return GRULayer_1.GRULayer; } });\r\nvar LSTMLayer_1 = require(\"../src/architecture/Layers/RecurrentLayers/LSTMLayer\");\r\nObject.defineProperty(exports, \"LSTMLayer\", { enumerable: true, get: function () { return LSTMLayer_1.LSTMLayer; } });\r\nvar MemoryLayer_1 = require(\"../src/architecture/Layers/RecurrentLayers/MemoryLayer\");\r\nObject.defineProperty(exports, \"MemoryLayer\", { enumerable: true, get: function () { return MemoryLayer_1.MemoryLayer; } });\r\nvar Layer_1 = require(\"../src/architecture/Layers/Layer\");\r\nObject.defineProperty(exports, \"Layer\", { enumerable: true, get: function () { return Layer_1.Layer; } });\r\nvar ConstantNode_1 = require(\"../src/architecture/Nodes/ConstantNode\");\r\nObject.defineProperty(exports, \"ConstantNode\", { enumerable: true, get: function () { return ConstantNode_1.ConstantNode; } });\r\nvar DropoutNode_1 = require(\"../src/architecture/Nodes/DropoutNode\");\r\nObject.defineProperty(exports, \"DropoutNode\", { enumerable: true, get: function () { return DropoutNode_1.DropoutNode; } });\r\nvar NoiseNode_1 = require(\"../src/architecture/Nodes/NoiseNode\");\r\nObject.defineProperty(exports, \"NoiseNode\", { enumerable: true, get: function () { return NoiseNode_1.NoiseNode; } });\r\nvar PoolNode_1 = require(\"../src/architecture/Nodes/PoolNode\");\r\nObject.defineProperty(exports, \"PoolNode\", { enumerable: true, get: function () { return PoolNode_1.PoolNode; } });\r\nvar Architect_1 = require(\"../src/architecture/Architect\");\r\nObject.defineProperty(exports, \"Architect\", { enumerable: true, get: function () { return Architect_1.Architect; } });\r\nvar Connection_1 = require(\"../src/architecture/Connection\");\r\nObject.defineProperty(exports, \"Connection\", { enumerable: true, get: function () { return Connection_1.Connection; } });\r\nvar Network_1 = require(\"../src/architecture/Network\");\r\nObject.defineProperty(exports, \"Network\", { enumerable: true, get: function () { return Network_1.Network; } });\r\nvar ActivationType_1 = require(\"../src/enums/ActivationType\");\r\nObject.defineProperty(exports, \"ActivationType\", { enumerable: true, get: function () { return ActivationType_1.ActivationType; } });\r\nvar ConnectionType_1 = require(\"../src/enums/ConnectionType\");\r\nObject.defineProperty(exports, \"ConnectionType\", { enumerable: true, get: function () { return ConnectionType_1.ConnectionType; } });\r\nvar GatingType_1 = require(\"../src/enums/GatingType\");\r\nObject.defineProperty(exports, \"GatingType\", { enumerable: true, get: function () { return GatingType_1.GatingType; } });\r\nvar NodeType_1 = require(\"../src/enums/NodeType\");\r\nObject.defineProperty(exports, \"NodeType\", { enumerable: true, get: function () { return NodeType_1.NodeType; } });\r\nObject.defineProperty(exports, \"NoiseNodeType\", { enumerable: true, get: function () { return NodeType_1.NoiseNodeType; } });\r\nObject.defineProperty(exports, \"PoolNodeType\", { enumerable: true, get: function () { return NodeType_1.PoolNodeType; } });\r\nvar Activation_1 = require(\"../src/methods/Activation\");\r\nObject.defineProperty(exports, \"AbsoluteActivation\", { enumerable: true, get: function () { return Activation_1.AbsoluteActivation; } });\r\nObject.defineProperty(exports, \"Activation\", { enumerable: true, get: function () { return Activation_1.Activation; } });\r\nObject.defineProperty(exports, \"ALL_ACTIVATIONS\", { enumerable: true, get: function () { return Activation_1.ALL_ACTIVATIONS; } });\r\nObject.defineProperty(exports, \"BentIdentityActivation\", { enumerable: true, get: function () { return Activation_1.BentIdentityActivation; } });\r\nObject.defineProperty(exports, \"BipolarActivation\", { enumerable: true, get: function () { return Activation_1.BipolarActivation; } });\r\nObject.defineProperty(exports, \"BipolarSigmoidActivation\", { enumerable: true, get: function () { return Activation_1.BipolarSigmoidActivation; } });\r\nObject.defineProperty(exports, \"GaussianActivation\", { enumerable: true, get: function () { return Activation_1.GaussianActivation; } });\r\nObject.defineProperty(exports, \"HardTanhActivation\", { enumerable: true, get: function () { return Activation_1.HardTanhActivation; } });\r\nObject.defineProperty(exports, \"IdentityActivation\", { enumerable: true, get: function () { return Activation_1.IdentityActivation; } });\r\nObject.defineProperty(exports, \"InverseActivation\", { enumerable: true, get: function () { return Activation_1.InverseActivation; } });\r\nObject.defineProperty(exports, \"LogisticActivation\", { enumerable: true, get: function () { return Activation_1.LogisticActivation; } });\r\nObject.defineProperty(exports, \"RELUActivation\", { enumerable: true, get: function () { return Activation_1.RELUActivation; } });\r\nObject.defineProperty(exports, \"SELUActivation\", { enumerable: true, get: function () { return Activation_1.SELUActivation; } });\r\nObject.defineProperty(exports, \"SinusoidActivation\", { enumerable: true, get: function () { return Activation_1.SinusoidActivation; } });\r\nObject.defineProperty(exports, \"SoftSignActivation\", { enumerable: true, get: function () { return Activation_1.SoftSignActivation; } });\r\nObject.defineProperty(exports, \"StepActivation\", { enumerable: true, get: function () { return Activation_1.StepActivation; } });\r\nObject.defineProperty(exports, \"TanhActivation\", { enumerable: true, get: function () { return Activation_1.TanhActivation; } });\r\nvar Loss_1 = require(\"../src/methods/Loss\");\r\nObject.defineProperty(exports, \"ALL_LOSSES\", { enumerable: true, get: function () { return Loss_1.ALL_LOSSES; } });\r\nObject.defineProperty(exports, \"BinaryLoss\", { enumerable: true, get: function () { return Loss_1.BinaryLoss; } });\r\nObject.defineProperty(exports, \"CrossEntropyLoss\", { enumerable: true, get: function () { return Loss_1.CrossEntropyLoss; } });\r\nObject.defineProperty(exports, \"HINGELoss\", { enumerable: true, get: function () { return Loss_1.HINGELoss; } });\r\nObject.defineProperty(exports, \"Loss\", { enumerable: true, get: function () { return Loss_1.Loss; } });\r\nObject.defineProperty(exports, \"MAELoss\", { enumerable: true, get: function () { return Loss_1.MAELoss; } });\r\nObject.defineProperty(exports, \"MAPELoss\", { enumerable: true, get: function () { return Loss_1.MAPELoss; } });\r\nObject.defineProperty(exports, \"MSELoss\", { enumerable: true, get: function () { return Loss_1.MSELoss; } });\r\nObject.defineProperty(exports, \"MSLELoss\", { enumerable: true, get: function () { return Loss_1.MSLELoss; } });\r\nObject.defineProperty(exports, \"WAPELoss\", { enumerable: true, get: function () { return Loss_1.WAPELoss; } });\r\nvar Mutation_1 = require(\"../src/methods/Mutation\");\r\nObject.defineProperty(exports, \"AddBackConnectionMutation\", { enumerable: true, get: function () { return Mutation_1.AddBackConnectionMutation; } });\r\nObject.defineProperty(exports, \"AddConnectionMutation\", { enumerable: true, get: function () { return Mutation_1.AddConnectionMutation; } });\r\nObject.defineProperty(exports, \"AddGateMutation\", { enumerable: true, get: function () { return Mutation_1.AddGateMutation; } });\r\nObject.defineProperty(exports, \"AddNodeMutation\", { enumerable: true, get: function () { return Mutation_1.AddNodeMutation; } });\r\nObject.defineProperty(exports, \"AddSelfConnectionMutation\", { enumerable: true, get: function () { return Mutation_1.AddSelfConnectionMutation; } });\r\nObject.defineProperty(exports, \"ALL_MUTATIONS\", { enumerable: true, get: function () { return Mutation_1.ALL_MUTATIONS; } });\r\nObject.defineProperty(exports, \"FEEDFORWARD_MUTATIONS\", { enumerable: true, get: function () { return Mutation_1.FEEDFORWARD_MUTATIONS; } });\r\nObject.defineProperty(exports, \"ModActivationMutation\", { enumerable: true, get: function () { return Mutation_1.ModActivationMutation; } });\r\nObject.defineProperty(exports, \"ModBiasMutation\", { enumerable: true, get: function () { return Mutation_1.ModBiasMutation; } });\r\nObject.defineProperty(exports, \"ModWeightMutation\", { enumerable: true, get: function () { return Mutation_1.ModWeightMutation; } });\r\nObject.defineProperty(exports, \"Mutation\", { enumerable: true, get: function () { return Mutation_1.Mutation; } });\r\nObject.defineProperty(exports, \"NO_STRUCTURE_MUTATIONS\", { enumerable: true, get: function () { return Mutation_1.NO_STRUCTURE_MUTATIONS; } });\r\nObject.defineProperty(exports, \"ONLY_STRUCTURE\", { enumerable: true, get: function () { return Mutation_1.ONLY_STRUCTURE; } });\r\nObject.defineProperty(exports, \"SubBackConnectionMutation\", { enumerable: true, get: function () { return Mutation_1.SubBackConnectionMutation; } });\r\nObject.defineProperty(exports, \"SubConnectionMutation\", { enumerable: true, get: function () { return Mutation_1.SubConnectionMutation; } });\r\nObject.defineProperty(exports, \"SubGateMutation\", { enumerable: true, get: function () { return Mutation_1.SubGateMutation; } });\r\nObject.defineProperty(exports, \"SubNodeMutation\", { enumerable: true, get: function () { return Mutation_1.SubNodeMutation; } });\r\nObject.defineProperty(exports, \"SubSelfConnectionMutation\", { enumerable: true, get: function () { return Mutation_1.SubSelfConnectionMutation; } });\r\nObject.defineProperty(exports, \"SwapNodesMutation\", { enumerable: true, get: function () { return Mutation_1.SwapNodesMutation; } });\r\nvar Rate_1 = require(\"../src/methods/Rate\");\r\nObject.defineProperty(exports, \"ExponentialRate\", { enumerable: true, get: function () { return Rate_1.ExponentialRate; } });\r\nObject.defineProperty(exports, \"FixedRate\", { enumerable: true, get: function () { return Rate_1.FixedRate; } });\r\nObject.defineProperty(exports, \"InverseRate\", { enumerable: true, get: function () { return Rate_1.InverseRate; } });\r\nObject.defineProperty(exports, \"Rate\", { enumerable: true, get: function () { return Rate_1.Rate; } });\r\nObject.defineProperty(exports, \"StepRate\", { enumerable: true, get: function () { return Rate_1.StepRate; } });\r\nvar Selection_1 = require(\"../src/methods/Selection\");\r\nObject.defineProperty(exports, \"FitnessProportionateSelection\", { enumerable: true, get: function () { return Selection_1.FitnessProportionateSelection; } });\r\nObject.defineProperty(exports, \"PowerSelection\", { enumerable: true, get: function () { return Selection_1.PowerSelection; } });\r\nObject.defineProperty(exports, \"Selection\", { enumerable: true, get: function () { return Selection_1.Selection; } });\r\nObject.defineProperty(exports, \"TournamentSelection\", { enumerable: true, get: function () { return Selection_1.TournamentSelection; } });\r\nvar Utils_1 = require(\"../src/methods/Utils\");\r\nObject.defineProperty(exports, \"avg\", { enumerable: true, get: function () { return Utils_1.avg; } });\r\nObject.defineProperty(exports, \"generateGaussian\", { enumerable: true, get: function () { return Utils_1.generateGaussian; } });\r\nObject.defineProperty(exports, \"getOrDefault\", { enumerable: true, get: function () { return Utils_1.getOrDefault; } });\r\nObject.defineProperty(exports, \"max\", { enumerable: true, get: function () { return Utils_1.max; } });\r\nObject.defineProperty(exports, \"maxValueIndex\", { enumerable: true, get: function () { return Utils_1.maxValueIndex; } });\r\nObject.defineProperty(exports, \"min\", { enumerable: true, get: function () { return Utils_1.min; } });\r\nObject.defineProperty(exports, \"minValueIndex\", { enumerable: true, get: function () { return Utils_1.minValueIndex; } });\r\nObject.defineProperty(exports, \"pickRandom\", { enumerable: true, get: function () { return Utils_1.pickRandom; } });\r\nObject.defineProperty(exports, \"randBoolean\", { enumerable: true, get: function () { return Utils_1.randBoolean; } });\r\nObject.defineProperty(exports, \"randDouble\", { enumerable: true, get: function () { return Utils_1.randDouble; } });\r\nObject.defineProperty(exports, \"randInt\", { enumerable: true, get: function () { return Utils_1.randInt; } });\r\nObject.defineProperty(exports, \"removeFromArray\", { enumerable: true, get: function () { return Utils_1.removeFromArray; } });\r\nObject.defineProperty(exports, \"shuffle\", { enumerable: true, get: function () { return Utils_1.shuffle; } });\r\nObject.defineProperty(exports, \"sum\", { enumerable: true, get: function () { return Utils_1.sum; } });\r\n"]}