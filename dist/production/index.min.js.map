{"version":3,"sources":["architecture/layer/Layer.js","architecture/layer/ConvolutionLayer.js","methods/Activation.js","architecture/Connection.js","methods/Utils.js","architecture/Node.js","architecture/layer/DenseLayer.js","architecture/layer/GaussianNoiseLayer.js","architecture/layer/InputLayer.js","architecture/layer/LSTMLayer.js","architecture/layer/PoolLayer.js","architecture/layer/RNNLayer.js","architecture/Architect.js","methods/Mutation.js","methods/Loss.js","methods/Rate.js","methods/Selection.js","NEAT.js","architecture/Network.js","architecture/node.js","index.js"],"names":["Object","defineProperty","exports","value","Layer","inputSize","outputSize","nodes","connections","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Layer_1","require","ConvolutionLayer","_super","call","Activation","type","ActivationType","NO_ACTIVATION","getActivation","activationType","LogisticActivation","TanhActivation","IdentityActivation","StepActivation","RELUActivation","SoftsignActivation","SinusoidActivation","GaussianActivation","BentIdentityActivation","BipolarActivation","BipolarSigmoidActivation","HardTanhActivation","AbsoluteActivation","InverseActivation","SELUActivation","ReferenceError","ALL_ACTIVATIONS","calc","x","derivative","Math","exp","tanh","abs","cos","sin","sqrt","max","min","alpha","scale","Connection","from","to","weight","gateNode","gain","eligibility","deltaWeightsPrevious","deltaWeightsTotal","xTraceNodes","xTraceValues","addGate","innovationID","a","toJSON","fromIndex","index","toIndex","gateNodeIndex","pickRandom","arr","randInt","length","floor","random","randDouble","randBoolean","anyMatch","target","_i","arr_1","elem","remove","indexOf","splice","getOrDefault","defaultValue","shuffle","array","counter","temp","NodeType","Activation_1","Connection_1","Utils_1","Node","HIDDEN","bias","squash","activation","state","old","mask","deltaBiasPrevious","deltaBiasTotal","incoming","outgoing","gated","selfConnection","errorResponsibility","errorProjected","errorGated","NaN","fromJSON","json","node","clear","_a","connection","_b","_c","mutateBias","method","mutateActivation","newActivationType","isProjectedBy","map","conn","isProjectingTo","push","removeGate","connect","twoSided","disconnect","undefined","Error","propagate","momentum","rate","update","Number","isFinite","influence","_d","_e","gradient","j","responsibility","projected","activate","input","trace","_this","forEach","nodes_1","influences_1","i","isInputNode","INPUT","isHiddenNode","isOutputNode","OUTPUT","Node_1","DenseLayer","filter","inputNode","outputNode","GaussianNoiseLayer","InputLayer","LSTMLayer","PoolingType","PoolLayer","RNNLayer","Architect","layers","addLayer","layer","RangeError","Mutation","AddNodeMutation","randomActivation","mutate","genome","maxNodes","minBound","newConnection1","newConnection2","SubNodeMutation","keepGates","possible","removeNode","AddConnectionMutation","apply","arguments","maxConnections","pair","SubConnectionMutation","randomConnection","ModWeightMutation","ModBiasMutation","ModActivationMutation","mutateOutput","AddSelfConnectionMutation","SubSelfConnectionMutation","AddGateMutation","maxGates","gates","SubGateMutation","AddBackConnectionMutation","SubBackConnectionMutation","SwapNodesMutation","node1_1","node2","biasTemp","squashTemp","ALL_MUTATIONS","FEEDFORWARD_MUTATIONS","Loss","CrossEntropyLoss","targets","outputs","error","log","MSELoss","pow","BinaryLoss","round","MAELoss","MAPELoss","WAPELoss","sum","MSLELoss","HINGELoss","ALL_LOSSES","Rate","baseRate","FixedRate","iteration","StepRate","gamma","stepSize","ExponentialRate","InverseRate","power","Selection","FitnessProportionateSelection","select","population","totalFitness","minimalFitness","population_1","score","population_2","PowerSelection","TournamentSelection","size","probability","individuals","sort","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","adopt","done","then","__generator","body","_","f","y","t","g","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","pop","__spreadArrays","s","il","r","k","jl","Network_1","Selection_1","Mutation_1","NEAT","dataset","options","generation","output","equal","populationSize","elitism","provenance","mutationRate","mutationAmount","fitnessPopulation","fitnessFunction","selection","mutations","template","Network","Infinity","createInitialPopulation","filterGenome","pickGenome","adjustGenome","filtered","copy","mutateRandom","name","evolve","elitists","newPopulation","fittest","evaluate","fill","getOffspring","parent1","parent2","crossOver","getFittest","getAverage","val","Loss_1","Rate_1","NEAT_1","network","nodeJSON","jsonConnection","network1","network2","offspring","score1","offspringSize","score2","chosenNode","chosenNodeType","inputNumber","sourceNetwork","outputNumber","newNode","n1connections","n2connections","keys1","keys","keys2","parseInt","key","connectionJSON","dropoutRate","inputNodeIndex","targetIndex","inputs","gate","shift","allowedMethods","train","iterations","loss","dropout","batchSize","ratePolicy","targetError","trainingSetSize","trainingSet","testSet","currentTrainingRate","start","Date","now","crossValidateTestSize","ceil","slice","iterationCount","trainError","trainEpoch","test","console","schedule","function","time","trainingRate","errorSum","correctOutput","dataset_1","entry","neat","bestFitness","bestGenome","fitness","growth","amount","isArray","all","__importStar","mod","__esModule","ConvolutionLayer_1","DenseLayer_1","GaussianNoiseLayer_1","InputLayer_1","LSTMLayer_1","PoolLayer_1","RNNLayer_1","Architect_1","node_1"],"mappings":"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","file":"index.min.js","sourceRoot":"..\\..\\build\\src","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Layer = /** @class */ (function () {\r\n    function Layer(inputSize, outputSize) {\r\n        this.inputSize = inputSize;\r\n        this.outputSize = outputSize;\r\n        this.nodes = [];\r\n        this.connections = [];\r\n    }\r\n    return Layer;\r\n}());\r\nexports.Layer = Layer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Layer_1 = require(\"./Layer\");\r\nvar ConvolutionLayer = /** @class */ (function (_super) {\r\n    __extends(ConvolutionLayer, _super);\r\n    function ConvolutionLayer(inputSize, outputSize) {\r\n        return _super.call(this, inputSize, outputSize) || this;\r\n    }\r\n    return ConvolutionLayer;\r\n}(Layer_1.Layer));\r\nexports.ConvolutionLayer = ConvolutionLayer;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Activation = /** @class */ (function () {\r\n    function Activation() {\r\n        this.type = ActivationType.NO_ACTIVATION;\r\n    }\r\n    Activation.getActivation = function (activationType) {\r\n        switch (activationType) {\r\n            case ActivationType.LogisticActivation:\r\n                return new LogisticActivation();\r\n            case ActivationType.TanhActivation:\r\n                return new TanhActivation();\r\n            case ActivationType.IdentityActivation:\r\n                return new IdentityActivation();\r\n            case ActivationType.StepActivation:\r\n                return new StepActivation();\r\n            case ActivationType.RELUActivation:\r\n                return new RELUActivation();\r\n            case ActivationType.SoftsignActivation:\r\n                return new SoftsignActivation();\r\n            case ActivationType.SinusoidActivation:\r\n                return new LogisticActivation();\r\n            case ActivationType.GaussianActivation:\r\n                return new GaussianActivation();\r\n            case ActivationType.BentIdentityActivation:\r\n                return new BentIdentityActivation();\r\n            case ActivationType.BipolarActivation:\r\n                return new BipolarActivation();\r\n            case ActivationType.BipolarSigmoidActivation:\r\n                return new BipolarSigmoidActivation();\r\n            case ActivationType.HardTanhActivation:\r\n                return new HardTanhActivation();\r\n            case ActivationType.AbsoluteActivation:\r\n                return new AbsoluteActivation();\r\n            case ActivationType.InverseActivation:\r\n                return new InverseActivation();\r\n            case ActivationType.SELUActivation:\r\n                return new SELUActivation();\r\n        }\r\n        throw new ReferenceError(activationType + \" is not the name of any available activations! These are all available activations: \" + exports.ALL_ACTIVATIONS);\r\n    };\r\n    return Activation;\r\n}());\r\nexports.Activation = Activation;\r\nvar LogisticActivation = /** @class */ (function () {\r\n    function LogisticActivation() {\r\n        this.type = ActivationType.LogisticActivation;\r\n    }\r\n    LogisticActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return 1 / (1 + Math.exp(-x));\r\n        }\r\n        else {\r\n            return this.calc(x, false) * (1 - this.calc(x, false));\r\n        }\r\n    };\r\n    return LogisticActivation;\r\n}());\r\nexports.LogisticActivation = LogisticActivation;\r\nvar TanhActivation = /** @class */ (function () {\r\n    function TanhActivation() {\r\n        this.type = ActivationType.TanhActivation;\r\n    }\r\n    TanhActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return Math.tanh(x);\r\n        }\r\n        else {\r\n            return 1 - this.calc(x, false) * this.calc(x, false);\r\n        }\r\n    };\r\n    return TanhActivation;\r\n}());\r\nexports.TanhActivation = TanhActivation;\r\nvar IdentityActivation = /** @class */ (function () {\r\n    function IdentityActivation() {\r\n        this.type = ActivationType.IdentityActivation;\r\n    }\r\n    IdentityActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return x;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    return IdentityActivation;\r\n}());\r\nexports.IdentityActivation = IdentityActivation;\r\nvar StepActivation = /** @class */ (function () {\r\n    function StepActivation() {\r\n        this.type = ActivationType.StepActivation;\r\n    }\r\n    StepActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return x < 0 ? 0 : 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    return StepActivation;\r\n}());\r\nexports.StepActivation = StepActivation;\r\nvar RELUActivation = /** @class */ (function () {\r\n    function RELUActivation() {\r\n        this.type = ActivationType.RELUActivation;\r\n    }\r\n    RELUActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return x <= 0 ? 0 : x;\r\n        }\r\n        else {\r\n            return x <= 0 ? 0 : 1;\r\n        }\r\n    };\r\n    return RELUActivation;\r\n}());\r\nexports.RELUActivation = RELUActivation;\r\nvar SoftsignActivation = /** @class */ (function () {\r\n    function SoftsignActivation() {\r\n        this.type = ActivationType.SoftsignActivation;\r\n    }\r\n    SoftsignActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return x / (1 + Math.abs(x));\r\n        }\r\n        else {\r\n            return x / ((1 + Math.abs(x)) * (1 + Math.abs(x)));\r\n        }\r\n    };\r\n    return SoftsignActivation;\r\n}());\r\nexports.SoftsignActivation = SoftsignActivation;\r\nvar SinusoidActivation = /** @class */ (function () {\r\n    function SinusoidActivation() {\r\n        this.type = ActivationType.SinusoidActivation;\r\n    }\r\n    SinusoidActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return Math.sin(x);\r\n        }\r\n        else {\r\n            return Math.cos(x);\r\n        }\r\n    };\r\n    return SinusoidActivation;\r\n}());\r\nexports.SinusoidActivation = SinusoidActivation;\r\nvar GaussianActivation = /** @class */ (function () {\r\n    function GaussianActivation() {\r\n        this.type = ActivationType.GaussianActivation;\r\n    }\r\n    GaussianActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return Math.exp(-x * x);\r\n        }\r\n        else {\r\n            return -2 * x * this.calc(x, false);\r\n        }\r\n    };\r\n    return GaussianActivation;\r\n}());\r\nexports.GaussianActivation = GaussianActivation;\r\nvar BentIdentityActivation = /** @class */ (function () {\r\n    function BentIdentityActivation() {\r\n        this.type = ActivationType.BentIdentityActivation;\r\n    }\r\n    BentIdentityActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return (Math.sqrt(x * x + 1) - 1) / 2 + x;\r\n        }\r\n        else {\r\n            return x / (2 * Math.sqrt(x * x + 1)) + 1;\r\n        }\r\n    };\r\n    return BentIdentityActivation;\r\n}());\r\nexports.BentIdentityActivation = BentIdentityActivation;\r\nvar BipolarActivation = /** @class */ (function () {\r\n    function BipolarActivation() {\r\n        this.type = ActivationType.BipolarActivation;\r\n    }\r\n    BipolarActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return x > 0 ? 1 : -1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    return BipolarActivation;\r\n}());\r\nexports.BipolarActivation = BipolarActivation;\r\nvar BipolarSigmoidActivation = /** @class */ (function () {\r\n    function BipolarSigmoidActivation() {\r\n        this.type = ActivationType.BipolarSigmoidActivation;\r\n    }\r\n    BipolarSigmoidActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return 2 / (1 + Math.exp(-x)) - 1;\r\n        }\r\n        else {\r\n            return (2 * Math.exp(-x)) / ((1 + Math.exp(-x)) * (1 + Math.exp(-x)));\r\n        }\r\n    };\r\n    return BipolarSigmoidActivation;\r\n}());\r\nexports.BipolarSigmoidActivation = BipolarSigmoidActivation;\r\nvar HardTanhActivation = /** @class */ (function () {\r\n    function HardTanhActivation() {\r\n        this.type = ActivationType.HardTanhActivation;\r\n    }\r\n    HardTanhActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return Math.max(-1, Math.min(1, x));\r\n        }\r\n        else {\r\n            return Math.abs(x) < 1 ? 1 : 0;\r\n        }\r\n    };\r\n    return HardTanhActivation;\r\n}());\r\nexports.HardTanhActivation = HardTanhActivation;\r\nvar AbsoluteActivation = /** @class */ (function () {\r\n    function AbsoluteActivation() {\r\n        this.type = ActivationType.AbsoluteActivation;\r\n    }\r\n    AbsoluteActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return Math.abs(x);\r\n        }\r\n        else {\r\n            return x < 0 ? -1 : 1;\r\n        }\r\n    };\r\n    return AbsoluteActivation;\r\n}());\r\nexports.AbsoluteActivation = AbsoluteActivation;\r\nvar InverseActivation = /** @class */ (function () {\r\n    function InverseActivation() {\r\n        this.type = ActivationType.InverseActivation;\r\n    }\r\n    InverseActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        if (!derivative) {\r\n            return 1 - x;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    };\r\n    return InverseActivation;\r\n}());\r\nexports.InverseActivation = InverseActivation;\r\nvar SELUActivation = /** @class */ (function () {\r\n    function SELUActivation() {\r\n        this.type = ActivationType.SELUActivation;\r\n    }\r\n    SELUActivation.prototype.calc = function (x, derivative) {\r\n        if (derivative === void 0) { derivative = false; }\r\n        var alpha = 1.6732632423543772848170429916717;\r\n        var scale = 1.0507009873554804934193349852946;\r\n        if (!derivative) {\r\n            if (x > 0) {\r\n                return x * scale;\r\n            }\r\n            else {\r\n                return alpha * Math.exp(x) - alpha * scale;\r\n            }\r\n        }\r\n        else if (x > 0) {\r\n            return scale;\r\n        }\r\n        else {\r\n            return alpha * Math.exp(x) * scale;\r\n        }\r\n    };\r\n    return SELUActivation;\r\n}());\r\nexports.SELUActivation = SELUActivation;\r\nvar ActivationType;\r\n(function (ActivationType) {\r\n    ActivationType[ActivationType[\"NO_ACTIVATION\"] = 0] = \"NO_ACTIVATION\";\r\n    ActivationType[ActivationType[\"LogisticActivation\"] = 1] = \"LogisticActivation\";\r\n    ActivationType[ActivationType[\"TanhActivation\"] = 2] = \"TanhActivation\";\r\n    ActivationType[ActivationType[\"IdentityActivation\"] = 3] = \"IdentityActivation\";\r\n    ActivationType[ActivationType[\"StepActivation\"] = 4] = \"StepActivation\";\r\n    ActivationType[ActivationType[\"RELUActivation\"] = 5] = \"RELUActivation\";\r\n    ActivationType[ActivationType[\"SoftsignActivation\"] = 6] = \"SoftsignActivation\";\r\n    ActivationType[ActivationType[\"SinusoidActivation\"] = 7] = \"SinusoidActivation\";\r\n    ActivationType[ActivationType[\"GaussianActivation\"] = 8] = \"GaussianActivation\";\r\n    ActivationType[ActivationType[\"BentIdentityActivation\"] = 9] = \"BentIdentityActivation\";\r\n    ActivationType[ActivationType[\"BipolarActivation\"] = 10] = \"BipolarActivation\";\r\n    ActivationType[ActivationType[\"BipolarSigmoidActivation\"] = 11] = \"BipolarSigmoidActivation\";\r\n    ActivationType[ActivationType[\"HardTanhActivation\"] = 12] = \"HardTanhActivation\";\r\n    ActivationType[ActivationType[\"AbsoluteActivation\"] = 13] = \"AbsoluteActivation\";\r\n    ActivationType[ActivationType[\"InverseActivation\"] = 14] = \"InverseActivation\";\r\n    ActivationType[ActivationType[\"SELUActivation\"] = 15] = \"SELUActivation\";\r\n})(ActivationType = exports.ActivationType || (exports.ActivationType = {}));\r\nexports.ALL_ACTIVATIONS = [\r\n    ActivationType.LogisticActivation,\r\n    ActivationType.TanhActivation,\r\n    ActivationType.IdentityActivation,\r\n    ActivationType.StepActivation,\r\n    ActivationType.RELUActivation,\r\n    ActivationType.SoftsignActivation,\r\n    ActivationType.SinusoidActivation,\r\n    ActivationType.GaussianActivation,\r\n    ActivationType.BentIdentityActivation,\r\n    ActivationType.BipolarActivation,\r\n    ActivationType.BipolarSigmoidActivation,\r\n    ActivationType.HardTanhActivation,\r\n    ActivationType.AbsoluteActivation,\r\n    ActivationType.InverseActivation,\r\n    ActivationType.SELUActivation\r\n];\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Connection = /** @class */ (function () {\r\n    function Connection(from, to, weight, gateNode) {\r\n        this.from = from;\r\n        this.to = to;\r\n        this.weight = weight || 0;\r\n        this.gain = 1;\r\n        this.eligibility = 0;\r\n        this.deltaWeightsPrevious = 0;\r\n        this.deltaWeightsTotal = 0;\r\n        this.xTraceNodes = [];\r\n        this.xTraceValues = [];\r\n        if (gateNode) {\r\n            this.gateNode = gateNode;\r\n            gateNode.addGate(this);\r\n        }\r\n        else {\r\n            this.gateNode = null;\r\n        }\r\n    }\r\n    Connection.innovationID = function (a, b) {\r\n        return 1 / 2 * (a + b) * (a + b + 1) + b;\r\n    };\r\n    Connection.prototype.toJSON = function () {\r\n        return {\r\n            fromIndex: this.from.index,\r\n            toIndex: this.to.index,\r\n            gateNodeIndex: this.gateNode === null ? null : this.gateNode.index,\r\n            weight: this.weight\r\n        };\r\n    };\r\n    return Connection;\r\n}());\r\nexports.Connection = Connection;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction pickRandom(arr) {\r\n    return arr[randInt(0, arr.length)];\r\n}\r\nexports.pickRandom = pickRandom;\r\nfunction randInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\nexports.randInt = randInt;\r\nfunction randDouble(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\nexports.randDouble = randDouble;\r\nfunction randBoolean() {\r\n    return Math.random() >= 0.5;\r\n}\r\nexports.randBoolean = randBoolean;\r\nfunction anyMatch(arr, target) {\r\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\r\n        var elem = arr_1[_i];\r\n        if (elem === target) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.anyMatch = anyMatch;\r\nfunction remove(arr, elem) {\r\n    var index = arr.indexOf(elem);\r\n    if (index === -1) {\r\n        return false;\r\n    }\r\n    else {\r\n        arr.splice(index, 1);\r\n        return true;\r\n    }\r\n}\r\nexports.remove = remove;\r\nfunction getOrDefault(value, defaultValue) {\r\n    return value !== undefined && value !== null ? value : defaultValue;\r\n}\r\nexports.getOrDefault = getOrDefault;\r\nfunction shuffle(array) {\r\n    var counter = array.length;\r\n    // While there are elements in the array\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        var index = randInt(0, counter);\r\n        // Decrease counter by 1\r\n        counter--;\r\n        // And swap the last element with it\r\n        var temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n    return array;\r\n}\r\nexports.shuffle = shuffle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Activation_1 = require(\"../methods/Activation\");\r\nvar Connection_1 = require(\"./Connection\");\r\nvar Utils_1 = require(\"../methods/Utils\");\r\nvar Node = /** @class */ (function () {\r\n    function Node(type) {\r\n        if (type === void 0) { type = NodeType.HIDDEN; }\r\n        this.type = type;\r\n        this.bias = Utils_1.randDouble(-1, 1);\r\n        this.squash = new Activation_1.LogisticActivation();\r\n        this.activation = 0;\r\n        this.state = 0;\r\n        this.old = 0;\r\n        this.mask = 1;\r\n        this.deltaBiasPrevious = 0;\r\n        this.deltaBiasTotal = 0;\r\n        this.incoming = [];\r\n        this.outgoing = [];\r\n        this.gated = [];\r\n        this.selfConnection = new Connection_1.Connection(this, this, 0);\r\n        this.errorResponsibility = 0;\r\n        this.errorProjected = 0;\r\n        this.errorGated = 0;\r\n        this.index = NaN;\r\n    }\r\n    Node.fromJSON = function (json) {\r\n        var node = new Node();\r\n        node.bias = json.bias;\r\n        node.type = json.type;\r\n        node.squash = Activation_1.Activation.getActivation(json.squash);\r\n        node.mask = json.mask;\r\n        node.index = json.index;\r\n        return node;\r\n    };\r\n    Node.prototype.clear = function () {\r\n        for (var _i = 0, _a = this.incoming; _i < _a.length; _i++) {\r\n            var connection = _a[_i];\r\n            connection.eligibility = 0;\r\n            connection.xTraceNodes = [];\r\n            connection.xTraceValues = [];\r\n        }\r\n        for (var _b = 0, _c = this.gated; _b < _c.length; _b++) {\r\n            var connection = _c[_b];\r\n            connection.gain = 0;\r\n        }\r\n        this.errorResponsibility = this.errorProjected = this.errorGated = 0;\r\n        this.old = this.state = this.activation = 0;\r\n    };\r\n    Node.prototype.mutateBias = function (method) {\r\n        this.bias += Utils_1.randDouble(method.min, method.max);\r\n    };\r\n    Node.prototype.mutateActivation = function () {\r\n        var newActivationType;\r\n        do {\r\n            newActivationType = Utils_1.pickRandom(Activation_1.ALL_ACTIVATIONS);\r\n        } while (newActivationType === this.squash.type);\r\n        this.squash = Activation_1.Activation.getActivation(newActivationType);\r\n    };\r\n    Node.prototype.isProjectedBy = function (node) {\r\n        if (node === this) {\r\n            return this.selfConnection.weight !== 0;\r\n        }\r\n        else {\r\n            return Utils_1.anyMatch(this.incoming.map(function (conn) { return conn.from; }), node);\r\n        }\r\n    };\r\n    Node.prototype.isProjectingTo = function (node) {\r\n        if (node === this) {\r\n            return this.selfConnection.weight !== 0;\r\n        }\r\n        else {\r\n            return Utils_1.anyMatch(this.outgoing.map(function (conn) { return conn.to; }), node);\r\n        }\r\n    };\r\n    Node.prototype.addGate = function (connection) {\r\n        this.gated.push(connection);\r\n        connection.gateNode = this;\r\n    };\r\n    Node.prototype.removeGate = function (connection) {\r\n        Utils_1.remove(this.gated, connection);\r\n        connection.gateNode = null;\r\n        connection.gain = 1;\r\n    };\r\n    Node.prototype.connect = function (target, weight, twoSided) {\r\n        if (weight === void 0) { weight = 0; }\r\n        if (twoSided === void 0) { twoSided = false; }\r\n        if (target === this) {\r\n            this.selfConnection.weight = weight || 1;\r\n            return this.selfConnection;\r\n        }\r\n        else if (this.isProjectingTo(target)) {\r\n            throw new ReferenceError();\r\n        }\r\n        else {\r\n            var connection = new Connection_1.Connection(this, target, weight);\r\n            this.outgoing.push(connection);\r\n            target.incoming.push(connection);\r\n            if (twoSided) {\r\n                target.connect(this);\r\n            }\r\n            return connection;\r\n        }\r\n    };\r\n    Node.prototype.disconnect = function (node, twoSided) {\r\n        if (twoSided === void 0) { twoSided = false; }\r\n        if (node === this) {\r\n            this.selfConnection.weight = 0;\r\n            return this.selfConnection;\r\n        }\r\n        for (var _i = 0, _a = this.outgoing; _i < _a.length; _i++) {\r\n            var connection = _a[_i];\r\n            if (connection.to !== node) {\r\n                continue;\r\n            }\r\n            Utils_1.remove(this.outgoing, connection);\r\n            Utils_1.remove(connection.to.incoming, connection);\r\n            if (connection.gateNode !== undefined && connection.gateNode != null) {\r\n                connection.gateNode.removeGate(connection);\r\n            }\r\n            if (twoSided) {\r\n                node.disconnect(this);\r\n            }\r\n            return connection;\r\n        }\r\n        throw new Error(\"No connection found!\");\r\n    };\r\n    Node.prototype.propagate = function (target, momentum, rate, update) {\r\n        // TODO: check for errors\r\n        if (target !== undefined && Number.isFinite(target)) {\r\n            this.errorResponsibility = this.errorProjected = target - this.activation;\r\n        }\r\n        else {\r\n            this.errorProjected = 0;\r\n            for (var _i = 0, _a = this.outgoing; _i < _a.length; _i++) {\r\n                var connection = _a[_i];\r\n                this.errorProjected += connection.to.errorResponsibility * connection.weight * connection.gain;\r\n            }\r\n            this.errorProjected *= this.derivative || 1;\r\n            this.errorGated = 0;\r\n            for (var _b = 0, _c = this.gated; _b < _c.length; _b++) {\r\n                var connection = _c[_b];\r\n                var node = connection.to;\r\n                var influence = void 0;\r\n                if (node.selfConnection.gateNode === this) {\r\n                    influence = node.old + connection.weight * connection.from.activation;\r\n                }\r\n                else {\r\n                    influence = connection.weight * connection.from.activation;\r\n                }\r\n                this.errorGated += node.errorResponsibility * influence;\r\n            }\r\n            this.errorGated *= this.derivative || 1;\r\n            this.errorResponsibility = this.errorProjected + this.errorGated;\r\n        }\r\n        for (var _d = 0, _e = this.incoming; _d < _e.length; _d++) {\r\n            var connection = _e[_d];\r\n            var gradient = this.errorProjected * connection.eligibility;\r\n            for (var j = 0; j < connection.xTraceNodes.length; j++) {\r\n                var node = connection.xTraceNodes[j];\r\n                gradient += node.errorResponsibility * connection.xTraceValues[j];\r\n            }\r\n            connection.deltaWeightsTotal += rate * gradient * this.mask;\r\n            if (update) {\r\n                connection.deltaWeightsTotal += momentum * connection.deltaWeightsPrevious;\r\n                connection.weight += connection.deltaWeightsTotal;\r\n                connection.deltaWeightsPrevious = connection.deltaWeightsTotal;\r\n                connection.deltaWeightsTotal = 0;\r\n            }\r\n        }\r\n        this.deltaBiasTotal += rate * this.errorResponsibility;\r\n        if (update) {\r\n            this.deltaBiasTotal += momentum * this.deltaBiasPrevious;\r\n            this.bias += this.deltaBiasTotal;\r\n            this.deltaBiasPrevious = this.deltaBiasTotal;\r\n            this.deltaBiasTotal = 0;\r\n        }\r\n        return {\r\n            responsibility: this.errorResponsibility,\r\n            projected: this.errorProjected,\r\n            gated: this.errorGated,\r\n        };\r\n    };\r\n    Node.prototype.activate = function (input, trace) {\r\n        var _this = this;\r\n        if (input === void 0) { input = null; }\r\n        if (trace === void 0) { trace = true; }\r\n        // TODO: check for errors\r\n        if (input !== null && Number.isFinite(input)) {\r\n            return this.activation = input;\r\n        }\r\n        if (trace) {\r\n            this.old = this.state;\r\n            this.state = this.selfConnection.gain * this.selfConnection.weight * this.state + this.bias;\r\n            this.incoming.forEach(function (conn) {\r\n                _this.state += conn.from.activation * conn.weight * conn.gain;\r\n            });\r\n            this.activation = this.squash.calc(this.state, false) * this.mask;\r\n            this.derivative = this.squash.calc(this.state, true);\r\n            var nodes_1 = [];\r\n            var influences_1 = [];\r\n            this.gated.forEach(function (connection) {\r\n                connection.gain = _this.activation;\r\n                var index = nodes_1.indexOf(connection.to);\r\n                if (index > -1) {\r\n                    influences_1[index] += connection.weight * connection.from.activation;\r\n                }\r\n                else {\r\n                    nodes_1.push(connection.to);\r\n                    if (connection.to.selfConnection.gateNode === _this) {\r\n                        influences_1.push(connection.weight * connection.from.activation + connection.to.old);\r\n                    }\r\n                    else {\r\n                        influences_1.push(connection.weight * connection.from.activation);\r\n                    }\r\n                }\r\n            });\r\n            for (var _i = 0, _a = this.incoming; _i < _a.length; _i++) {\r\n                var connection = _a[_i];\r\n                connection.eligibility = this.selfConnection.gain * this.selfConnection.weight * connection.eligibility + connection.from.activation * connection.gain;\r\n                for (var i = 0; i < nodes_1.length; i++) {\r\n                    var node = nodes_1[i];\r\n                    var influence = influences_1[i];\r\n                    var index = connection.xTraceNodes.indexOf(node);\r\n                    if (index > -1)\r\n                        connection.xTraceValues[index] = node.selfConnection.gain * node.selfConnection.weight * connection.xTraceValues[index] + this.derivative * connection.eligibility * influence;\r\n                    else {\r\n                        connection.xTraceNodes.push(node);\r\n                        connection.xTraceValues.push(this.derivative * connection.eligibility * influence);\r\n                    }\r\n                }\r\n            }\r\n            return this.activation;\r\n        }\r\n        else {\r\n            if (this.isInputNode())\r\n                return this.activation = 0;\r\n            this.state = this.selfConnection.gain * this.selfConnection.weight * this.state + this.bias;\r\n            for (var _b = 0, _c = this.incoming; _b < _c.length; _b++) {\r\n                var connection = _c[_b];\r\n                this.state += connection.from.activation * connection.weight * connection.gain;\r\n            }\r\n            this.activation = this.squash.calc(this.state, false);\r\n            for (var _d = 0, _e = this.gated; _d < _e.length; _d++) {\r\n                var connection = _e[_d];\r\n                connection.gain = this.activation;\r\n            }\r\n            return this.activation;\r\n        }\r\n    };\r\n    Node.prototype.toJSON = function () {\r\n        return {\r\n            bias: this.bias,\r\n            type: this.type,\r\n            squash: this.squash.type,\r\n            mask: this.mask,\r\n            index: this.index\r\n        };\r\n    };\r\n    Node.prototype.isInputNode = function () {\r\n        return this.type === NodeType.INPUT;\r\n    };\r\n    Node.prototype.isHiddenNode = function () {\r\n        return this.type === NodeType.HIDDEN;\r\n    };\r\n    Node.prototype.isOutputNode = function () {\r\n        return this.type === NodeType.OUTPUT;\r\n    };\r\n    return Node;\r\n}());\r\nexports.Node = Node;\r\nvar NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"INPUT\"] = 0] = \"INPUT\";\r\n    NodeType[NodeType[\"HIDDEN\"] = 1] = \"HIDDEN\";\r\n    NodeType[NodeType[\"OUTPUT\"] = 2] = \"OUTPUT\";\r\n})(NodeType = exports.NodeType || (exports.NodeType = {}));\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Layer_1 = require(\"./Layer\");\r\nvar Node_1 = require(\"../Node\");\r\nvar DenseLayer = /** @class */ (function (_super) {\r\n    __extends(DenseLayer, _super);\r\n    function DenseLayer(inputSize, outputSize) {\r\n        var _this = _super.call(this, inputSize, outputSize) || this;\r\n        for (var i = 0; i < inputSize; i++) {\r\n            _this.nodes.push(new Node_1.Node(Node_1.NodeType.INPUT));\r\n        }\r\n        for (var i = 0; i < outputSize; i++) {\r\n            _this.nodes.push(new Node_1.Node(Node_1.NodeType.INPUT));\r\n        }\r\n        _this.nodes\r\n            .filter(function (node) { return node.isInputNode(); })\r\n            .forEach(function (inputNode) {\r\n            _this.nodes\r\n                .filter(function (node) { return node.isOutputNode(); })\r\n                .forEach(function (outputNode) {\r\n                _this.connections.push(inputNode.connect(outputNode, 1));\r\n            });\r\n        });\r\n        return _this;\r\n    }\r\n    return DenseLayer;\r\n}(Layer_1.Layer));\r\nexports.DenseLayer = DenseLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Layer_1 = require(\"./Layer\");\r\nvar GaussianNoiseLayer = /** @class */ (function (_super) {\r\n    __extends(GaussianNoiseLayer, _super);\r\n    function GaussianNoiseLayer(inputSize, outputSize) {\r\n        return _super.call(this, inputSize, outputSize) || this;\r\n    }\r\n    return GaussianNoiseLayer;\r\n}(Layer_1.Layer));\r\nexports.GaussianNoiseLayer = GaussianNoiseLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Layer_1 = require(\"./Layer\");\r\nvar InputLayer = /** @class */ (function (_super) {\r\n    __extends(InputLayer, _super);\r\n    function InputLayer(inputSize, outputSize) {\r\n        return _super.call(this, inputSize, outputSize) || this;\r\n    }\r\n    return InputLayer;\r\n}(Layer_1.Layer));\r\nexports.InputLayer = InputLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Layer_1 = require(\"./Layer\");\r\nvar LSTMLayer = /** @class */ (function (_super) {\r\n    __extends(LSTMLayer, _super);\r\n    function LSTMLayer(inputSize, outputSize) {\r\n        return _super.call(this, inputSize, outputSize) || this;\r\n        // TODO: actually implement\r\n    }\r\n    return LSTMLayer;\r\n}(Layer_1.Layer));\r\nexports.LSTMLayer = LSTMLayer;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Layer_1 = require(\"./Layer\");\r\nvar PoolLayer = /** @class */ (function (_super) {\r\n    __extends(PoolLayer, _super);\r\n    function PoolLayer(inputSize, outputSize, type) {\r\n        return _super.call(this, inputSize, outputSize) || this;\r\n        // TODO: actually implement it\r\n    }\r\n    return PoolLayer;\r\n}(Layer_1.Layer));\r\nexports.PoolLayer = PoolLayer;\r\nvar PoolingType;\r\n(function (PoolingType) {\r\n    PoolingType[PoolingType[\"MaxPooling\"] = 0] = \"MaxPooling\";\r\n    PoolingType[PoolingType[\"AveragePooling\"] = 1] = \"AveragePooling\";\r\n    PoolingType[PoolingType[\"GlobalPooling\"] = 2] = \"GlobalPooling\";\r\n})(PoolingType = exports.PoolingType || (exports.PoolingType = {}));\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Layer_1 = require(\"./Layer\");\r\nvar RNNLayer = /** @class */ (function (_super) {\r\n    __extends(RNNLayer, _super);\r\n    function RNNLayer(inputSize, outputSize) {\r\n        return _super.call(this, inputSize, outputSize) || this;\r\n    }\r\n    return RNNLayer;\r\n}(Layer_1.Layer));\r\nexports.RNNLayer = RNNLayer;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Architect = /** @class */ (function () {\r\n    function Architect() {\r\n        this.layers = [];\r\n    }\r\n    Architect.prototype.addLayer = function (layer) {\r\n        if (this.layers[this.layers.length - 1].outputSize !== layer.inputSize) {\r\n            throw new RangeError(\"Output size of last layer is unequal input size of this layer! \" + this.layers[this.layers.length - 1].outputSize + \" -> \" + layer.inputSize);\r\n        }\r\n        this.layers.push(layer);\r\n        return this;\r\n    };\r\n    return Architect;\r\n}());\r\nexports.Architect = Architect;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Node_1 = require(\"../architecture/Node\");\r\nvar Utils_1 = require(\"./Utils\");\r\nvar Mutation = /** @class */ (function () {\r\n    function Mutation() {\r\n    }\r\n    return Mutation;\r\n}());\r\nexports.Mutation = Mutation;\r\nvar AddNodeMutation = /** @class */ (function (_super) {\r\n    __extends(AddNodeMutation, _super);\r\n    function AddNodeMutation(randomActivation) {\r\n        if (randomActivation === void 0) { randomActivation = true; }\r\n        var _this = _super.call(this) || this;\r\n        _this.randomActivation = randomActivation;\r\n        return _this;\r\n    }\r\n    AddNodeMutation.prototype.mutate = function (genome, maxNodes) {\r\n        if (maxNodes !== undefined && genome.nodes.length >= maxNodes) {\r\n            return;\r\n        }\r\n        var node = new Node_1.Node(Node_1.NodeType.HIDDEN);\r\n        if (this.randomActivation) {\r\n            node.mutateActivation();\r\n        }\r\n        var connection = Utils_1.pickRandom(genome.connections);\r\n        var from = connection.from;\r\n        var to = connection.to;\r\n        genome.disconnect(from, to);\r\n        var minBound = Math.max(genome.inputSize, 1 + genome.nodes.indexOf(from));\r\n        genome.nodes.splice(minBound, 0, node);\r\n        var newConnection1 = genome.connect(from, node, 1);\r\n        var newConnection2 = genome.connect(node, to, connection.weight);\r\n        if (connection.gateNode != null) {\r\n            if (Utils_1.randBoolean()) {\r\n                genome.addGate(connection.gateNode, newConnection1);\r\n            }\r\n            else {\r\n                genome.addGate(connection.gateNode, newConnection2);\r\n            }\r\n        }\r\n    };\r\n    return AddNodeMutation;\r\n}(Mutation));\r\nexports.AddNodeMutation = AddNodeMutation;\r\nvar SubNodeMutation = /** @class */ (function (_super) {\r\n    __extends(SubNodeMutation, _super);\r\n    function SubNodeMutation(keepGates) {\r\n        if (keepGates === void 0) { keepGates = true; }\r\n        var _this = _super.call(this) || this;\r\n        _this.keepGates = keepGates;\r\n        return _this;\r\n    }\r\n    SubNodeMutation.prototype.mutate = function (genome) {\r\n        var possible = genome.nodes.filter(function (node) { return node !== undefined && node.isHiddenNode(); });\r\n        if (possible.length > 0) {\r\n            var node = Utils_1.pickRandom(possible);\r\n            genome.removeNode(node);\r\n        }\r\n    };\r\n    return SubNodeMutation;\r\n}(Mutation));\r\nexports.SubNodeMutation = SubNodeMutation;\r\nvar AddConnectionMutation = /** @class */ (function (_super) {\r\n    __extends(AddConnectionMutation, _super);\r\n    function AddConnectionMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AddConnectionMutation.prototype.mutate = function (genome, maxConnections) {\r\n        if (maxConnections !== undefined && maxConnections <= genome.connections.length) {\r\n            return;\r\n        }\r\n        var possible = [];\r\n        for (var i = 0; i < genome.nodes.length - genome.outputSize; i++) {\r\n            var from = genome.nodes[i];\r\n            for (var j = Math.max(i + 1, genome.inputSize); j < genome.nodes.length; j++) {\r\n                var to = genome.nodes[j];\r\n                if (!from.isProjectingTo(to)) {\r\n                    possible.push([from, to]);\r\n                }\r\n            }\r\n        }\r\n        if (possible.length > 0) {\r\n            var pair = Utils_1.pickRandom(possible);\r\n            genome.connect(pair[0], pair[1]);\r\n        }\r\n    };\r\n    return AddConnectionMutation;\r\n}(Mutation));\r\nexports.AddConnectionMutation = AddConnectionMutation;\r\nvar SubConnectionMutation = /** @class */ (function (_super) {\r\n    __extends(SubConnectionMutation, _super);\r\n    function SubConnectionMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SubConnectionMutation.prototype.mutate = function (genome) {\r\n        var possible = genome.connections.filter(function (conn) { return conn.from.outgoing.length > 1 && conn.to.incoming.length > 1 && genome.nodes.indexOf(conn.to) > genome.nodes.indexOf(conn.from); });\r\n        if (possible.length > 0) {\r\n            var randomConnection = Utils_1.pickRandom(possible);\r\n            genome.disconnect(randomConnection.from, randomConnection.to);\r\n        }\r\n    };\r\n    return SubConnectionMutation;\r\n}(Mutation));\r\nexports.SubConnectionMutation = SubConnectionMutation;\r\nvar ModWeightMutation = /** @class */ (function (_super) {\r\n    __extends(ModWeightMutation, _super);\r\n    function ModWeightMutation(min, max) {\r\n        if (min === void 0) { min = -1; }\r\n        if (max === void 0) { max = 1; }\r\n        var _this = _super.call(this) || this;\r\n        _this.min = min;\r\n        _this.max = max;\r\n        return _this;\r\n    }\r\n    ModWeightMutation.prototype.mutate = function (genome) {\r\n        Utils_1.pickRandom(genome.connections).weight += Utils_1.randDouble(this.min, this.max);\r\n    };\r\n    return ModWeightMutation;\r\n}(Mutation));\r\nexports.ModWeightMutation = ModWeightMutation;\r\nvar ModBiasMutation = /** @class */ (function (_super) {\r\n    __extends(ModBiasMutation, _super);\r\n    function ModBiasMutation(min, max) {\r\n        if (min === void 0) { min = -1; }\r\n        if (max === void 0) { max = 1; }\r\n        var _this = _super.call(this) || this;\r\n        _this.min = min;\r\n        _this.max = max;\r\n        return _this;\r\n    }\r\n    ModBiasMutation.prototype.mutate = function (genome) {\r\n        Utils_1.pickRandom(genome.nodes.filter(function (node) { return !node.isInputNode(); }))\r\n            .mutateBias(this);\r\n    };\r\n    return ModBiasMutation;\r\n}(Mutation));\r\nexports.ModBiasMutation = ModBiasMutation;\r\nvar ModActivationMutation = /** @class */ (function (_super) {\r\n    __extends(ModActivationMutation, _super);\r\n    function ModActivationMutation(mutateOutput) {\r\n        if (mutateOutput === void 0) { mutateOutput = false; }\r\n        var _this = _super.call(this) || this;\r\n        _this.mutateOutput = mutateOutput;\r\n        return _this;\r\n    }\r\n    ModActivationMutation.prototype.mutate = function (genome, max) {\r\n        var possible = this.mutateOutput\r\n            ? genome.nodes.filter(function (node) { return !node.isInputNode(); })\r\n            : genome.nodes.filter(function (node) { return node.isHiddenNode(); });\r\n        if (possible.length > 0) {\r\n            Utils_1.pickRandom(possible).mutateActivation();\r\n        }\r\n    };\r\n    return ModActivationMutation;\r\n}(Mutation));\r\nexports.ModActivationMutation = ModActivationMutation;\r\nvar AddSelfConnectionMutation = /** @class */ (function (_super) {\r\n    __extends(AddSelfConnectionMutation, _super);\r\n    function AddSelfConnectionMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AddSelfConnectionMutation.prototype.mutate = function (genome) {\r\n        var possible = genome.nodes\r\n            .filter(function (node) { return !node.isInputNode(); })\r\n            .filter(function (node) { return node.selfConnection.weight === 0; });\r\n        if (possible.length > 0) {\r\n            var node = Utils_1.pickRandom(possible);\r\n            genome.connect(node, node);\r\n        }\r\n    };\r\n    return AddSelfConnectionMutation;\r\n}(Mutation));\r\nexports.AddSelfConnectionMutation = AddSelfConnectionMutation;\r\nvar SubSelfConnectionMutation = /** @class */ (function (_super) {\r\n    __extends(SubSelfConnectionMutation, _super);\r\n    function SubSelfConnectionMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SubSelfConnectionMutation.prototype.mutate = function (genome) {\r\n        var possible = genome.connections.filter(function (conn) { return conn.from === conn.to; });\r\n        if (possible.length > 0) {\r\n            var randomConnection = Utils_1.pickRandom(possible);\r\n            genome.disconnect(randomConnection.from, randomConnection.to);\r\n        }\r\n    };\r\n    return SubSelfConnectionMutation;\r\n}(Mutation));\r\nexports.SubSelfConnectionMutation = SubSelfConnectionMutation;\r\nvar AddGateMutation = /** @class */ (function (_super) {\r\n    __extends(AddGateMutation, _super);\r\n    function AddGateMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AddGateMutation.prototype.mutate = function (genome, maxGates) {\r\n        if (maxGates !== undefined && maxGates <= genome.gates.length) {\r\n            return;\r\n        }\r\n        var possible = genome.connections.filter(function (conn) { return conn.gateNode === null; });\r\n        if (possible.length > 0) {\r\n            var node = Utils_1.pickRandom(genome.nodes.filter(function (node) { return !node.isInputNode(); }));\r\n            var connection = Utils_1.pickRandom(possible);\r\n            genome.addGate(node, connection);\r\n        }\r\n    };\r\n    return AddGateMutation;\r\n}(Mutation));\r\nexports.AddGateMutation = AddGateMutation;\r\nvar SubGateMutation = /** @class */ (function (_super) {\r\n    __extends(SubGateMutation, _super);\r\n    function SubGateMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SubGateMutation.prototype.mutate = function (genome) {\r\n        if (genome.gates.length > 0) {\r\n            genome.removeGate(Utils_1.pickRandom(genome.gates));\r\n        }\r\n    };\r\n    return SubGateMutation;\r\n}(Mutation));\r\nexports.SubGateMutation = SubGateMutation;\r\nvar AddBackConnectionMutation = /** @class */ (function (_super) {\r\n    __extends(AddBackConnectionMutation, _super);\r\n    function AddBackConnectionMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AddBackConnectionMutation.prototype.mutate = function (genome) {\r\n        var possible = [];\r\n        for (var i = genome.inputSize; i < genome.nodes.length; i++) {\r\n            var from = genome.nodes[i];\r\n            for (var j = genome.inputSize; j < i; j++) {\r\n                var to = genome.nodes[j];\r\n                if (!from.isProjectingTo(to)) {\r\n                    possible.push([from, to]);\r\n                }\r\n            }\r\n        }\r\n        if (possible.length > 0) {\r\n            var pair = Utils_1.pickRandom(possible);\r\n            genome.connect(pair[0], pair[1]);\r\n        }\r\n    };\r\n    return AddBackConnectionMutation;\r\n}(Mutation));\r\nexports.AddBackConnectionMutation = AddBackConnectionMutation;\r\nvar SubBackConnectionMutation = /** @class */ (function (_super) {\r\n    __extends(SubBackConnectionMutation, _super);\r\n    function SubBackConnectionMutation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SubBackConnectionMutation.prototype.mutate = function (genome) {\r\n        var possible = genome.connections\r\n            .filter(function (conn) { return conn.from.outgoing.length > 1; })\r\n            .filter(function (conn) { return conn.to.incoming.length > 1; })\r\n            .filter(function (conn) { return genome.nodes.indexOf(conn.from) > genome.nodes.indexOf(conn.to); });\r\n        if (possible.length > 0) {\r\n            var randomConnection = Utils_1.pickRandom(possible);\r\n            genome.disconnect(randomConnection.from, randomConnection.to);\r\n        }\r\n    };\r\n    return SubBackConnectionMutation;\r\n}(Mutation));\r\nexports.SubBackConnectionMutation = SubBackConnectionMutation;\r\nvar SwapNodesMutation = /** @class */ (function (_super) {\r\n    __extends(SwapNodesMutation, _super);\r\n    function SwapNodesMutation(mutateOutput) {\r\n        if (mutateOutput === void 0) { mutateOutput = false; }\r\n        var _this = _super.call(this) || this;\r\n        _this.mutateOutput = mutateOutput;\r\n        return _this;\r\n    }\r\n    SwapNodesMutation.prototype.mutate = function (genome) {\r\n        var possible = this.mutateOutput\r\n            ? genome.nodes.filter(function (node) { return node !== undefined && !node.isInputNode(); })\r\n            : genome.nodes.filter(function (node) { return node !== undefined && node.isHiddenNode(); });\r\n        if (possible.length >= 2) {\r\n            var node1_1 = Utils_1.pickRandom(possible);\r\n            var node2 = Utils_1.pickRandom(possible.filter(function (node) { return node !== node1_1; }));\r\n            var biasTemp = node1_1.bias;\r\n            var squashTemp = node1_1.squash;\r\n            node1_1.bias = node2.bias;\r\n            node1_1.squash = node2.squash;\r\n            node2.bias = biasTemp;\r\n            node2.squash = squashTemp;\r\n        }\r\n    };\r\n    return SwapNodesMutation;\r\n}(Mutation));\r\nexports.SwapNodesMutation = SwapNodesMutation;\r\nexports.ALL_MUTATIONS = [\r\n    new AddNodeMutation(),\r\n    new SubNodeMutation(),\r\n    new AddConnectionMutation(),\r\n    new SubConnectionMutation(),\r\n    new ModWeightMutation(),\r\n    new ModBiasMutation(),\r\n    new ModActivationMutation(),\r\n    new AddGateMutation(),\r\n    new SubGateMutation(),\r\n    new AddSelfConnectionMutation(),\r\n    new SubSelfConnectionMutation(),\r\n    new AddBackConnectionMutation(),\r\n    new SubBackConnectionMutation(),\r\n    new SwapNodesMutation(),\r\n];\r\nexports.FEEDFORWARD_MUTATIONS = [\r\n    new AddNodeMutation(),\r\n    new SubNodeMutation(),\r\n    new AddConnectionMutation(),\r\n    new SubConnectionMutation(),\r\n    new ModWeightMutation(),\r\n    new ModBiasMutation(),\r\n    new ModActivationMutation(),\r\n    new SwapNodesMutation(),\r\n];\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Loss = /** @class */ (function () {\r\n    function Loss() {\r\n    }\r\n    return Loss;\r\n}());\r\nexports.Loss = Loss;\r\nvar CrossEntropyLoss = /** @class */ (function (_super) {\r\n    __extends(CrossEntropyLoss, _super);\r\n    function CrossEntropyLoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CrossEntropyLoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach((function (value, index) {\r\n            error -= targets[index] * Math.log(Math.max(value, 1e-15)) + (1 - targets[index]) * Math.log(1 - Math.max(value, 1e-15));\r\n        }));\r\n        return error / outputs.length;\r\n    };\r\n    return CrossEntropyLoss;\r\n}(Loss));\r\nexports.CrossEntropyLoss = CrossEntropyLoss;\r\nvar MSELoss = /** @class */ (function (_super) {\r\n    __extends(MSELoss, _super);\r\n    function MSELoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MSELoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach((function (value, index) {\r\n            error += Math.pow(targets[index] - value, 2);\r\n        }));\r\n        return error / outputs.length;\r\n    };\r\n    return MSELoss;\r\n}(Loss));\r\nexports.MSELoss = MSELoss;\r\nvar BinaryLoss = /** @class */ (function (_super) {\r\n    __extends(BinaryLoss, _super);\r\n    function BinaryLoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BinaryLoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach((function (value, index) {\r\n            error += Math.round(targets[index] * 2) !== Math.round(value * 2) ? 1 : 0;\r\n        }));\r\n        return error / outputs.length;\r\n    };\r\n    return BinaryLoss;\r\n}(Loss));\r\nexports.BinaryLoss = BinaryLoss;\r\nvar MAELoss = /** @class */ (function (_super) {\r\n    __extends(MAELoss, _super);\r\n    function MAELoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MAELoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach((function (value, index) {\r\n            error += Math.abs(targets[index] - value);\r\n        }));\r\n        return error / outputs.length;\r\n    };\r\n    return MAELoss;\r\n}(Loss));\r\nexports.MAELoss = MAELoss;\r\nvar MAPELoss = /** @class */ (function (_super) {\r\n    __extends(MAPELoss, _super);\r\n    function MAPELoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MAPELoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach((function (value, index) {\r\n            error += Math.abs((value - targets[index]) / Math.max(targets[index], 1e-15));\r\n        }));\r\n        return error / outputs.length;\r\n    };\r\n    return MAPELoss;\r\n}(Loss));\r\nexports.MAPELoss = MAPELoss;\r\nvar WAPELoss = /** @class */ (function (_super) {\r\n    __extends(WAPELoss, _super);\r\n    function WAPELoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WAPELoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        var sum = 0;\r\n        for (var i = 0; i < outputs.length; i++) {\r\n            error += Math.abs(targets[i] - outputs[i]);\r\n            sum += targets[i];\r\n        }\r\n        return error / sum;\r\n    };\r\n    return WAPELoss;\r\n}(Loss));\r\nexports.WAPELoss = WAPELoss;\r\nvar MSLELoss = /** @class */ (function (_super) {\r\n    __extends(MSLELoss, _super);\r\n    function MSLELoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MSLELoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach((function (value, index) {\r\n            error += Math.log(Math.max(targets[index], 1e-15)) - Math.log(Math.max(value, 1e-15));\r\n        }));\r\n        return error / outputs.length;\r\n    };\r\n    return MSLELoss;\r\n}(Loss));\r\nexports.MSLELoss = MSLELoss;\r\nvar HINGELoss = /** @class */ (function (_super) {\r\n    __extends(HINGELoss, _super);\r\n    function HINGELoss() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    HINGELoss.prototype.calc = function (targets, outputs) {\r\n        var error = 0;\r\n        outputs.forEach(function (value, index) {\r\n            error += Math.max(0, 1 - value * targets[index]);\r\n        });\r\n        return error / outputs.length;\r\n    };\r\n    return HINGELoss;\r\n}(Loss));\r\nexports.HINGELoss = HINGELoss;\r\nexports.ALL_LOSSES = [\r\n    new CrossEntropyLoss(),\r\n    new MSELoss(),\r\n    new BinaryLoss(),\r\n    new MAELoss(),\r\n    new MAPELoss(),\r\n    new WAPELoss(),\r\n    new MSLELoss(),\r\n    new HINGELoss()\r\n];\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Rate = /** @class */ (function () {\r\n    function Rate(baseRate) {\r\n        this.baseRate = baseRate;\r\n    }\r\n    return Rate;\r\n}());\r\nexports.Rate = Rate;\r\nvar FixedRate = /** @class */ (function (_super) {\r\n    __extends(FixedRate, _super);\r\n    function FixedRate() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FixedRate.prototype.calc = function (iteration) {\r\n        return this.baseRate;\r\n    };\r\n    return FixedRate;\r\n}(Rate));\r\nexports.FixedRate = FixedRate;\r\nvar StepRate = /** @class */ (function (_super) {\r\n    __extends(StepRate, _super);\r\n    function StepRate(baseRate, gamma, stepSize) {\r\n        if (gamma === void 0) { gamma = 0.9; }\r\n        if (stepSize === void 0) { stepSize = 100; }\r\n        var _this = _super.call(this, baseRate) || this;\r\n        _this.gamma = gamma;\r\n        _this.stepSize = stepSize;\r\n        return _this;\r\n    }\r\n    StepRate.prototype.calc = function (iteration) {\r\n        return this.baseRate * Math.pow(this.gamma, Math.floor(iteration / this.stepSize));\r\n    };\r\n    return StepRate;\r\n}(Rate));\r\nexports.StepRate = StepRate;\r\nvar ExponentialRate = /** @class */ (function (_super) {\r\n    __extends(ExponentialRate, _super);\r\n    function ExponentialRate(baseRate, gamma) {\r\n        if (gamma === void 0) { gamma = 0.999; }\r\n        var _this = _super.call(this, baseRate) || this;\r\n        _this.gamma = gamma;\r\n        return _this;\r\n    }\r\n    ExponentialRate.prototype.calc = function (iteration) {\r\n        return this.baseRate * Math.pow(this.gamma, iteration);\r\n    };\r\n    return ExponentialRate;\r\n}(Rate));\r\nexports.ExponentialRate = ExponentialRate;\r\nvar InverseRate = /** @class */ (function (_super) {\r\n    __extends(InverseRate, _super);\r\n    function InverseRate(baseRate, gamma, power) {\r\n        if (gamma === void 0) { gamma = 0.001; }\r\n        if (power === void 0) { power = 2; }\r\n        var _this = _super.call(this, baseRate) || this;\r\n        _this.gamma = gamma;\r\n        _this.power = power;\r\n        return _this;\r\n    }\r\n    InverseRate.prototype.calc = function (iteration) {\r\n        return this.baseRate * Math.pow(1 + this.gamma * iteration, -this.power);\r\n    };\r\n    return InverseRate;\r\n}(Rate));\r\nexports.InverseRate = InverseRate;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils_1 = require(\"./Utils\");\r\nvar Selection = /** @class */ (function () {\r\n    function Selection() {\r\n    }\r\n    return Selection;\r\n}());\r\nexports.Selection = Selection;\r\nvar FitnessProportionateSelection = /** @class */ (function (_super) {\r\n    __extends(FitnessProportionateSelection, _super);\r\n    function FitnessProportionateSelection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FitnessProportionateSelection.prototype.select = function (population) {\r\n        var _a;\r\n        var totalFitness = 0;\r\n        var minimalFitness = 0;\r\n        for (var _i = 0, population_1 = population; _i < population_1.length; _i++) {\r\n            var genome = population_1[_i];\r\n            var score = genome.score;\r\n            minimalFitness = score !== undefined && score < minimalFitness ? score : minimalFitness;\r\n            totalFitness += score !== null && score !== void 0 ? score : 0;\r\n        }\r\n        minimalFitness = Math.abs(minimalFitness);\r\n        totalFitness += minimalFitness * population.length;\r\n        var random = Utils_1.randDouble(0, totalFitness);\r\n        var value = 0;\r\n        for (var _b = 0, population_2 = population; _b < population_2.length; _b++) {\r\n            var genome = population_2[_b];\r\n            value += ((_a = genome.score) !== null && _a !== void 0 ? _a : 0) + minimalFitness;\r\n            if (random < value) {\r\n                return genome;\r\n            }\r\n        }\r\n        return Utils_1.pickRandom(population);\r\n    };\r\n    return FitnessProportionateSelection;\r\n}(Selection));\r\nexports.FitnessProportionateSelection = FitnessProportionateSelection;\r\nvar PowerSelection = /** @class */ (function (_super) {\r\n    __extends(PowerSelection, _super);\r\n    function PowerSelection(power) {\r\n        if (power === void 0) { power = 4; }\r\n        var _this = _super.call(this) || this;\r\n        _this.power = power;\r\n        return _this;\r\n    }\r\n    PowerSelection.prototype.select = function (population) {\r\n        return population[Math.floor(Math.pow(Math.random(), this.power) * population.length)];\r\n    };\r\n    return PowerSelection;\r\n}(Selection));\r\nexports.PowerSelection = PowerSelection;\r\nvar TournamentSelection = /** @class */ (function (_super) {\r\n    __extends(TournamentSelection, _super);\r\n    function TournamentSelection(size, probability) {\r\n        if (size === void 0) { size = 5; }\r\n        if (probability === void 0) { probability = 0.5; }\r\n        var _this = _super.call(this) || this;\r\n        _this.size = size;\r\n        _this.probability = probability;\r\n        return _this;\r\n    }\r\n    TournamentSelection.prototype.select = function (population) {\r\n        if (this.size > population.length) {\r\n            throw new Error(\"Your tournament size should be lower than the population size, please change methods.selection.TOURNAMENT.size\");\r\n        }\r\n        // Create a tournament\r\n        var individuals = [];\r\n        for (var i = 0; i < this.size; i++) {\r\n            individuals.push(Utils_1.pickRandom(population));\r\n        }\r\n        // Sort the tournament individuals by score\r\n        individuals.sort(function (a, b) {\r\n            return b.score === undefined || a.score === undefined ? 0 : b.score - a.score;\r\n        });\r\n        // Select an individual\r\n        for (var i = 0; i < this.size; i++) {\r\n            if (Math.random() < this.probability || i === this.size - 1) {\r\n                return individuals[i];\r\n            }\r\n        }\r\n        return Utils_1.pickRandom(population);\r\n    };\r\n    return TournamentSelection;\r\n}(Selection));\r\nexports.TournamentSelection = TournamentSelection;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Network_1 = require(\"./architecture/Network\");\r\nvar Utils_1 = require(\"./methods/Utils\");\r\nvar Selection_1 = require(\"./methods/Selection\");\r\nvar Mutation_1 = require(\"./methods/Mutation\");\r\nvar NEAT = /** @class */ (function () {\r\n    function NEAT(dataset, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.dataset = dataset;\r\n        this.generation = Utils_1.getOrDefault(options.generation, 0);\r\n        this.input = Utils_1.getOrDefault(options.input, 1);\r\n        this.output = Utils_1.getOrDefault(options.output, 1);\r\n        this.equal = Utils_1.getOrDefault(options.equal, true);\r\n        this.clear = Utils_1.getOrDefault(options.clear, false);\r\n        this.populationSize = Utils_1.getOrDefault(options.populationSize, 50);\r\n        this.elitism = Utils_1.getOrDefault(options.elitism, 1);\r\n        this.provenance = Utils_1.getOrDefault(options.provenance, 0);\r\n        this.mutationRate = Utils_1.getOrDefault(options.mutationRate, 0.4);\r\n        this.mutationAmount = Utils_1.getOrDefault(options.mutationAmount, 1);\r\n        this.fitnessPopulation = Utils_1.getOrDefault(options.fitnessPopulation, false);\r\n        this.fitnessFunction = options.fitnessFunction;\r\n        this.selection = Utils_1.getOrDefault(options.selection, new Selection_1.PowerSelection());\r\n        this.mutations = Utils_1.getOrDefault(options.mutations, Mutation_1.FEEDFORWARD_MUTATIONS);\r\n        this.template = Utils_1.getOrDefault(options.template, new Network_1.Network(this.input, this.output));\r\n        this.maxNodes = Utils_1.getOrDefault(options.maxNodes, Infinity);\r\n        this.maxConnections = Utils_1.getOrDefault(options.maxConnections, Infinity);\r\n        this.maxGates = Utils_1.getOrDefault(options.maxGates, Infinity);\r\n        this.population = [];\r\n        this.createInitialPopulation();\r\n    }\r\n    NEAT.prototype.filterGenome = function (population, template, pickGenome, adjustGenome) {\r\n        var filtered = __spreadArrays(population); // avoid mutations\r\n        if (adjustGenome) {\r\n            filtered\r\n                .filter(function (genome) { return pickGenome(genome); })\r\n                .forEach(function (genome, index) { return filtered[index] = adjustGenome(filtered[index]); });\r\n        }\r\n        else {\r\n            filtered\r\n                .filter(function (genome) { return pickGenome(genome); })\r\n                .forEach(function (genome, index) { return filtered[index] = template.copy(); });\r\n        }\r\n        return filtered;\r\n    };\r\n    NEAT.prototype.mutateRandom = function (genome, possible) {\r\n        if (possible === void 0) { possible = this.mutations; }\r\n        var maxNodes = this.maxNodes;\r\n        var maxConnections = this.maxConnections;\r\n        var maxGates = this.maxGates;\r\n        possible = possible.filter(function (method) {\r\n            return (method.constructor.name !== Mutation_1.AddNodeMutation.constructor.name || genome.nodes.length < maxNodes ||\r\n                method.constructor.name !== Mutation_1.AddConnectionMutation.constructor.name || genome.connections.length < maxConnections ||\r\n                method.constructor.name !== Mutation_1.AddGateMutation.constructor.name || genome.gates.length < maxGates);\r\n        });\r\n        genome.mutate(Utils_1.pickRandom(possible));\r\n    };\r\n    NEAT.prototype.evolve = function (pickGenome, adjustGenome) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var elitists, i, newPopulation, i, fittest;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        // Check if evolve is possible\r\n                        if (this.elitism + this.provenance > this.populationSize) {\r\n                            throw new Error(\"Can`t evolve! Elitism + provenance exceeds population size!\");\r\n                        }\r\n                        if (!(this.population[this.population.length - 1].score === undefined)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.evaluate(this.dataset)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        if (pickGenome) {\r\n                            this.population = this.filterGenome(this.population, this.template, pickGenome, adjustGenome);\r\n                        }\r\n                        // Sort in order of fitness (fittest first)\r\n                        this.sort();\r\n                        elitists = [];\r\n                        for (i = 0; i < this.elitism; i++) {\r\n                            elitists.push(this.population[i]);\r\n                        }\r\n                        newPopulation = Array(this.provenance).fill(this.template.copy());\r\n                        // Breed the next individuals\r\n                        for (i = 0; i < this.populationSize - this.elitism - this.provenance; i++) {\r\n                            newPopulation.push(this.getOffspring());\r\n                        }\r\n                        // Replace the old population with the new population\r\n                        this.population = newPopulation;\r\n                        // Mutate the new population\r\n                        this.mutate(undefined);\r\n                        // Add the elitists\r\n                        (_a = this.population).push.apply(_a, elitists);\r\n                        // evaluate the population\r\n                        return [4 /*yield*/, this.evaluate(this.dataset)];\r\n                    case 3:\r\n                        // evaluate the population\r\n                        _b.sent();\r\n                        // Check & adjust genomes as needed\r\n                        if (pickGenome) {\r\n                            this.population = this.filterGenome(this.population, this.template, pickGenome, adjustGenome);\r\n                        }\r\n                        // Sort in order of fitness (fittest first)\r\n                        this.sort();\r\n                        fittest = this.population[0].copy();\r\n                        fittest.score = this.population[0].score;\r\n                        // Reset the scores\r\n                        this.population.forEach(function (genome) { return genome.score = undefined; });\r\n                        this.generation++;\r\n                        return [2 /*return*/, fittest];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    NEAT.prototype.getOffspring = function () {\r\n        this.sort();\r\n        var parent1 = this.selection.select(this.population);\r\n        var parent2 = this.selection.select(this.population);\r\n        if (parent1 === null || parent2 === null) {\r\n            throw new ReferenceError(\"Should not be null!\");\r\n        }\r\n        return Network_1.Network.crossOver(parent1, parent2, this.equal);\r\n    };\r\n    NEAT.prototype.mutate = function (method) {\r\n        var _this = this;\r\n        if (method) {\r\n            // Elitist genomes should not be included\r\n            this.population\r\n                .filter(function () { return Math.random() <= _this.mutationRate; })\r\n                .forEach(function (genome) {\r\n                for (var i = 0; i < _this.mutationAmount; i++) {\r\n                    genome.mutate(method);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // Elitist genomes should not be included\r\n            this.population\r\n                .filter(function () { return Math.random() <= _this.mutationRate; })\r\n                .forEach(function (genome) {\r\n                for (var i = 0; i < _this.mutationAmount; i++) {\r\n                    _this.mutateRandom(genome, _this.mutations);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    NEAT.prototype.evaluate = function (dataset) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _i, _a, genome;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!this.fitnessPopulation) return [3 /*break*/, 3];\r\n                        if (this.clear) {\r\n                            this.population.forEach(function (genome) { return genome.clear(); });\r\n                        }\r\n                        if (!this.fitnessFunction) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.fitnessFunction(dataset, this.population)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2: return [3 /*break*/, 7];\r\n                    case 3:\r\n                        _i = 0, _a = this.population;\r\n                        _b.label = 4;\r\n                    case 4:\r\n                        if (!(_i < _a.length)) return [3 /*break*/, 7];\r\n                        genome = _a[_i];\r\n                        if (this.clear) {\r\n                            genome.clear();\r\n                        }\r\n                        if (!this.fitnessFunction) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.fitnessFunction(dataset, genome)];\r\n                    case 5:\r\n                        _b.sent();\r\n                        _b.label = 6;\r\n                    case 6:\r\n                        _i++;\r\n                        return [3 /*break*/, 4];\r\n                    case 7:\r\n                        // Sort the population in order of fitness\r\n                        this.sort();\r\n                        return [2 /*return*/, this.population[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    NEAT.prototype.sort = function () {\r\n        this.population.sort(function (a, b) {\r\n            return a.score === undefined || b.score === undefined ? 0 : b.score - a.score;\r\n        });\r\n    };\r\n    NEAT.prototype.getFittest = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(this.population[this.population.length - 1].score === undefined)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.evaluate(this.dataset)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        this.sort();\r\n                        return [2 /*return*/, this.population[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    NEAT.prototype.getAverage = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var score;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(this.population[this.population.length - 1].score === undefined)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.evaluate(this.dataset)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        score = 0;\r\n                        this.population\r\n                            .map(function (genome) { return genome.score; })\r\n                            .forEach(function (val) { return score += val !== null && val !== void 0 ? val : 0; });\r\n                        return [2 /*return*/, score / this.population.length];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    NEAT.prototype.createInitialPopulation = function () {\r\n        for (var i = 0; i < this.populationSize; i++) {\r\n            this.population.push(this.template.copy());\r\n        }\r\n    };\r\n    return NEAT;\r\n}());\r\nexports.NEAT = NEAT;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Connection_1 = require(\"./Connection\");\r\nvar Node_1 = require(\"./Node\");\r\nvar Utils_1 = require(\"../methods/Utils\");\r\nvar Mutation_1 = require(\"../methods/Mutation\");\r\nvar Loss_1 = require(\"../methods/Loss\");\r\nvar Rate_1 = require(\"../methods/Rate\");\r\nvar NEAT_1 = require(\"../NEAT\");\r\nvar Network = /** @class */ (function () {\r\n    function Network(inputSize, outputSize) {\r\n        this.inputSize = inputSize;\r\n        this.outputSize = outputSize;\r\n        this.nodes = [];\r\n        this.connections = [];\r\n        this.gates = [];\r\n        this.score = undefined;\r\n        for (var i = 0; i < inputSize; i++) {\r\n            this.nodes.push(new Node_1.Node(Node_1.NodeType.INPUT));\r\n        }\r\n        for (var i = 0; i < outputSize; i++) {\r\n            this.nodes.push(new Node_1.Node(Node_1.NodeType.OUTPUT));\r\n        }\r\n        for (var i = 0; i < this.inputSize; i++) {\r\n            for (var j = this.inputSize; j < this.outputSize + this.inputSize; j++) {\r\n                var weight = (Math.random() - 0.5) * this.inputSize * Math.sqrt(2 / this.inputSize);\r\n                this.connect(this.nodes[i], this.nodes[j], weight);\r\n            }\r\n        }\r\n    }\r\n    Network.fromJSON = function (json) {\r\n        var network = new Network(json.inputSize, json.outputSize);\r\n        network.nodes = [];\r\n        network.connections = [];\r\n        json.nodes.map(function (nodeJSON) { return Node_1.Node.fromJSON(nodeJSON); }).forEach(function (node) { return network.nodes[node.index] = node; });\r\n        json.connections.forEach(function (jsonConnection) {\r\n            var connection = network.connect(network.nodes[jsonConnection.fromIndex], network.nodes[jsonConnection.toIndex], jsonConnection.weight);\r\n            if (jsonConnection.gateNodeIndex != null) {\r\n                network.addGate(network.nodes[jsonConnection.gateNodeIndex], connection);\r\n            }\r\n        });\r\n        return network;\r\n    };\r\n    Network.crossOver = function (network1, network2, equal) {\r\n        if (network1.inputSize !== network2.inputSize || network1.outputSize !== network2.outputSize) {\r\n            throw new Error(\"Networks don`t have the same input/output size!\");\r\n        }\r\n        // Initialise offspring\r\n        var offspring = new Network(network1.inputSize, network1.outputSize);\r\n        offspring.connections = [];\r\n        offspring.nodes = [];\r\n        // Save scores and create a copy\r\n        var score1 = network1.score || 0;\r\n        var score2 = network2.score || 0;\r\n        // Determine offspring node size\r\n        var offspringSize;\r\n        if (equal || score1 === score2) {\r\n            var max = Math.max(network1.nodes.length, network2.nodes.length);\r\n            var min = Math.min(network1.nodes.length, network2.nodes.length);\r\n            offspringSize = Utils_1.randInt(min, max + 1);\r\n        }\r\n        else if (score1 > score2) {\r\n            offspringSize = network1.nodes.length;\r\n        }\r\n        else {\r\n            offspringSize = network2.nodes.length;\r\n        }\r\n        var inputSize = network1.inputSize;\r\n        var outputSize = network1.outputSize;\r\n        for (var i = 0; i < network1.nodes.length; i++) {\r\n            network1.nodes[i].index = i;\r\n        }\r\n        for (var i = 0; i < network2.nodes.length; i++) {\r\n            network2.nodes[i].index = i;\r\n        }\r\n        // Assign nodes from parents to offspring\r\n        for (var i = 0; i < offspringSize; i++) {\r\n            var chosenNode = void 0;\r\n            var chosenNodeType = null;\r\n            if (i < inputSize) {\r\n                chosenNodeType = Node_1.NodeType.INPUT;\r\n                var sourceNetwork = Utils_1.randBoolean() ? network1 : network2;\r\n                var inputNumber = -1;\r\n                var j = -1;\r\n                while (inputNumber < i) {\r\n                    j++;\r\n                    if (j >= sourceNetwork.nodes.length) {\r\n                        // something is wrong...\r\n                        throw RangeError('something is wrong with the size of the input');\r\n                    }\r\n                    if (sourceNetwork.nodes[j].isInputNode()) {\r\n                        inputNumber++;\r\n                    }\r\n                }\r\n                chosenNode = sourceNetwork.nodes[j];\r\n            }\r\n            else if (i < inputSize + outputSize) { // now select output nodes\r\n                chosenNodeType = Node_1.NodeType.OUTPUT;\r\n                var sourceNetwork = Utils_1.randBoolean() ? network1 : network2;\r\n                var outputNumber = -1;\r\n                var j = -1;\r\n                while (outputNumber < i - inputSize) {\r\n                    j++;\r\n                    if (j >= sourceNetwork.nodes.length) {\r\n                        throw RangeError('something is wrong with the size of the output');\r\n                    }\r\n                    if (sourceNetwork.nodes[j].isOutputNode()) {\r\n                        outputNumber++;\r\n                    }\r\n                }\r\n                chosenNode = sourceNetwork.nodes[j];\r\n            }\r\n            else {\r\n                chosenNodeType = Node_1.NodeType.HIDDEN;\r\n                var sourceNetwork = void 0;\r\n                if (i >= network1.nodes.length) {\r\n                    sourceNetwork = network2;\r\n                }\r\n                else if (i >= network2.nodes.length) {\r\n                    sourceNetwork = network1;\r\n                }\r\n                else {\r\n                    sourceNetwork = Utils_1.randBoolean() ? network1 : network2;\r\n                }\r\n                chosenNode = Utils_1.pickRandom(sourceNetwork.nodes);\r\n            }\r\n            var newNode = new Node_1.Node(chosenNodeType);\r\n            newNode.bias = chosenNode.bias;\r\n            newNode.squash = chosenNode.squash;\r\n            offspring.nodes.push(newNode);\r\n        }\r\n        // Create arrays of connection genes\r\n        var n1connections = [];\r\n        var n2connections = [];\r\n        // Add the connections of network 1\r\n        network1.connections.forEach(function (connection) {\r\n            n1connections[Connection_1.Connection.innovationID(connection.from.index, connection.to.index)] = connection.toJSON();\r\n        });\r\n        // Add the connections of network 2\r\n        network2.connections.forEach(function (connection) {\r\n            n2connections[Connection_1.Connection.innovationID(connection.from.index, connection.to.index)] = connection.toJSON();\r\n        });\r\n        // Split common conn genes from disjoint or excess conn genes\r\n        var connections = [];\r\n        var keys1 = Object.keys(n1connections);\r\n        var keys2 = Object.keys(n2connections);\r\n        for (var i = keys1.length - 1; i >= 0; i--) {\r\n            if (n2connections[parseInt(keys1[i])] !== undefined) {\r\n                connections.push(Utils_1.randBoolean() ? n1connections[parseInt(keys1[i])] : n2connections[parseInt(keys1[i])]);\r\n                n2connections[parseInt(keys1[i])] = undefined;\r\n            }\r\n            else if (score1 >= score2 || equal) {\r\n                connections.push(n1connections[parseInt(keys1[i])]);\r\n            }\r\n        }\r\n        // Excess/disjoint gene\r\n        if (score2 >= score1 || equal) {\r\n            keys2\r\n                .map(function (key) { return parseInt(key); })\r\n                .map(function (key) { return n2connections[key]; })\r\n                .filter(function (conn) { return conn !== undefined; })\r\n                .forEach(function (conn) { return connections.push(conn); });\r\n        }\r\n        // Add common conn genes uniformly\r\n        connections.forEach(function (connectionJSON) {\r\n            if (connectionJSON !== undefined && connectionJSON.toIndex < offspringSize && connectionJSON.fromIndex < offspringSize) {\r\n                var from = offspring.nodes[connectionJSON.fromIndex];\r\n                var to = offspring.nodes[connectionJSON.toIndex];\r\n                var connection = offspring.connect(from, to, connectionJSON.weight);\r\n                if (connectionJSON.gateNodeIndex !== null && connectionJSON.gateNodeIndex < offspringSize) {\r\n                    offspring.addGate(offspring.nodes[connectionJSON.gateNodeIndex], connection);\r\n                }\r\n            }\r\n        });\r\n        return offspring;\r\n    };\r\n    Network.prototype.copy = function () {\r\n        return Network.fromJSON(this.toJSON());\r\n    };\r\n    Network.prototype.connect = function (from, to, weight) {\r\n        if (weight === void 0) { weight = 0; }\r\n        var connection = from.connect(to, weight);\r\n        this.connections.push(connection);\r\n        return connection;\r\n    };\r\n    Network.prototype.activate = function (input, dropoutRate, trace) {\r\n        if (dropoutRate === void 0) { dropoutRate = 0; }\r\n        if (trace === void 0) { trace = true; }\r\n        var inputNodeIndex = 0;\r\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\r\n            var node = _a[_i];\r\n            if (inputNodeIndex === this.inputSize) {\r\n                break;\r\n            }\r\n            if (!node.isInputNode()) {\r\n                continue;\r\n            }\r\n            node.activate(input[inputNodeIndex++], trace);\r\n        }\r\n        if (inputNodeIndex !== input.length) {\r\n            throw Error(\"There are \" + inputNodeIndex + \" input nodes, but \" + input.length + \" inputs were passed\");\r\n        }\r\n        this.nodes\r\n            .filter(function (node) { return node.isHiddenNode(); })\r\n            .forEach(function (node) {\r\n            if (dropoutRate) {\r\n                node.mask = Math.random() >= dropoutRate ? 1 : 0;\r\n            }\r\n            node.activate(undefined, trace);\r\n        });\r\n        var output = [];\r\n        for (var _b = 0, _c = this.nodes; _b < _c.length; _b++) {\r\n            var node = _c[_b];\r\n            if (output.length === this.outputSize) {\r\n                break;\r\n            }\r\n            if (!node.isOutputNode()) {\r\n                continue;\r\n            }\r\n            output.push(node.activate(undefined, trace));\r\n        }\r\n        if (output.length !== this.outputSize) {\r\n            throw Error(\"There are \" + this.outputSize + \" output nodes, but \" + output.length + \" outputs were passed\");\r\n        }\r\n        return output;\r\n    };\r\n    Network.prototype.propagate = function (rate, momentum, update, target) {\r\n        if (target.length !== this.outputSize) {\r\n            throw new Error(\"Output target length should match network output length\");\r\n        }\r\n        var targetIndex = 0;\r\n        for (var i = 0; targetIndex < this.outputSize; i++) {\r\n            if (this.nodes[i].isOutputNode()) {\r\n                this.nodes[i].propagate(target[targetIndex++], momentum, rate, update);\r\n            }\r\n        }\r\n        for (var i = this.nodes.length - 1; i >= 0; i--) {\r\n            if (this.nodes[i].isHiddenNode()) {\r\n                this.nodes[i].propagate(undefined, rate, momentum, update);\r\n            }\r\n        }\r\n        this.nodes\r\n            .filter(function (node) { return node.isInputNode(); })\r\n            .forEach(function (node) {\r\n            node.propagate(undefined, rate, momentum, update);\r\n        });\r\n    };\r\n    Network.prototype.clear = function () {\r\n        this.nodes.forEach(function (node) { return node.clear(); });\r\n    };\r\n    Network.prototype.disconnect = function (from, to) {\r\n        var _this = this;\r\n        this.connections\r\n            .filter(function (conn) { return conn.from === from; })\r\n            .filter(function (conn) { return conn.to === to; })\r\n            .forEach(function (conn) {\r\n            if (conn.gateNode !== null) {\r\n                _this.removeGate(conn);\r\n            }\r\n            Utils_1.remove(_this.connections, conn);\r\n        });\r\n        return from.disconnect(to);\r\n    };\r\n    Network.prototype.addGate = function (node, connection) {\r\n        if (this.nodes.indexOf(node) === -1) {\r\n            throw new ReferenceError(\"This node is not part of the network!\");\r\n        }\r\n        else if (connection.gateNode != null) {\r\n            return;\r\n        }\r\n        node.addGate(connection);\r\n        this.gates.push(connection);\r\n    };\r\n    Network.prototype.removeGate = function (connection) {\r\n        if (!Utils_1.anyMatch(this.gates, connection)) {\r\n            throw new Error(\"This connection is not gated!\");\r\n        }\r\n        Utils_1.remove(this.gates, connection);\r\n        if (connection.gateNode != null) {\r\n            connection.gateNode.removeGate(connection);\r\n        }\r\n    };\r\n    Network.prototype.removeNode = function (node, keepGates) {\r\n        var _this = this;\r\n        if (keepGates === void 0) { keepGates = new Mutation_1.SubNodeMutation().keepGates; }\r\n        if (!Utils_1.anyMatch(this.nodes, node)) {\r\n            throw new ReferenceError(\"This node does not exist in the network!\");\r\n        }\r\n        this.disconnect(node, node);\r\n        var inputs = [];\r\n        var gates = [];\r\n        var outputs = [];\r\n        for (var i = node.incoming.length - 1; i >= 0; i--) {\r\n            var connection = node.incoming[i];\r\n            if (keepGates && connection.gateNode !== null && connection.gateNode !== node) {\r\n                gates.push(connection.gateNode);\r\n            }\r\n            inputs.push(connection.from);\r\n            this.disconnect(connection.from, node);\r\n        }\r\n        for (var i = node.outgoing.length - 1; i >= 0; i--) {\r\n            var connection = node.outgoing[i];\r\n            if (keepGates && connection.gateNode !== null && connection.gateNode !== node) {\r\n                gates.push(connection.gateNode);\r\n            }\r\n            outputs.push(connection.to);\r\n            this.disconnect(node, connection.to);\r\n        }\r\n        var connections = [];\r\n        inputs.forEach(function (input) {\r\n            outputs.forEach(function (output) {\r\n                if (!input.isProjectingTo(output)) {\r\n                    connections.push(_this.connect(input, output));\r\n                }\r\n            });\r\n        });\r\n        while (gates.length > 0 && connections.length > 0) {\r\n            var gate = gates.shift();\r\n            if (gate === undefined) {\r\n                continue;\r\n            }\r\n            var connection = Utils_1.pickRandom(connections);\r\n            this.addGate(gate, connection);\r\n            Utils_1.remove(connections, connection);\r\n        }\r\n        for (var i = node.gated.length - 1; i >= 0; i--) {\r\n            this.removeGate(node.gated[i]);\r\n        }\r\n        Utils_1.remove(this.nodes, node);\r\n    };\r\n    Network.prototype.mutate = function (method, maxNodes, maxConnections, maxGates) {\r\n        if (maxNodes === void 0) { maxNodes = Infinity; }\r\n        if (maxConnections === void 0) { maxConnections = Infinity; }\r\n        if (maxGates === void 0) { maxGates = Infinity; }\r\n        var _a;\r\n        method.mutate(this, (_a = maxNodes !== null && maxNodes !== void 0 ? maxNodes : maxConnections) !== null && _a !== void 0 ? _a : maxGates);\r\n    };\r\n    Network.prototype.mutateRandom = function (allowedMethods, maxNodes, maxConnections, maxGates) {\r\n        if (allowedMethods === void 0) { allowedMethods = Mutation_1.ALL_MUTATIONS; }\r\n        if (maxNodes === void 0) { maxNodes = Infinity; }\r\n        if (maxConnections === void 0) { maxConnections = Infinity; }\r\n        if (maxGates === void 0) { maxGates = Infinity; }\r\n        if (allowedMethods.length === 0) {\r\n            return;\r\n        }\r\n        this.mutate(Utils_1.pickRandom(allowedMethods), maxNodes || Infinity, maxConnections || Infinity, maxGates || Infinity);\r\n    };\r\n    Network.prototype.train = function (dataset, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _a;\r\n        if (dataset[0].input.length !== this.inputSize || dataset[0].output.length !== this.outputSize) {\r\n            throw new Error(\"Dataset input/output size should be same as network input/output size!\");\r\n        }\r\n        options.iterations = Utils_1.getOrDefault(options.iterations, 100);\r\n        options.error = Utils_1.getOrDefault(options.error, 0.05);\r\n        options.loss = Utils_1.getOrDefault(options.loss, new Loss_1.MSELoss());\r\n        var baseRate = Utils_1.getOrDefault(options.rate, 0.3);\r\n        options.dropout = Utils_1.getOrDefault(options.dropout, 0);\r\n        options.momentum = Utils_1.getOrDefault(options.momentum, 0);\r\n        options.batchSize = Math.min(dataset.length, Utils_1.getOrDefault(options.batchSize, 1));\r\n        options.ratePolicy = Utils_1.getOrDefault(options.ratePolicy, new Rate_1.FixedRate(baseRate));\r\n        options.log = Utils_1.getOrDefault(options.log, NaN);\r\n        var targetError = options.error <= 0 ? -1 : options.error;\r\n        var start = Date.now();\r\n        // check for errors\r\n        if (options.iterations <= 0 && options.error <= 0) {\r\n            throw new Error(\"At least one of the following options must be specified: error, iterations\");\r\n        }\r\n        var trainingSetSize;\r\n        var trainingSet;\r\n        var testSet;\r\n        if (options.crossValidateTestSize && options.crossValidateTestSize > 0) {\r\n            trainingSetSize = Math.ceil((1 - options.crossValidateTestSize) * dataset.length);\r\n            trainingSet = dataset.slice(0, trainingSetSize);\r\n            testSet = dataset.slice(trainingSetSize);\r\n        }\r\n        else {\r\n            trainingSet = dataset;\r\n            testSet = [];\r\n        }\r\n        var currentTrainingRate;\r\n        var iterationCount = 0;\r\n        var error = 1;\r\n        while (error > targetError && (options.iterations <= 0 || iterationCount < options.iterations)) {\r\n            iterationCount++;\r\n            currentTrainingRate = options.ratePolicy.calc(iterationCount);\r\n            var trainError = this.trainEpoch(trainingSet, options.batchSize, currentTrainingRate, options.momentum, options.loss, options.dropout);\r\n            if (options.clear) {\r\n                this.clear();\r\n            }\r\n            // Checks if cross validation is enabled\r\n            if (options.crossValidateTestSize) {\r\n                error = this.test(testSet, options.loss);\r\n                if (options.clear) {\r\n                    this.clear();\r\n                }\r\n            }\r\n            else {\r\n                error = trainError;\r\n            }\r\n            if ((_a = options.shuffle) !== null && _a !== void 0 ? _a : false) {\r\n                Utils_1.shuffle(dataset);\r\n            }\r\n            if (options.log > 0 && iterationCount % options.log === 0) {\r\n                console.log(\"iteration number\", iterationCount, \"error\", error, \"training rate\", currentTrainingRate);\r\n            }\r\n            if (options.schedule && iterationCount % options.schedule.iterations === 0) {\r\n                options.schedule.function(error, iterationCount);\r\n            }\r\n        }\r\n        if (options.clear) {\r\n            this.clear();\r\n        }\r\n        return {\r\n            error: error,\r\n            iterations: iterationCount,\r\n            time: Date.now() - start\r\n        };\r\n    };\r\n    Network.prototype.trainEpoch = function (dataset, batchSize, trainingRate, momentum, loss, dropoutRate) {\r\n        if (dropoutRate === void 0) { dropoutRate = 0.5; }\r\n        var errorSum = 0;\r\n        for (var i = 0; i < dataset.length; i++) {\r\n            var input = dataset[i].input;\r\n            var correctOutput = dataset[i].output;\r\n            var update = (i + 1) % batchSize === 0 || i + 1 === dataset.length;\r\n            var output = this.activate(input, dropoutRate);\r\n            this.propagate(trainingRate, momentum, update, correctOutput);\r\n            errorSum += loss.calc(correctOutput, output);\r\n        }\r\n        return errorSum / dataset.length;\r\n    };\r\n    Network.prototype.test = function (dataset, loss) {\r\n        if (loss === void 0) { loss = new Loss_1.MSELoss(); }\r\n        var error = 0;\r\n        for (var _i = 0, dataset_1 = dataset; _i < dataset_1.length; _i++) {\r\n            var entry = dataset_1[_i];\r\n            var input = entry.input;\r\n            var target = entry.output;\r\n            var output = this.activate(input, undefined, false);\r\n            error += loss.calc(target, output);\r\n        }\r\n        return error / dataset.length;\r\n    };\r\n    Network.prototype.toJSON = function () {\r\n        var json = {\r\n            nodes: [],\r\n            connections: [],\r\n            inputSize: this.inputSize,\r\n            outputSize: this.outputSize,\r\n        };\r\n        for (var i = 0; i < this.nodes.length; i++) {\r\n            this.nodes[i].index = i;\r\n        }\r\n        this.nodes.forEach(function (node) {\r\n            json.nodes.push(node.toJSON());\r\n            if (node.selfConnection.weight !== 0) {\r\n                json.connections.push(node.selfConnection.toJSON());\r\n            }\r\n        });\r\n        this.connections.forEach(function (conn) { return json.connections.push(conn.toJSON()); });\r\n        return json;\r\n    };\r\n    Network.prototype.evolve = function (dataset, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var targetError, start, neat, error, bestFitness, bestGenome, fittest, fitness;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        if (dataset[0].input.length !== this.inputSize || dataset[0].output.length !== this.outputSize) {\r\n                            throw new Error(\"Dataset input/output size should be same as network input/output size!\");\r\n                        }\r\n                        targetError = 0;\r\n                        if (typeof options.iterations === \"undefined\" && typeof options.error === \"undefined\") {\r\n                            options.iterations = 1000;\r\n                            targetError = 0.05;\r\n                        }\r\n                        else if (options.iterations) {\r\n                            targetError = -1;\r\n                        }\r\n                        else if (options.error) {\r\n                            targetError = options.error;\r\n                            options.iterations = 0;\r\n                        }\r\n                        options.growth = Utils_1.getOrDefault(options.growth, 0.0001);\r\n                        options.loss = Utils_1.getOrDefault(options.loss, new Loss_1.MSELoss());\r\n                        options.amount = Utils_1.getOrDefault(options.amount, 1);\r\n                        options.fitnessPopulation = Utils_1.getOrDefault(options.fitnessPopulation, false);\r\n                        options.maxNodes = Utils_1.getOrDefault(options.maxNodes, Infinity);\r\n                        options.maxConnections = Utils_1.getOrDefault(options.maxConnections, Infinity);\r\n                        options.maxGates = Utils_1.getOrDefault(options.maxGates, Infinity);\r\n                        start = Date.now();\r\n                        options.fitnessFunction = function (dataset, population) {\r\n                            return __awaiter(this, void 0, void 0, function () {\r\n                                var _this = this;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0:\r\n                                            if (!Array.isArray(population)) {\r\n                                                population = [population];\r\n                                            }\r\n                                            return [4 /*yield*/, Promise.all(population.map(function (genome) { return __awaiter(_this, void 0, void 0, function () {\r\n                                                    var score, i;\r\n                                                    var _a, _b, _c;\r\n                                                    return __generator(this, function (_d) {\r\n                                                        score = 0;\r\n                                                        for (i = 0; i < ((_a = options.amount) !== null && _a !== void 0 ? _a : 1); i++) {\r\n                                                            score -= genome.test(dataset, options.loss);\r\n                                                        }\r\n                                                        score -= (_b = options.growth) !== null && _b !== void 0 ? _b : 0.0001 * (genome.nodes.length\r\n                                                            - genome.inputSize\r\n                                                            - genome.outputSize\r\n                                                            + genome.connections.length\r\n                                                            + genome.gates.length);\r\n                                                        genome.score = score / ((_c = options.amount) !== null && _c !== void 0 ? _c : 1);\r\n                                                        return [2 /*return*/];\r\n                                                    });\r\n                                                }); }))];\r\n                                        case 1:\r\n                                            _a.sent();\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            });\r\n                        };\r\n                        options.fitnessPopulation = true;\r\n                        options.template = this;\r\n                        options.input = this.inputSize;\r\n                        options.output = this.outputSize;\r\n                        neat = new NEAT_1.NEAT(dataset, options);\r\n                        error = -Infinity;\r\n                        bestFitness = -Infinity;\r\n                        _d.label = 1;\r\n                    case 1:\r\n                        if (!(error < -targetError && (options.iterations === 0 || neat.generation < ((_a = options.iterations) !== null && _a !== void 0 ? _a : 0)))) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, neat.evolve(undefined, undefined)];\r\n                    case 2:\r\n                        fittest = _d.sent();\r\n                        fitness = fittest.score === undefined ? -Infinity : fittest.score;\r\n                        error = fitness + options.growth * (fittest.nodes.length\r\n                            - fittest.inputSize\r\n                            - fittest.outputSize\r\n                            + fittest.connections.length\r\n                            + fittest.gates.length);\r\n                        if (fitness > bestFitness) {\r\n                            bestFitness = fitness;\r\n                            bestGenome = fittest;\r\n                        }\r\n                        if (((_b = options.log) !== null && _b !== void 0 ? _b : 0) > 0 && neat.generation % ((_c = options.log) !== null && _c !== void 0 ? _c : 0) === 0) {\r\n                            console.log(\"iteration\", neat.generation, \"fitness\", fitness, \"error\", -error);\r\n                        }\r\n                        if (options.schedule && neat.generation % options.schedule.iterations === 0) {\r\n                            options.schedule.function(fitness, -error, neat.generation);\r\n                        }\r\n                        return [3 /*break*/, 1];\r\n                    case 3:\r\n                        if (bestGenome !== undefined) {\r\n                            this.nodes = bestGenome.nodes;\r\n                            this.connections = bestGenome.connections;\r\n                            this.gates = bestGenome.gates;\r\n                            if (options.clear) {\r\n                                this.clear();\r\n                            }\r\n                        }\r\n                        return [2 /*return*/, {\r\n                                error: -error,\r\n                                iterations: neat.generation,\r\n                                time: Date.now() - start,\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Network;\r\n}());\r\nexports.Network = Network;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Activation_1 = require(\"../methods/Activation\");\r\nvar Connection_1 = require(\"./Connection\");\r\nvar Utils_1 = require(\"../methods/Utils\");\r\nvar Node = /** @class */ (function () {\r\n    function Node(type) {\r\n        if (type === void 0) { type = NodeType.HIDDEN; }\r\n        this.type = type;\r\n        this.bias = Utils_1.randDouble(-1, 1);\r\n        this.squash = new Activation_1.LogisticActivation();\r\n        this.activation = 0;\r\n        this.state = 0;\r\n        this.old = 0;\r\n        this.mask = 1;\r\n        this.deltaBiasPrevious = 0;\r\n        this.deltaBiasTotal = 0;\r\n        this.incoming = [];\r\n        this.outgoing = [];\r\n        this.gated = [];\r\n        this.selfConnection = new Connection_1.Connection(this, this, 0);\r\n        this.errorResponsibility = 0;\r\n        this.errorProjected = 0;\r\n        this.errorGated = 0;\r\n        this.index = NaN;\r\n    }\r\n    Node.fromJSON = function (json) {\r\n        var node = new Node();\r\n        node.bias = json.bias;\r\n        node.type = json.type;\r\n        node.squash = Activation_1.Activation.getActivation(json.squash);\r\n        node.mask = json.mask;\r\n        node.index = json.index;\r\n        return node;\r\n    };\r\n    Node.prototype.clear = function () {\r\n        for (var _i = 0, _a = this.incoming; _i < _a.length; _i++) {\r\n            var connection = _a[_i];\r\n            connection.eligibility = 0;\r\n            connection.xTraceNodes = [];\r\n            connection.xTraceValues = [];\r\n        }\r\n        for (var _b = 0, _c = this.gated; _b < _c.length; _b++) {\r\n            var connection = _c[_b];\r\n            connection.gain = 0;\r\n        }\r\n        this.errorResponsibility = this.errorProjected = this.errorGated = 0;\r\n        this.old = this.state = this.activation = 0;\r\n    };\r\n    Node.prototype.mutateBias = function (method) {\r\n        this.bias += Utils_1.randDouble(method.min, method.max);\r\n    };\r\n    Node.prototype.mutateActivation = function () {\r\n        var newActivationType;\r\n        do {\r\n            newActivationType = Utils_1.pickRandom(Activation_1.ALL_ACTIVATIONS);\r\n        } while (newActivationType === this.squash.type);\r\n        this.squash = Activation_1.Activation.getActivation(newActivationType);\r\n    };\r\n    Node.prototype.isProjectedBy = function (node) {\r\n        if (node === this) {\r\n            return this.selfConnection.weight !== 0;\r\n        }\r\n        else {\r\n            return Utils_1.anyMatch(this.incoming.map(function (conn) { return conn.from; }), node);\r\n        }\r\n    };\r\n    Node.prototype.isProjectingTo = function (node) {\r\n        if (node === this) {\r\n            return this.selfConnection.weight !== 0;\r\n        }\r\n        else {\r\n            return Utils_1.anyMatch(this.outgoing.map(function (conn) { return conn.to; }), node);\r\n        }\r\n    };\r\n    Node.prototype.addGate = function (connection) {\r\n        this.gated.push(connection);\r\n        connection.gateNode = this;\r\n    };\r\n    Node.prototype.removeGate = function (connection) {\r\n        Utils_1.remove(this.gated, connection);\r\n        connection.gateNode = null;\r\n        connection.gain = 1;\r\n    };\r\n    Node.prototype.connect = function (target, weight, twoSided) {\r\n        if (weight === void 0) { weight = 0; }\r\n        if (twoSided === void 0) { twoSided = false; }\r\n        if (target === this) {\r\n            this.selfConnection.weight = weight || 1;\r\n            return this.selfConnection;\r\n        }\r\n        else if (this.isProjectingTo(target)) {\r\n            throw new ReferenceError();\r\n        }\r\n        else {\r\n            var connection = new Connection_1.Connection(this, target, weight);\r\n            this.outgoing.push(connection);\r\n            target.incoming.push(connection);\r\n            if (twoSided) {\r\n                target.connect(this);\r\n            }\r\n            return connection;\r\n        }\r\n    };\r\n    Node.prototype.disconnect = function (node, twoSided) {\r\n        if (twoSided === void 0) { twoSided = false; }\r\n        if (node === this) {\r\n            this.selfConnection.weight = 0;\r\n            return this.selfConnection;\r\n        }\r\n        for (var _i = 0, _a = this.outgoing; _i < _a.length; _i++) {\r\n            var connection = _a[_i];\r\n            if (connection.to !== node) {\r\n                continue;\r\n            }\r\n            Utils_1.remove(this.outgoing, connection);\r\n            Utils_1.remove(connection.to.incoming, connection);\r\n            if (connection.gateNode !== undefined && connection.gateNode != null) {\r\n                connection.gateNode.removeGate(connection);\r\n            }\r\n            if (twoSided) {\r\n                node.disconnect(this);\r\n            }\r\n            return connection;\r\n        }\r\n        throw new Error(\"No connection found!\");\r\n    };\r\n    Node.prototype.propagate = function (target, momentum, rate, update) {\r\n        // TODO: check for errors\r\n        if (target !== undefined && Number.isFinite(target)) {\r\n            this.errorResponsibility = this.errorProjected = target - this.activation;\r\n        }\r\n        else {\r\n            this.errorProjected = 0;\r\n            for (var _i = 0, _a = this.outgoing; _i < _a.length; _i++) {\r\n                var connection = _a[_i];\r\n                this.errorProjected += connection.to.errorResponsibility * connection.weight * connection.gain;\r\n            }\r\n            this.errorProjected *= this.derivative || 1;\r\n            this.errorGated = 0;\r\n            for (var _b = 0, _c = this.gated; _b < _c.length; _b++) {\r\n                var connection = _c[_b];\r\n                var node = connection.to;\r\n                var influence = void 0;\r\n                if (node.selfConnection.gateNode === this) {\r\n                    influence = node.old + connection.weight * connection.from.activation;\r\n                }\r\n                else {\r\n                    influence = connection.weight * connection.from.activation;\r\n                }\r\n                this.errorGated += node.errorResponsibility * influence;\r\n            }\r\n            this.errorGated *= this.derivative || 1;\r\n            this.errorResponsibility = this.errorProjected + this.errorGated;\r\n        }\r\n        for (var _d = 0, _e = this.incoming; _d < _e.length; _d++) {\r\n            var connection = _e[_d];\r\n            var gradient = this.errorProjected * connection.eligibility;\r\n            for (var j = 0; j < connection.xTraceNodes.length; j++) {\r\n                var node = connection.xTraceNodes[j];\r\n                gradient += node.errorResponsibility * connection.xTraceValues[j];\r\n            }\r\n            connection.deltaWeightsTotal += rate * gradient * this.mask;\r\n            if (update) {\r\n                connection.deltaWeightsTotal += momentum * connection.deltaWeightsPrevious;\r\n                connection.weight += connection.deltaWeightsTotal;\r\n                connection.deltaWeightsPrevious = connection.deltaWeightsTotal;\r\n                connection.deltaWeightsTotal = 0;\r\n            }\r\n        }\r\n        this.deltaBiasTotal += rate * this.errorResponsibility;\r\n        if (update) {\r\n            this.deltaBiasTotal += momentum * this.deltaBiasPrevious;\r\n            this.bias += this.deltaBiasTotal;\r\n            this.deltaBiasPrevious = this.deltaBiasTotal;\r\n            this.deltaBiasTotal = 0;\r\n        }\r\n        return {\r\n            responsibility: this.errorResponsibility,\r\n            projected: this.errorProjected,\r\n            gated: this.errorGated,\r\n        };\r\n    };\r\n    Node.prototype.activate = function (input, trace) {\r\n        var _this = this;\r\n        if (input === void 0) { input = null; }\r\n        if (trace === void 0) { trace = true; }\r\n        // TODO: check for errors\r\n        if (input !== null && Number.isFinite(input)) {\r\n            return this.activation = input;\r\n        }\r\n        if (trace) {\r\n            this.old = this.state;\r\n            this.state = this.selfConnection.gain * this.selfConnection.weight * this.state + this.bias;\r\n            this.incoming.forEach(function (conn) {\r\n                _this.state += conn.from.activation * conn.weight * conn.gain;\r\n            });\r\n            this.activation = this.squash.calc(this.state, false) * this.mask;\r\n            this.derivative = this.squash.calc(this.state, true);\r\n            var nodes_1 = [];\r\n            var influences_1 = [];\r\n            this.gated.forEach(function (connection) {\r\n                connection.gain = _this.activation;\r\n                var index = nodes_1.indexOf(connection.to);\r\n                if (index > -1) {\r\n                    influences_1[index] += connection.weight * connection.from.activation;\r\n                }\r\n                else {\r\n                    nodes_1.push(connection.to);\r\n                    if (connection.to.selfConnection.gateNode === _this) {\r\n                        influences_1.push(connection.weight * connection.from.activation + connection.to.old);\r\n                    }\r\n                    else {\r\n                        influences_1.push(connection.weight * connection.from.activation);\r\n                    }\r\n                }\r\n            });\r\n            for (var _i = 0, _a = this.incoming; _i < _a.length; _i++) {\r\n                var connection = _a[_i];\r\n                connection.eligibility = this.selfConnection.gain * this.selfConnection.weight * connection.eligibility + connection.from.activation * connection.gain;\r\n                for (var i = 0; i < nodes_1.length; i++) {\r\n                    var node = nodes_1[i];\r\n                    var influence = influences_1[i];\r\n                    var index = connection.xTraceNodes.indexOf(node);\r\n                    if (index > -1)\r\n                        connection.xTraceValues[index] = node.selfConnection.gain * node.selfConnection.weight * connection.xTraceValues[index] + this.derivative * connection.eligibility * influence;\r\n                    else {\r\n                        connection.xTraceNodes.push(node);\r\n                        connection.xTraceValues.push(this.derivative * connection.eligibility * influence);\r\n                    }\r\n                }\r\n            }\r\n            return this.activation;\r\n        }\r\n        else {\r\n            if (this.isInputNode())\r\n                return this.activation = 0;\r\n            this.state = this.selfConnection.gain * this.selfConnection.weight * this.state + this.bias;\r\n            for (var _b = 0, _c = this.incoming; _b < _c.length; _b++) {\r\n                var connection = _c[_b];\r\n                this.state += connection.from.activation * connection.weight * connection.gain;\r\n            }\r\n            this.activation = this.squash.calc(this.state, false);\r\n            for (var _d = 0, _e = this.gated; _d < _e.length; _d++) {\r\n                var connection = _e[_d];\r\n                connection.gain = this.activation;\r\n            }\r\n            return this.activation;\r\n        }\r\n    };\r\n    Node.prototype.toJSON = function () {\r\n        return {\r\n            bias: this.bias,\r\n            type: this.type,\r\n            squash: this.squash.type,\r\n            mask: this.mask,\r\n            index: this.index\r\n        };\r\n    };\r\n    Node.prototype.isInputNode = function () {\r\n        return this.type === NodeType.INPUT;\r\n    };\r\n    Node.prototype.isHiddenNode = function () {\r\n        return this.type === NodeType.HIDDEN;\r\n    };\r\n    Node.prototype.isOutputNode = function () {\r\n        return this.type === NodeType.OUTPUT;\r\n    };\r\n    return Node;\r\n}());\r\nexports.Node = Node;\r\nvar NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"INPUT\"] = 0] = \"INPUT\";\r\n    NodeType[NodeType[\"HIDDEN\"] = 1] = \"HIDDEN\";\r\n    NodeType[NodeType[\"OUTPUT\"] = 2] = \"OUTPUT\";\r\n})(NodeType = exports.NodeType || (exports.NodeType = {}));\r\n","\"use strict\";\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Layer_1 = require(\"./architecture/layer/Layer\");\r\nexports.Layer = Layer_1.Layer;\r\nvar ConvolutionLayer_1 = require(\"./architecture/layer/ConvolutionLayer\");\r\nexports.ConvolutionLayer = ConvolutionLayer_1.ConvolutionLayer;\r\nvar DenseLayer_1 = require(\"./architecture/layer/DenseLayer\");\r\nexports.DenseLayer = DenseLayer_1.DenseLayer;\r\nvar GaussianNoiseLayer_1 = require(\"./architecture/layer/GaussianNoiseLayer\");\r\nexports.GaussianNoiseLayer = GaussianNoiseLayer_1.GaussianNoiseLayer;\r\nvar InputLayer_1 = require(\"./architecture/layer/InputLayer\");\r\nexports.InputLayer = InputLayer_1.InputLayer;\r\nvar LSTMLayer_1 = require(\"./architecture/layer/LSTMLayer\");\r\nexports.LSTMLayer = LSTMLayer_1.LSTMLayer;\r\nvar PoolLayer_1 = require(\"./architecture/layer/PoolLayer\");\r\nexports.PoolLayer = PoolLayer_1.PoolLayer;\r\nvar RNNLayer_1 = require(\"./architecture/layer/RNNLayer\");\r\nexports.RNNLayer = RNNLayer_1.RNNLayer;\r\nvar Architect_1 = require(\"./architecture/Architect\");\r\nexports.Architect = Architect_1.Architect;\r\nvar Connection_1 = require(\"./architecture/Connection\");\r\nexports.Connection = Connection_1.Connection;\r\nvar Network_1 = require(\"./architecture/Network\");\r\nexports.Network = Network_1.Network;\r\nvar node_1 = require(\"./architecture/node\");\r\nexports.Node = node_1.Node;\r\nvar Activation = __importStar(require(\"./methods/Activation\"));\r\nexports.Activation = Activation;\r\nvar Loss = __importStar(require(\"./methods/Loss\"));\r\nexports.Loss = Loss;\r\nvar Mutation = __importStar(require(\"./methods/Mutation\"));\r\nexports.Mutation = Mutation;\r\nvar Rate = __importStar(require(\"./methods/Rate\"));\r\nexports.Rate = Rate;\r\nvar Selection = __importStar(require(\"./methods/Selection\"));\r\nexports.Selection = Selection;\r\nvar NEAT_1 = require(\"./NEAT\");\r\nexports.NEAT = NEAT_1.NEAT;\r\n"]}